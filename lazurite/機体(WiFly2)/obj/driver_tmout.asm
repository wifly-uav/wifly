;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : driver_tmout.c

	type (ML620504F) 
	model small, near
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$TABml620504f_tmout_to_pin$driver_tmout segment table 2h #0h
	$$drv_analogWrite$driver_tmout segment code 2h #0h
CVERSION 3.53.1
CGLOBAL 01H 03H 0000H "drv_analogWrite" 08H 02H 2EH 01H 83H 16H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001DH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 61H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 62H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 63H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 64H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 65H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 66H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 67H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CGLOBAL 01H 00H 0010H "ml620504f_tmout_to_pin" 05H 01H 10H 00H 00H 00H
CGLOBAL 02H 00H 0000H "ml620504f_pin_to_bit" 05H 01H 00H 00H 00H 00H
CSGLOBAL 42H 0001H "_pwm_ch_flag" 02H 00H 00H
CGLOBAL 02H 01H 0000H "ml620504f_pin_to_port" 05H 01H 00H 00H 00H 01H
CFILE 0001H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0002H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0003H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0004H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0005H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 0006H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 0007H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0008H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 0009H 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000AH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000BH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 000CH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 000EH 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 000FH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0011H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0012H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0013H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0014H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0015H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0016H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0017H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0018H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 0019H 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001AH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001BH 00000028H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\ml620q504\\driver_gpio.h"
CFILE 001CH 00000028H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\ml620q504\\driver_pin_assignment.h"
CFILE 001DH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\common\\rdwr_reg.h"
CFILE 0000H 00000118H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\ml620q504\\driver_tmout.c"

	rseg $$drv_analogWrite$driver_tmout
CFUNCTION 302

_drv_analogWrite	:
CBLOCK 302 1 103

;;{
CLINEA 0000H 0001H 0067H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_ftma_b$6	set	-7
	_adr16$2	set	-6
	_port$14	set	-2
	_use_ch$8	set	-3
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-08
	push	xr8
	push	xr4
	push	bp
	mov	er8,	er0
	mov	r10,	r2
CBLOCK 302 2 103
CRET 0014H
CARGUMENT 46H 0001H 001CH "pwmnum" 02H 00H 00H
CARGUMENT 46H 0001H 001DH "ftm" 02H 00H 00H
CARGUMENT 46H 0001H 001EH "val" 02H 00H 00H
CLOCAL 46H 0002H 0027H 0002H "adr8" 04H 03H 00H 00H 00H
CLOCAL 42H 0002H 0006H 0002H "adr16" 04H 03H 00H 00H 08H
CLOCAL 46H 0001H 0018H 0002H "ftm_ch" 02H 00H 00H
CLOCAL 42H 0001H 0007H 0002H "ftma_b" 02H 00H 00H
CLOCAL 42H 0001H 0003H 0002H "use_ch" 02H 00H 00H
CLOCAL 46H 0001H 001FH 0002H "use_this" 02H 00H 00H
CLOCAL 4AH 0002H 0000H 0002H "adr8_out" 04H 03H 00H 00H 00H
CLOCAL 42H 0002H 0002H 0002H "port" 04H 03H 00H 00H 00H
CLOCAL 46H 0001H 0019H 0002H "bit" 02H 00H 00H

;;	if(pwmnum > ML620504F_MAX_TMOUT_NO) return;
CLINEA 0000H 0001H 0073H 0002H 002CH
	cmp	r0,	#0fh
	ble	_$L1
CBLOCKEND 302 2 268

;;}
CLINEA 0000H 0001H 010CH 0001H 0001H
_$L0 :
	pop	bp
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	if(pwmnum > ML620504F_MAX_TMOUT_NO) return;
CLINEA 0000H 0000H 0073H 0002H 002CH
_$L1 :

;;	if(ftm > ML620504F_MAX_FTM_NO) return;
CLINEA 0000H 0001H 0074H 0002H 0027H
	cmp	r1,	#07h
	bgt	_$L0

;;	ftm_ch = (unsigned char)(ftm >> 1);		// timer channel
CLINEA 0000H 0001H 007AH 0002H 0036H
	mov	r2,	r9
	mov	r3,	#00h
	mov	er0,	er2
	srlc	r0,	#01h
	mov	r4,	r0	;; _lftm_ch$4

;;	ftma_b = (unsigned char)(ftm & 0x01);	// A = 0, B = 1
CLINEA 0000H 0001H 007BH 0002H 0036H
	mov	r0,	r9
	and	r0,	#01h
	st	r0,	_ftma_b$6[fp]

;;	if( use_this == 0 ) use_this = false;
CLINEA 0000H 0001H 007EH 0002H 0026H
	l	r0,	NEAR __pwm_ch_flag
	cmp	r2,	#07h
	bgt	_$M1
	srl	r0,	r9
	b	_$M2
_$M1 :
	mov	r0,	#00h
_$M2 :
	tb	r0.0
	bne	_$L5
	mov	r0,	#00h

;;	else use_this = true;
CLINEA 0000H 0001H 007FH 0002H 0016H
	bal	_$L7
_$L5 :
	mov	r0,	#01h
_$L7 :
	mov	r11,	r0	;; _luse_this$10

;;	adr16 += (ftm_ch << 4);
CLINEA 0000H 0001H 0082H 0002H 0018H
	mov	r0,	r4
	mov	r1,	#00h
	sllc	r1,	#04h
	sll	r0,	#04h
	add	er0,	er0
	add	r0,	#00h
	addc	r1,	#0f4h
	st	er0,	_adr16$2[fp]

;;	adr8 = (CHAR *)adr16;					// seting address of FTM
CLINEA 0000H 0001H 0083H 0002H 0033H
	mov	er6,	er0	;; _ladr8$0

;;	port = (unsigned char *)ml620504f_pin_to_port[ml620504f_tmout_to_pin[pwmnum]];		// setting pointer of GPIO
CLINEA 0000H 0001H 0085H 0002H 006BH
	mov	r0,	r8
	mov	r1,	#00h
	l	r2,	NEAR _ml620504f_tmout_to_pin[er0]
	mov	r3,	#00h
	mov	er0,	er2
	add	er0,	er2
	l	er0,	NEAR _ml620504f_pin_to_port[er0]
	st	er0,	_port$14[fp]

;;	bit = ml620504f_pin_to_bit[ml620504f_tmout_to_pin[pwmnum]];			// setting bit of GPIO
CLINEA 0000H 0001H 0086H 0002H 0055H
	l	r0,	NEAR _ml620504f_pin_to_bit[er2]
	mov	r5,	r0	;; _lbit$16

;;	if( (val == 0) || (val >= 255) )
CLINEA 0000H 0001H 008BH 0002H 0021H
	cmp	r10,	#00h
	beq	_$L9
	cmp	r10,	#0ffh
	bge	_$M15
	b	_$L8
_$M15 :
_$L9 :
CBLOCK 302 3 140

;;		drv_digitalWrite(ml620504f_tmout_to_pin[pwmnum], (unsigned char)(val & HIGH));
CLINEA 0000H 0001H 008DH 0003H 0050H
	mov	r1,	r10
	and	r1,	#01h
	mov	r2,	r8
	mov	r3,	#00h
	l	r0,	NEAR _ml620504f_tmout_to_pin[er2]
	bl	_drv_digitalWrite

;;		drv_pinMode(ml620504f_tmout_to_pin[pwmnum],OUTPUT);
CLINEA 0000H 0001H 008EH 0003H 0035H
	mov	r1,	#01h
	mov	r2,	r8
	mov	r3,	#00h
	l	r0,	NEAR _ml620504f_tmout_to_pin[er2]
	bl	_drv_pinMode

;;		if(use_this == true)
CLINEA 0000H 0001H 0093H 0003H 0016H
	cmp	r11,	#01h
	bne	_$L0
CBLOCK 302 4 148

;;			*(port+4) &= ~bit;										// PnMOD0 = 0
CLINEA 0000H 0001H 0096H 0004H 002CH
	l	bp,	_port$14[fp]
	mov	r0,	r5
	xor	r0,	#0ffh
	l	r1,	4[bp]
	and	r1,	r0
	st	r1,	4[bp]

;;			*(port+5) &= ~bit;										// PnMOD1 = 0
CLINEA 0000H 0001H 009BH 0004H 002CH
	l	bp,	_port$14[fp]
	mov	r0,	r5
	xor	r0,	#0ffh
	l	r1,	5[bp]
	and	r1,	r0
	st	r1,	5[bp]

;;			_pwm_ch_flag &= ~(0x01 << ftm);
CLINEA 0000H 0001H 00A1H 0004H 0022H
	mov	er0,	#1 
	mov	r2,	r9
_$M4 :
	cmp	r2,	#07h
	ble	_$M3
	sllc	r1,	#07h
	sll	r0,	#07h
	add	r2,	#0f9h
	bne	_$M4
_$M3 :
	sll	r0,	r2
	xor	r0,	#0ffh
	l	r1,	NEAR __pwm_ch_flag
	and	r1,	r0
	st	r1,	NEAR __pwm_ch_flag

;;			if( use_ch == 0)
CLINEA 0000H 0001H 00A8H 0004H 0013H
	mov	r0,	r4
	sll	r0,	#01h
	mov	r2,	r1
	cmp	r0,	#07h
	bgt	_$M5
	srl	r2,	r0
	b	_$M6
_$M5 :
	mov	r2,	#00h
_$M6 :
	and	r2,	#03h
	beq	_$M16
	b	_$L0
_$M16 :
CBLOCK 302 5 169

;;				*(adr8 + FTM_FTnCON0) = 0x00;							// Stop FTM
CLINEA 0000H 0001H 00ABH 0005H 0033H
	mov	r0,	#00h
	st	r0,	0ah[er6]

;;				BLKCON1 |= (0x01 << ftm_ch);							// Enabling PWM block
CLINEA 0000H 0001H 00B1H 0005H 003CH
	mov	er0,	#1 
	mov	r2,	r4
_$M8 :
	cmp	r2,	#07h
	ble	_$M7
	sllc	r1,	#07h
	sll	r0,	#07h
	add	r2,	#0f9h
	bne	_$M8
_$M7 :
	sll	r0,	r2
	l	r1,	0f069h
	or	r1,	r0
	st	r1,	0f069h
CBLOCKEND 302 5 181

;;			}
CLINEA 0000H 0000H 00B5H 0004H 0004H
CBLOCKEND 302 4 183

;;		return;		// end of stoping process
CLINEA 0000H 0001H 00B8H 0003H 0024H
	b	_$L0
CBLOCKEND 302 3 185

;;	}
CLINEA 0000H 0000H 00B9H 0002H 0002H
_$L8 :

;;	if( use_ch == 0)	use_ch = false;		// not use
CLINEA 0000H 0001H 00C0H 0002H 002DH
	mov	r0,	r4
	sll	r0,	#01h
	l	r2,	NEAR __pwm_ch_flag
	cmp	r0,	#07h
	bgt	_$M9
	srl	r2,	r0
	b	_$M10
_$M9 :
	mov	r2,	#00h
_$M10 :
	and	r2,	#03h
	bne	_$L19
	mov	r0,	#00h

;;	else	use_ch = true;		// use
CLINEA 0000H 0001H 00C1H 0002H 001CH
	bal	_$L21
_$L19 :
	mov	r0,	#01h
_$L21 :
	st	r0,	_use_ch$8[fp]

;;	if(use_ch == false)
CLINEA 0000H 0001H 00C4H 0002H 0014H
	mov	r0,	r0
	bne	_$L22
CBLOCK 302 6 197

;;		BLKCON1 &= (~(0x01 << ftm_ch));							// Enabling PWM block
CLINEA 0000H 0001H 00C7H 0003H 003DH
	mov	er0,	#1 
	mov	r2,	r4
_$M12 :
	cmp	r2,	#07h
	ble	_$M11
	sllc	r1,	#07h
	sll	r0,	#07h
	add	r2,	#0f9h
	bne	_$M12
_$M11 :
	sll	r0,	r2
	xor	r0,	#0ffh
	l	r1,	0f069h
	and	r1,	r0
	st	r1,	0f069h

;;		*(adr8 + FTM_FTnMODL) = 0x02;							// set PWM1 mode
CLINEA 0000H 0001H 00CCH 0003H 0036H
	mov	r0,	#02h
	st	r0,	0ch[er6]

;;		*(adr8 + FTM_FTnCLKL) = 0x61;							// set PWM base clock = 1/64 OSCLK
CLINEA 0000H 0001H 00D1H 0003H 0048H
	mov	r0,	#061h
	st	r0,	0eh[er6]

;;		*(adr16 + FTM_FTnP)  = 0x01FF;							// set PWM frequency
CLINEA 0000H 0001H 00D6H 0003H 003BH
	l	bp,	_adr16$2[fp]
	mov	r0,	#0ffh
	mov	r1,	#01h
	st	er0,	[bp]
CBLOCKEND 302 6 218

;;	}
CLINEA 0000H 0000H 00DAH 0002H 0002H
_$L22 :

;;	*(adr16  + FTM_FTnEA + ftma_b)  = (val << 1);			// set PWM value
CLINEA 0000H 0001H 00DBH 0002H 0041H
	mov	r0,	r10
	mov	r1,	#00h
	sllc	r1,	#01h
	sll	r0,	#01h
	l	r2,	_ftma_b$6[fp]
	mov	r3,	#00h
	add	er2,	er2
	l	bp,	_adr16$2[fp]
	add	er2,	bp
	st	er0,	02h[er2]

;;	if(use_this == false)	// If this channel of PWM is not use...
CLINEA 0000H 0001H 00E2H 0002H 003EH
	cmp	r11,	#00h
	bne	_$L24
CBLOCK 302 7 227

;;		*(adr8_out + pwmnum) = ftm;								// assign PWM to FTM0-F;
CLINEA 0000H 0001H 00E4H 0003H 003DH
	mov	r0,	r8
	mov	r1,	#00h
	st	r9,	0f480h[er0]

;;		drv_pinMode(ml620504f_tmout_to_pin[pwmnum],OUTPUT);									// set OUTPUT mode to the pin.
CLINEA 0000H 0001H 00E9H 0003H 005CH
	mov	r1,	#01h
	mov	r2,	r8
	mov	r3,	#00h
	l	r0,	NEAR _ml620504f_tmout_to_pin[er2]
	bl	_drv_pinMode

;;		*(port+4) |= bit;										// PnMOD0 = 1 (TMOUTn mode)
CLINEA 0000H 0001H 00EBH 0003H 0038H
	l	bp,	_port$14[fp]
	l	r0,	4[bp]
	or	r0,	r5
	st	r0,	4[bp]

;;		*(port+5) |= bit;										// PnMOD1 = 1 (TMOUTn mode)
CLINEA 0000H 0001H 00F0H 0003H 0038H
	l	bp,	_port$14[fp]
	l	r0,	5[bp]
	or	r0,	r5
	st	r0,	5[bp]
CBLOCKEND 302 7 244

;;	}
CLINEA 0000H 0000H 00F4H 0002H 0002H
_$L24 :

;;	if(use_ch == false)
CLINEA 0000H 0001H 00F6H 0002H 0014H
	l	r0,	_use_ch$8[fp]
	bne	_$L26
CBLOCK 302 8 247

;;		*(adr8 + FTM_FTnCON0) = 0x01;							// Start FTM, if PWM channel have been not started yet.
CLINEA 0000H 0001H 00F9H 0003H 005DH
	mov	r0,	#01h
	st	r0,	0ah[er6]
CBLOCKEND 302 8 253

;;	else
CLINEA 0000H 0001H 00FEH 0002H 0005H
	bal	_$L28
_$L26 :
CBLOCK 302 9 255

;;		*(adr8 + FTM_FTnCON1) = 0x01;							// Update FTM data, if PWM channel is turned on already.
CLINEA 0000H 0001H 0100H 0003H 005EH
	mov	r0,	#01h
	st	r0,	0bh[er6]
CBLOCKEND 302 9 260

;;	}
CLINEA 0000H 0000H 0104H 0002H 0002H
_$L28 :

;;	_pwm_ch_flag |= (0x01 << ftm);		// set flag
CLINEA 0000H 0001H 0106H 0002H 002CH
	mov	er0,	#1 
	mov	r2,	r9
_$M14 :
	cmp	r2,	#07h
	ble	_$M13
	sllc	r1,	#07h
	sll	r0,	#07h
	add	r2,	#0f9h
	bne	_$M14
_$M13 :
	sll	r0,	r2
	l	r1,	NEAR __pwm_ch_flag
	or	r1,	r0
	st	r1,	NEAR __pwm_ch_flag

;;	return;
CLINEA 0000H 0001H 010BH 0002H 0008H
	b	_$L0
CBLOCKEND 302 1 268
CFUNCTIONEND 302

	public _ml620504f_tmout_to_pin
	public _drv_analogWrite
	extrn table near : _ml620504f_pin_to_bit
	extrn code near : _drv_digitalWrite
	extrn code near : _drv_pinMode
	extrn table near : _ml620504f_pin_to_port
	extrn code near : _main

	rseg $$NINITTAB
	db	00h

	rseg $$TABml620504f_tmout_to_pin$driver_tmout
_ml620504f_tmout_to_pin :
	db	02h
	db	03h
	db	0ah
	db	0bh
	db	0eh
	db	0fh
	db	012h
	db	013h
	db	016h
	db	017h
	db	01ah
	db	01bh
	db	01eh
	db	01fh
	db	022h
	db	023h

	rseg $$NINITVAR
__pwm_ch_flag :
	ds	01h

	rseg $$NINITTAB
	align

	rseg $$NINITVAR
	align

	end
