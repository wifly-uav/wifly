;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : wire0.c

	type (ML620504F) 
	model small, near
	$$NVARwire0 segment data 2h #0h
	$$TABWire0$wire0 segment table 2h #0h
	$$_wire0_available$wire0 segment code 2h #0h
	$$_wire0_begin$wire0 segment code 2h #0h
	$$_wire0_beginTransmission$wire0 segment code 2h #0h
	$$_wire0_endTransmission$wire0 segment code 2h #0h
	$$_wire0_read$wire0 segment code 2h #0h
	$$_wire0_requestFrom$wire0 segment code 2h #0h
	$$_wire0_write$wire0 segment code 2h #0h
	$$_wire0_write_byte$wire0 segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 03H 0000H "_wire0_begin" 08H 02H 40H 01H 81H 02H 00H 00H 07H
CSGLOBAL 02H 0000H "_wire0_write" 08H 02H 44H 01H 81H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "_wire0_available" 08H 02H 42H 01H 80H 00H 00H 00H 01H
CSGLOBAL 02H 0000H "_wire0_endTransmission" 08H 02H 46H 01H 81H 06H 00H 00H 00H
CSGLOBAL 02H 0000H "_wire0_write_byte" 08H 02H 45H 01H 80H 00H 00H 00H 01H
CSGLOBAL 02H 0000H "_wire0_requestFrom" 08H 02H 41H 01H 81H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "_wire0_read" 08H 02H 43H 01H 80H 00H 00H 00H 01H
CSGLOBAL 03H 0000H "_wire0_beginTransmission" 08H 02H 47H 01H 81H 02H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001FH 0003H 00000022H "_Notag"
CSTRUCTMEM 42H 00000020H 00000000H "buffer" 05H 01H 20H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "index" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000021H "length" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0020H 0002H 00000044H "_Notag"
CSTRUCTMEM 43H 00000022H 00000000H "tx" 04H 00H 05H 1FH 00H
CSTRUCTMEM 43H 00000022H 00000022H "rx" 04H 00H 05H 1FH 00H
CSTRUCTTAG 0000H 0000H 001EH 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "requestFrom" 0AH 03H 00H 02H 2CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "beginTransmission" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000AH "write_byte" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000CH "write" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "endTransmission" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0FDH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0FEH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0FFH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 00H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 02H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 04H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 06H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 08H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 09H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 0AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 0BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 10H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 12H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 14H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 16H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0010H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001BH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 11H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0019H 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0007H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 07H 00H
CSTRUCTTAG 0000H 0000H 000BH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 07H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0014H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000EH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000DH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 0FH 00H
CSTRUCTTAG 0000H 0000H 0012H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 11H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0DH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0DH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0013H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0015H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0BH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 12H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 13H 00H
CSTRUCTTAG 0000H 0000H 000CH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0004H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0003H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 70H 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0002H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0001H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 4AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 4BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 4CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 4DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 4EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 4FH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 50H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 51H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 52H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 53H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 54H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 55H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 56H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 57H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 58H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0011H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 10H 00H
CUNIONTAG 0000H 0000H 000FH 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 001DH 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0017H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0016H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000AH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 0009H 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 06H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 16H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0BH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "ptrdiff_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 19H 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 07H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "TwoWire0" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "WIRE_PARAM" 04H 00H 05H 1FH 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 75H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 74H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 77H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 76H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 1DH 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 09H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CGLOBAL 01H 01H 0010H "Wire0" 04H 00H 05H 1EH 00H
CSGLOBAL 43H 0044H "wire0" 04H 00H 05H 20H 00H
CFILE 0001H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0002H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0003H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0004H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0005H 00000218H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\binary.h"
CFILE 0006H 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 0007H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 0008H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 0009H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 000AH 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000BH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000CH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 000EH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 000FH 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0011H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0012H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0014H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0015H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0016H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0017H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0018H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0019H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001AH 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001BH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001CH 00000037H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\SUB_GHZ\\hwif\\wire0.h"
CFILE 001DH 00000057H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_i2c.h"
CFILE 001EH 0000001EH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stddef.h"
CFILE 0000H 000000C4H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\SUB_GHZ\\hwif\\wire0.c"

	rseg $$_wire0_begin$wire0
CFUNCTION 320

__wire0_begin	:
CBLOCK 320 1 91

;;{
CLINEA 0000H 0001H 005BH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 320 2 91
CRET 0000H

;;	i2c_init(0);
CLINEA 0000H 0001H 005CH 0002H 000DH
	mov	r0,	#00h
	bl	_i2c_init

;;	i2c_begin(0);
CLINEA 0000H 0001H 005DH 0002H 000EH
	mov	r0,	#00h
	bl	_i2c_begin
CBLOCKEND 320 2 95

;;}
CLINEA 0000H 0000H 005FH 0001H 0001H
	pop	pc
CBLOCKEND 320 1 95
CFUNCTIONEND 320


	rseg $$_wire0_beginTransmission$wire0
CFUNCTION 327

__wire0_beginTransmission	:
CBLOCK 327 1 99

;;{
CLINEA 0000H 0001H 0063H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 327 2 99
CRET 0000H
CARGUMENT 46H 0001H 0014H "address" 02H 00H 00H

;;	i2c_set_address(0, address);					// set I2C address
CLINEA 0000H 0001H 0065H 0002H 0034H
	mov	r1,	r0
	mov	r0,	#00h
	bl	_i2c_set_address

;;	wire0.tx.index = 0;
CLINEA 0000H 0001H 0066H 0002H 0014H
	mov	r0,	#00h
	st	r0,	NEAR _wire0+020h

;;	wire0.tx.length = 0;
CLINEA 0000H 0001H 0067H 0002H 0015H
	st	r0,	NEAR _wire0+021h
CBLOCKEND 327 2 104

;;}
CLINEA 0000H 0001H 0068H 0001H 0001H
	pop	pc
CBLOCKEND 327 1 104
CFUNCTIONEND 327


	rseg $$_wire0_write$wire0
CFUNCTION 324

__wire0_write	:
CBLOCK 324 1 108

;;{
CLINEA 0000H 0001H 006CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	er10,	er2
	mov	er8,	er0
CBLOCK 324 2 108
CRET 0004H
CARGUMENT 44H 0002H 0028H "data" 04H 03H 00H 00H 00H
CARGUMENT 46H 0002H 0029H "quantity" 02H 00H 01H

;;	if((quantity-wire0.tx.index) > I2C_BUFFER_LENGTH)
CLINEA 0000H 0001H 006DH 0002H 0032H
	l	r2,	NEAR _wire0+020h
	mov	r3,	#00h
	mov	er0,	er10
	sub	r0,	r2
	subc	r1,	r3
	cmp	r0,	#020h
	cmpc	r1,	#00h
	ble	_$L3
CBLOCK 324 3 110

;;		quantity = I2C_BUFFER_LENGTH - wire0.tx.index;
CLINEA 0000H 0001H 006FH 0003H 0030H
	mov	er0,	#32
	sub	r0,	r2
	subc	r1,	r3
	mov	er10,	er0
CBLOCKEND 324 3 112

;;	}
CLINEA 0000H 0000H 0070H 0002H 0002H
_$L3 :

;;	memcpy(wire0.tx.buffer + wire0.tx.index,data, quantity);
CLINEA 0000H 0001H 0071H 0002H 0039H
	push	er10
	mov	er2,	er8
	l	r0,	NEAR _wire0+020h
	mov	r1,	#00h
	add	r0,	#BYTE1 OFFSET _wire0
	addc	r1,	#BYTE2 OFFSET _wire0
	bl	_memcpy_nn
	add	sp,	#2 

;;	wire0.tx.index += (UCHAR)quantity;
CLINEA 0000H 0001H 0072H 0002H 0023H
	l	r1,	NEAR _wire0+020h
	add	r1,	r10
	st	r1,	NEAR _wire0+020h

;;	wire0.tx.length += (UCHAR)quantity;	
CLINEA 0000H 0001H 0073H 0002H 0025H
	l	r1,	NEAR _wire0+021h
	add	r1,	r10
	st	r1,	NEAR _wire0+021h

;;	return quantity;
CLINEA 0000H 0001H 0074H 0002H 0011H
	mov	er0,	er10
CBLOCKEND 324 2 117

;;}
CLINEA 0000H 0000H 0075H 0001H 0001H
	pop	xr8
	pop	pc
CBLOCKEND 324 1 117
CFUNCTIONEND 324


	rseg $$_wire0_write_byte$wire0
CFUNCTION 325

__wire0_write_byte	:
CBLOCK 325 1 123

;;{
CLINEA 0000H 0001H 007BH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	mov	r2,	r0
CBLOCK 325 2 123
CARGUMENT 46H 0001H 0016H "data" 02H 00H 00H

;;	if(wire0.tx.index > I2C_BUFFER_LENGTH)
CLINEA 0000H 0001H 007CH 0002H 0027H
	l	r0,	NEAR _wire0+020h
	cmp	r0,	#020h
	ble	_$L6
CBLOCK 325 3 125

;;		return 0;
CLINEA 0000H 0001H 007EH 0003H 000BH
	mov	er0,	#0 
CBLOCKEND 325 3 127
CBLOCKEND 325 2 133

;;}
CLINEA 0000H 0001H 0085H 0001H 0001H
	rt

;;	}
CLINEA 0000H 0000H 007FH 0002H 0002H
_$L6 :

;;	wire0.tx.buffer[wire0.tx.index] = data;
CLINEA 0000H 0001H 0080H 0002H 0028H
	mov	r1,	#00h
	st	r2,	NEAR _wire0[er0]

;;	wire0.tx.index++;
CLINEA 0000H 0000H 0081H 0002H 0012H
	lea	OFFSET (_wire0+020h)
	inc	[ea]
	l	r0,	NEAR _wire0+020h

;;	wire0.tx.length = wire0.tx.index;
CLINEA 0000H 0001H 0082H 0002H 0022H
	st	r0,	NEAR _wire0+021h

;;	return 1;
CLINEA 0000H 0001H 0084H 0002H 000AH
	mov	er0,	#1 
	rt
CBLOCKEND 325 1 133
CFUNCTIONEND 325


	rseg $$_wire0_endTransmission$wire0
CFUNCTION 326

__wire0_endTransmission	:
CBLOCK 326 1 136

;;{
CLINEA 0000H 0001H 0088H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	r8,	r0
CBLOCK 326 2 136
CRET 0002H
CARGUMENT 46H 0001H 001CH "sendStop" 02H 00H 00H

;;	i2c_set_tx_buf(0,wire0.tx.buffer,wire0.tx.length);
CLINEA 0000H 0001H 008AH 0002H 0033H
	l	r0,	NEAR _wire0+021h
	mov	r1,	#00h
	push	er0
	mov	r2,	#BYTE1 OFFSET _wire0
	mov	r3,	#BYTE2 OFFSET _wire0
	mov	r0,	#00h
	bl	_i2c_set_tx_buf
	add	sp,	#2 

;;	i2c_start(0,true,sendStop);
CLINEA 0000H 0001H 008DH 0002H 001CH
	mov	r2,	r8
	mov	r1,	#01h
	mov	r0,	#00h
	bl	_i2c_start

;;	HALT_Until_Event(HALT_I2C0_END,0);
CLINEA 0000H 0001H 0090H 0002H 0023H
	mov	er2,	#0 
	mov	er0,	#2 
	bl	_HALT_Until_Event

;;	wire0.tx.index = 0;
CLINEA 0000H 0001H 0092H 0002H 0014H
	mov	r0,	#00h
	st	r0,	NEAR _wire0+020h

;;	wire0.tx.length = 0;
CLINEA 0000H 0001H 0093H 0002H 0015H
	st	r0,	NEAR _wire0+021h

;;	return (uint8_t)i2c_get_err_status(0);
CLINEA 0000H 0001H 0095H 0002H 0027H
	bl	_i2c_get_err_status
CBLOCKEND 326 2 150

;;}
CLINEA 0000H 0000H 0096H 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 326 1 150
CFUNCTIONEND 326


	rseg $$_wire0_requestFrom$wire0
CFUNCTION 321

__wire0_requestFrom	:
CBLOCK 321 1 154

;;{
CLINEA 0000H 0001H 009AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	mov	r8,	r0
	mov	r10,	r2
CBLOCK 321 2 154
CRET 0004H
CARGUMENT 46H 0001H 001CH "address" 02H 00H 00H
CARGUMENT 46H 0001H 0015H "quantity" 02H 00H 00H
CARGUMENT 46H 0001H 001EH "sendStop" 02H 00H 00H

;;	if(quantity > I2C_BUFFER_LENGTH)
CLINEA 0000H 0001H 009CH 0002H 0021H
	cmp	r1,	#020h
	ble	_$L10
CBLOCK 321 3 157

;;	    return 0;
CLINEA 0000H 0001H 009EH 0006H 000EH
	mov	er0,	#0 
CBLOCKEND 321 3 159
CBLOCKEND 321 2 177

;;}
CLINEA 0000H 0001H 00B1H 0001H 0001H
_$L9 :
	pop	xr8
	pop	pc

;;	}
CLINEA 0000H 0000H 009FH 0002H 0002H
_$L10 :

;;	wire0.rx.index = 0;
CLINEA 0000H 0001H 00A1H 0002H 0014H
	mov	r0,	#00h
	st	r0,	NEAR _wire0+042h

;;	wire0.rx.length = quantity;
CLINEA 0000H 0001H 00A2H 0002H 001CH
	st	r1,	NEAR _wire0+043h

;;	i2c_set_rx_buf(0,wire0.rx.buffer,quantity);
CLINEA 0000H 0001H 00A5H 0002H 002CH
	mov	r0,	r1
	mov	r1,	#00h
	push	er0
	mov	r2,	#BYTE1 OFFSET (_wire0+022h)
	mov	r3,	#BYTE2 OFFSET (_wire0+022h)
	mov	r0,	#00h
	bl	_i2c_set_rx_buf
	add	sp,	#2 

;;	i2c_set_address(0, address);					// set I2C address
CLINEA 0000H 0001H 00A8H 0002H 0034H
	mov	r1,	r8
	mov	r0,	#00h
	bl	_i2c_set_address

;;	i2c_start(0,false,sendStop);						// ch, write, cont
CLINEA 0000H 0001H 00ABH 0002H 0035H
	mov	r2,	r10
	mov	r1,	#00h
	mov	r0,	#00h
	bl	_i2c_start

;;	HALT_Until_Event(HALT_I2C0_END,0);
CLINEA 0000H 0001H 00AEH 0002H 0023H
	mov	er2,	#0 
	mov	er0,	#2 
	bl	_HALT_Until_Event

;;	return i2c_read_amount(0);
CLINEA 0000H 0001H 00B0H 0002H 001BH
	mov	r0,	#00h
	bl	_i2c_read_amount
	bal	_$L9
CBLOCKEND 321 1 177
CFUNCTIONEND 321


	rseg $$_wire0_available$wire0
CFUNCTION 322

__wire0_available	:
CBLOCK 322 1 181

;;{
CLINEA 0000H 0001H 00B5H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 322 2 181

;;	return wire0.rx.length - wire0.rx.index;
CLINEA 0000H 0001H 00B6H 0002H 0029H
	l	r0,	NEAR _wire0+043h
	mov	r1,	#00h
	l	r2,	NEAR _wire0+042h
	mov	r3,	#00h
	sub	r0,	r2
	subc	r1,	r3
CBLOCKEND 322 2 183

;;}
CLINEA 0000H 0000H 00B7H 0001H 0001H
	rt
CBLOCKEND 322 1 183
CFUNCTIONEND 322


	rseg $$_wire0_read$wire0
CFUNCTION 323

__wire0_read	:
CBLOCK 323 1 187

;;{
CLINEA 0000H 0001H 00BBH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 323 2 187
CLOCAL 47H 0002H 0025H 0002H "value" 02H 00H 01H

;;	int value = -1;
CLINEA 0000H 0001H 00BCH 0002H 0010H
	mov	er2,	#-1	;; _lvalue$0

;;	if(wire0.rx.index < wire0.rx.length)
CLINEA 0000H 0001H 00BDH 0002H 0025H
	l	r0,	NEAR _wire0+042h
	l	r1,	NEAR _wire0+043h
	cmp	r0,	r1
	bge	_$L14
CBLOCK 323 3 190

;;		value = wire0.rx.buffer[wire0.rx.index];
CLINEA 0000H 0001H 00BFH 0003H 002AH
	mov	r1,	#00h
	l	r0,	NEAR _wire0+022h[er0]
	mov	er2,	er0	;; _lvalue$0

;;		wire0.rx.index++;
CLINEA 0000H 0000H 00C0H 0003H 0013H
	lea	OFFSET (_wire0+042h)
	inc	[ea]
CBLOCKEND 323 3 193

;;	}
CLINEA 0000H 0000H 00C1H 0002H 0002H
_$L14 :

;;	return value;
CLINEA 0000H 0001H 00C2H 0002H 000EH
	mov	er0,	er2
CBLOCKEND 323 2 195

;;}
CLINEA 0000H 0000H 00C3H 0001H 0001H
	rt
CBLOCKEND 323 1 195
CFUNCTIONEND 323

	public _Wire0
	extrn code near : _i2c_set_tx_buf
	extrn code near : _i2c_set_rx_buf
	extrn code near : _i2c_begin
	extrn code near : _i2c_get_err_status
	extrn code near : _i2c_set_address
	extrn code near : _HALT_Until_Event
	extrn code near : _memcpy_nn
	extrn code near : _i2c_start
	extrn code near : _i2c_init
	extrn code near : _i2c_read_amount
	extrn code near : _main

	rseg $$TABWire0$wire0
_Wire0 :
	dw	__wire0_begin
	dw	__wire0_requestFrom
	dw	__wire0_available
	dw	__wire0_read
	dw	__wire0_beginTransmission
	dw	__wire0_write_byte
	dw	__wire0_write
	dw	__wire0_endTransmission

	rseg $$NVARwire0
_wire0 :
	ds	044h

	end
