;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : HardwareServo.c

	type (ML620504F) 
	model small, near
	$$NVARHardwareServo segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$TABhsv$HardwareServo segment table 2h #0h
	$$hsv_attach$HardwareServo segment code 2h #0h
	$$hsv_close$HardwareServo segment code 2h #0h
	$$hsv_detach$HardwareServo segment code 2h #0h
	$$hsv_dt$HardwareServo segment code 2h #0h
	$$hsv_init$HardwareServo segment code 2h #0h
	$$hsv_start$HardwareServo segment code 2h #0h
	$$hsv_stop$HardwareServo segment code 2h #0h
	$$hsv_update$HardwareServo segment code 2h #0h
	$$hsv_write$HardwareServo segment code 2h #0h
	$$timer5_isr$HardwareServo segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 03H 0000H "hsv_dt" 08H 02H 4CH 01H 80H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "hsv_write" 08H 02H 48H 01H 80H 0aH 00H 00H 07H
CSGLOBAL 02H 0000H "hsv_detach" 08H 02H 4AH 01H 80H 04H 00H 00H 00H
CSGLOBAL 03H 0000H "hsv_close" 08H 02H 4BH 01H 80H 06H 00H 00H 07H
CSGLOBAL 03H 0000H "timer5_isr" 08H 02H 43H 01H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "hsv_stop" 08H 02H 46H 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "hsv_init" 08H 02H 44H 01H 83H 12H 00H 00H 00H
CSGLOBAL 03H 0000H "hsv_start" 08H 02H 45H 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "hsv_attach" 08H 02H 49H 01H 80H 08H 00H 00H 00H
CSGLOBAL 03H 0000H "hsv_update" 08H 02H 47H 01H 80H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001EH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 39H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 3AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 3BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 3CH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 3DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 3EH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 3FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 40H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 41H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 42H 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0012H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001DH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 13H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001CH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 000AH 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 09H 00H
CSTRUCTTAG 0000H 0000H 000DH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 0AH 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 09H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0016H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0010H 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000FH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 10H 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 11H 00H
CSTRUCTTAG 0000H 0000H 0014H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 13H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0FH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0015H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0017H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0DH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 16H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 16H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 14H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 15H 00H
CSTRUCTTAG 0000H 0000H 000EH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0005H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 93H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 94H 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 95H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 96H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 97H 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0004H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 80H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 81H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 82H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 83H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 84H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 85H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 86H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 87H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0003H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 71H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 72H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 73H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 74H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 75H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 76H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 77H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 78H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 79H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 7AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0001H 0009H 00000012H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 42H 00H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "attach" 0AH 03H 00H 02H 43H 00H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "detach" 0AH 03H 00H 02H 44H 00H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000006H "start" 0AH 03H 00H 02H 45H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000008H "stop" 0AH 03H 00H 02H 46H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000AH "close" 0AH 03H 00H 02H 47H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000CH "write" 0AH 03H 00H 02H 48H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000EH "dt" 0AH 03H 00H 02H 49H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000010H "update" 0AH 03H 00H 02H 4AH 00H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0013H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 12H 00H
CUNIONTAG 0000H 0000H 0011H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0008H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 001AH 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0018H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000CH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000BH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0002H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 1AH 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 08H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 0AH 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "HardwareServo" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0CH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0DH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 9CH 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 9BH 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 9EH 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 9DH 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 02H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 07H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CSGLOBAL 42H 0001H "hsv_use_pwm" 02H 00H 00H
CGLOBAL 02H 00H 0000H "ml620504f_tmout_to_pin" 05H 01H 00H 00H 00H 00H
CGLOBAL 01H 01H 0012H "hsv" 04H 00H 05H 01H 00H
CSGLOBAL 42H 0008H "dt" 05H 01H 04H 00H 00H 08H
CGLOBAL 02H 00H 0000H "ml620504f_pin_to_bit" 05H 01H 00H 00H 00H 00H
CGLOBAL 02H 00H 0000H "pin_to_pwm" 05H 01H 00H 00H 00H 00H
CSGLOBAL 42H 0008H "hsv_val2" 05H 01H 04H 00H 00H 08H
CGLOBAL 02H 01H 0000H "ml620504f_pin_to_port" 05H 01H 00H 00H 00H 01H
CFILE 0001H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0002H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0003H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0004H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0005H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0006H 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\common\\rdwr_reg.h"
CFILE 0007H 00000027H "C:\\LAZURI~1\\LIBRAR~1\\HARDWA~2\\HardwareServo.h"
CFILE 0008H 0000006FH "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_irq.h"
CFILE 0009H 00000331H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\irq\\irq.h"
CFILE 000AH 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000BH 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 000CH 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 000DH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000EH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000FH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 0011H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 0012H 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0014H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0015H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0016H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0017H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0018H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0019H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 001AH 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 001BH 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 001CH 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001DH 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001EH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 0000H 00000103H "C:\\LAZURI~1\\LIBRAR~1\\HARDWA~2\\HardwareServo.c"

	rseg $$timer5_isr$HardwareServo
CFUNCTION 323

_timer5_isr	:
CBLOCK 323 1 40

;;{
CLINEA 0000H 0001H 0028H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er4
CBLOCK 323 2 40
CRET 0002H
CLOCAL 46H 0001H 0018H 0002H "use_ftm" 02H 00H 00H

;;	unsigned char use_ftm = (unsigned char)((hsv_use_pwm + 1) >> 1);
CLINEA 0000H 0001H 0029H 0002H 0041H
	l	r0,	NEAR _hsv_use_pwm
	mov	r1,	#00h
	add	er0,	#1 
	srlc	r0,	#01h
	mov	r4,	r0	;; _luse_ftm$0

;;	digitalWrite(13,(~digitalRead(13))&0x01);
CLINEA 0000H 0001H 002BH 0002H 002AH
	mov	r0,	#0dh
	bl	_digitalRead
	xor	r0,	#0ffh
	and	r0,	#01h
	mov	r1,	r0
	mov	r0,	#0dh
	bl	_digitalWrite

;;	switch(use_ftm)
CLINEA 0000H 0001H 002DH 0002H 0010H
CBLOCK 323 3 46
	cmp	r4,	#01h
	beq	_$L9

;;	switch(use_ftm)
CLINEA 0000H 0000H 002DH 0002H 0010H
	cmp	r4,	#02h
	beq	_$L8

;;	switch(use_ftm)
CLINEA 0000H 0000H 002DH 0002H 0010H
	cmp	r4,	#03h
	beq	_$L7

;;	switch(use_ftm)
CLINEA 0000H 0000H 002DH 0002H 0010H
	cmp	r4,	#04h
	beq	_$L6

;;	}
CLINEA 0000H 0000H 0039H 0002H 0002H
	bal	_$L5
_$L4 :
CBLOCKEND 323 2 58

;;}
CLINEA 0000H 0001H 003AH 0001H 0001H
	pop	er4
	pop	pc

;;	case 4:
CLINEA 0000H 0001H 002FH 0002H 0008H
_$L6 :

;;		set_bit(FT3ICP);
CLINEA 0000H 0001H 0030H 0003H 0012H
	sb	0f47ch.0

;;	case 3:
CLINEA 0000H 0001H 0031H 0002H 0008H
_$L7 :

;;		set_bit(FT2ICP);
CLINEA 0000H 0001H 0032H 0003H 0012H
	sb	0f45ch.0

;;	case 2:
CLINEA 0000H 0001H 0033H 0002H 0008H
_$L8 :

;;		set_bit(FT1ICP);
CLINEA 0000H 0001H 0034H 0003H 0012H
	sb	0f43ch.0

;;	case 1:
CLINEA 0000H 0001H 0035H 0002H 0008H
_$L9 :

;;		set_bit(FT0ICP);
CLINEA 0000H 0001H 0036H 0003H 0012H
	sb	0f41ch.0

;;	default:
CLINEA 0000H 0001H 0037H 0002H 0009H
_$L5 :

;;		break;
CLINEA 0000H 0001H 0038H 0003H 0008H
	bal	_$L4
CBLOCKEND 323 3 57
CBLOCKEND 323 1 58
CFUNCTIONEND 323


	rseg $$hsv_init$HardwareServo
CFUNCTION 324

_hsv_init	:
CBLOCK 324 1 62

;;{
CLINEA 0000H 0001H 003EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-04
	push	xr8
	push	xr4
	push	bp
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 324 2 62
CRET 0010H
CARGUMENT 46H 0001H 001CH "num" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "period" 02H 00H 01H
CLOCAL 47H 0002H 0026H 0002H "i" 02H 00H 01H
CLOCAL 47H 0002H 002AH 0002H "use_ftm" 02H 00H 01H

;;	pinMode(13,OUTPUT);
CLINEA 0000H 0001H 0041H 0002H 0014H
	mov	r1,	#01h
	mov	r0,	#0dh
	bl	_pinMode

;;	digitalWrite(13,LOW);
CLINEA 0000H 0001H 0042H 0002H 0016H
	mov	r1,	#00h
	mov	r0,	#0dh
	bl	_digitalWrite

;;	if((num > 8)||(num==0)) return false;
CLINEA 0000H 0001H 0043H 0002H 0026H
	cmp	r8,	#08h
	bgt	_$L12
	cmp	r8,	#00h
	bne	_$L11
_$L12 :
	mov	r0,	#00h
CBLOCKEND 324 2 113

;;}
CLINEA 0000H 0001H 0071H 0001H 0001H
_$L10 :
	pop	bp
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	if((num > 8)||(num==0)) return false;
CLINEA 0000H 0000H 0043H 0002H 0026H
_$L11 :

;;	hsv_use_pwm = num;
CLINEA 0000H 0001H 0045H 0002H 0013H
	st	r8,	NEAR _hsv_use_pwm

;;	use_ftm = (++num) >> 1;
CLINEA 0000H 0000H 0046H 0002H 0018H
	mov	r0,	r8
	add	r0,	#01h
	mov	r1,	#00h
	srlc	r0,	#01h
	sra	r1,	#01h
	mov	bp,	er0	;; _luse_ftm$2

;;	clear_bit(DTM4);
CLINEA 0000H 0001H 0049H 0002H 0011H
	rb	0f068h.4

;;	clear_bit(DTM5);
CLINEA 0000H 0001H 004AH 0002H 0011H
	rb	0f068h.5

;;	TM4CON = 0x40|0x20|0x01;						//16bit mode, div16,HSCLK (1us)
CLINEA 0000H 0001H 004BH 0002H 003EH
	mov	r0,	#061h
	st	r0,	0f324h

;;	TM45D = period;
CLINEA 0000H 0001H 004CH 0002H 0010H
	st	er10,	0f304h

;;	set_bit(ETM5);
CLINEA 0000H 0001H 004DH 0002H 000FH
	sb	0f015h.5

;;	irq_sethandler(IRQ_NO_TM5INT,timer5_isr);
CLINEA 0000H 0001H 004EH 0002H 002AH
	mov	r2,	#BYTE1 OFFSET _timer5_isr
	mov	r3,	#BYTE2 OFFSET _timer5_isr
	mov	r0,	#01ch
	bl	_irq_sethandler

;;	for(i=0;i<use_ftm;i++)
CLINEA 0000H 0001H 0051H 0002H 0017H
	mov	er4,	#0 	;; _li$0
	b	_$L23
_$L20 :
CBLOCK 324 3 82

;;		dt[i] = 1;
CLINEA 0000H 0001H 0053H 0003H 000CH
	mov	er0,	er4
	add	er0,	er4
	mov	er2,	#1 
	st	er2,	NEAR _dt[er0]

;;		hsv_val2[i] = 0;
CLINEA 0000H 0001H 0054H 0003H 0012H
	mov	er0,	er4
	add	er0,	er4
	mov	er2,	#0 
	st	er2,	NEAR _hsv_val2[er0]

;;		BLKCON1 |= (unsigned char)(1<<i);							// BLKCON1 pwm reset
CLINEA 0000H 0001H 0055H 0003H 003EH
	mov	er0,	#1 
	mov	er2,	er4
_$M3 :
	cmp	r2,	#07h
	cmpc	r3,	#00h
	ble	_$M2
	sllc	r1,	#07h
	sll	r0,	#07h
	add	er2,	#-7
	bne	_$M3
_$M2 :
	sll	r0,	r2
	l	r1,	0f069h
	or	r1,	r0
	st	r1,	0f069h

;;		BLKCON1 &= (unsigned char)(~(1<<i));						// BLKCON1 pwm on
CLINEA 0000H 0001H 0056H 0003H 003DH
	mov	er0,	#1 
	mov	er2,	er4
_$M5 :
	cmp	r2,	#07h
	cmpc	r3,	#00h
	ble	_$M4
	sllc	r1,	#07h
	sll	r0,	#07h
	add	er2,	#-7
	bne	_$M5
_$M4 :
	sll	r0,	r2
	xor	r0,	#0ffh
	l	r1,	0f069h
	and	r1,	r0
	st	r1,	0f069h

;;		*(&FT0CLKL + (i << (5-sizeof(FT0CLKL)+1))) = 0x42;			// clock source = HSCLK / 16
CLINEA 0000H 0001H 0057H 0003H 0053H
	mov	er0,	er4
	sllc	r1,	#05h
	sll	r0,	#05h
	mov	r2,	#042h
	st	r2,	0f40eh[er0]
	st	er0,	-4[fp]
	mov	er6,	er0

;;		*(&FT0DT   + (i << (5-sizeof(FT0DT)+1)))   = 1;			// FT0DT = 1;  (for masking pulse)
CLINEA 0000H 0001H 0058H 0003H 0056H
	mov	er0,	er4
	sllc	r1,	#04h
	sll	r0,	#04h
	add	er0,	er0
	mov	er2,	#1 
	st	er2,	0f406h[er0]
	st	er0,	-2[fp]
CBLOCK 324 4 91

;;		switch(i)
CLINEA 0000H 0001H 005AH 0003H 000BH
	cmp	r5,	#00h
	bne	_$L28
	mov	r0,	r4
	beq	_$L29

;;		switch(i)
CLINEA 0000H 0000H 005AH 0003H 000BH
	cmp	r4,	#01h
	beq	_$L30

;;		switch(i)
CLINEA 0000H 0000H 005AH 0003H 000BH
	cmp	r4,	#02h
	beq	_$L31

;;		switch(i)
CLINEA 0000H 0000H 005AH 0003H 000BH
	cmp	r4,	#03h
	beq	_$L32

;;		default:
CLINEA 0000H 0001H 0068H 0003H 000AH
_$L28 :
CBLOCKEND 324 4 106

;;		*(&FT0TRG0L + (i << (5-sizeof(FT0TRG0L)+1))) |= 0x01;			//	waiting trigger
CLINEA 0000H 0001H 006BH 0003H 004CH
	l	r2,	0f410h[er6]
	or	r2,	#01h
	st	r2,	0f410h[er6]

;;		*(&FT0INTE + (i << (5-sizeof(FT0INTE)+1))) |= 0x0101;			//	FTnIEP = 1, FTnIOP = 1;
CLINEA 0000H 0001H 006CH 0003H 0054H
	l	er2,	-2[fp]
	l	er0,	0f418h[er2]
	or	r0,	#01h
	or	r1,	#01h
	st	er0,	0f418h[er2]

;;		*(&FT0MODL + (i << (5-sizeof(FT0MODL)+1))) = 0xC3;			// FTnST0 = One shot, FTnDTEN = 1, PWM2
CLINEA 0000H 0001H 006DH 0003H 005EH
	mov	r2,	#0c3h
	st	r2,	0f40ch[er6]

;;		*(&FT0CON0 + (i << (5-sizeof(FT0CON0)+1))) |= 0x02;			// FTnST0 = One shot, FTnDTEN = 1, PWM2
CLINEA 0000H 0001H 006EH 0003H 005FH
	l	er0,	-4[fp]
	l	r2,	0f40ah[er0]
	or	r2,	#02h
	st	r2,	0f40ah[er0]
CBLOCKEND 324 3 111

;;	for(i=0;i<use_ftm;i++)
CLINEA 0000H 0000H 0051H 0002H 0017H
	add	er4,	#1 
_$L23 :
	cmp	er4,	bp
	bges	_$M6
	b	_$L20
_$M6 :

;;	return true;
CLINEA 0000H 0001H 0070H 0002H 000DH
	mov	r0,	#01h
	b	_$L10

;;		case 0:
CLINEA 0000H 0001H 005CH 0003H 0009H
_$L29 :

;;			FT0TRG0H = 0x85;		// triggered by TM5
CLINEA 0000H 0001H 005DH 0004H 0028H
	mov	r0,	#085h
	st	r0,	0f411h

;;			break;
CLINEA 0000H 0001H 005EH 0004H 0009H
	bal	_$L28

;;		case 1:
CLINEA 0000H 0001H 005FH 0003H 0009H
_$L30 :

;;			FT1TRG0H = 0x88;		// triggered by FTM0
CLINEA 0000H 0001H 0060H 0004H 0029H
	mov	r0,	#088h
	st	r0,	0f431h

;;			break;
CLINEA 0000H 0001H 0061H 0004H 0009H
	bal	_$L28

;;		case 2:
CLINEA 0000H 0001H 0062H 0003H 0009H
_$L31 :

;;			FT2TRG0H = 0x89;		// triggered by FTM1
CLINEA 0000H 0001H 0063H 0004H 0029H
	mov	r0,	#089h
	st	r0,	0f451h

;;			break;
CLINEA 0000H 0001H 0064H 0004H 0009H
	bal	_$L28

;;		case 3:
CLINEA 0000H 0001H 0065H 0003H 0009H
_$L32 :

;;			FT3TRG0H = 0x8A;		// triggered by FTM2
CLINEA 0000H 0001H 0066H 0004H 0029H
	mov	r0,	#08ah
	st	r0,	0f471h

;;			break;
CLINEA 0000H 0001H 0067H 0004H 0009H
	bal	_$L28
CBLOCKEND 324 1 113
CFUNCTIONEND 324


	rseg $$hsv_start$HardwareServo
CFUNCTION 325

_hsv_start	:
CBLOCK 325 1 116

;;{
CLINEA 0000H 0001H 0074H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 325 2 116

;;	set_bit(T4RUN);
CLINEA 0000H 0001H 0075H 0002H 0010H
	sb	0f330h.4
CBLOCKEND 325 2 118

;;}
CLINEA 0000H 0001H 0076H 0001H 0001H
	rt
CBLOCKEND 325 1 118
CFUNCTIONEND 325


	rseg $$hsv_stop$HardwareServo
CFUNCTION 326

_hsv_stop	:
CBLOCK 326 1 121

;;{
CLINEA 0000H 0001H 0079H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 326 2 121

;;	set_bit(T4STP);
CLINEA 0000H 0001H 007AH 0002H 0010H
	sb	0f332h.4
CBLOCKEND 326 2 123

;;}
CLINEA 0000H 0001H 007BH 0001H 0001H
	rt
CBLOCKEND 326 1 123
CFUNCTIONEND 326


	rseg $$hsv_update$HardwareServo
CFUNCTION 327

_hsv_update	:
CBLOCK 327 1 126

;;{
CLINEA 0000H 0001H 007EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 327 2 126

;;	set_bit(FT0UD);
CLINEA 0000H 0001H 007FH 0002H 0010H
	sb	0f40bh.0

;;	set_bit(FT1UD);
CLINEA 0000H 0001H 0080H 0002H 0010H
	sb	0f42bh.0

;;	set_bit(FT2UD);
CLINEA 0000H 0001H 0081H 0002H 0010H
	sb	0f44bh.0

;;	set_bit(FT3UD);	
CLINEA 0000H 0001H 0082H 0002H 0011H
	sb	0f46bh.0
CBLOCKEND 327 2 131

;;}
CLINEA 0000H 0001H 0083H 0001H 0001H
	rt
CBLOCKEND 327 1 131
CFUNCTIONEND 327


	rseg $$hsv_write$HardwareServo
CFUNCTION 328

_hsv_write	:
CBLOCK 328 1 135

;;{
CLINEA 0000H 0001H 0087H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	xr8
	push	xr4
	push	bp
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 328 2 135
CARGUMENT 46H 0001H 001CH "ch" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "val" 02H 00H 01H
CLOCAL 46H 0001H 0018H 0002H "ftm_ch" 02H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "a_b" 02H 00H 00H
CLOCAL 46H 0002H 002AH 0002H "ftma" 04H 03H 00H 00H 08H
CLOCAL 46H 0002H 0027H 0002H "ftmp" 04H 03H 00H 00H 08H

;;	if(hsv_use_pwm <= ch) return;
CLINEA 0000H 0001H 008DH 0002H 001EH
	l	r0,	NEAR _hsv_use_pwm
	cmp	r0,	r8
	bgt	_$L37
CBLOCKEND 328 2 163

;;}
CLINEA 0000H 0001H 00A3H 0001H 0001H
_$L36 :
	pop	bp
	pop	xr4
	pop	xr8
	rt

;;	if(hsv_use_pwm <= ch) return;
CLINEA 0000H 0000H 008DH 0002H 001EH
_$L37 :

;;	ftm_ch = (unsigned char)(ch >> 1);
CLINEA 0000H 0001H 008FH 0002H 0023H
	mov	r0,	r8
	srl	r0,	#01h
	mov	r4,	r0	;; _lftm_ch$0

;;	ftma = &FT0EA + (ftm_ch << (5-sizeof(FT0EA)+1));
CLINEA 0000H 0001H 0092H 0002H 0031H
	mov	r1,	#00h
	sllc	r1,	#04h
	sll	r0,	#04h
	add	er0,	er0
	mov	er2,	er0
	add	r2,	#02h
	addc	r3,	#0f4h
	mov	bp,	er2	;; _lftma$4

;;	ftmp = &FT0P + (ftm_ch << (5-sizeof(FT0P)+1));
CLINEA 0000H 0001H 0093H 0002H 002FH
	add	r0,	#00h
	addc	r1,	#0f4h
	mov	er6,	er0	;; _lftmp$6

;;	switch(a_b)
CLINEA 0000H 0001H 0095H 0002H 000CH
	mov	r0,	r8
	and	r0,	#01h
CBLOCK 328 3 150
	cmp	r0,	#00h
	beq	_$L44

;;	switch(a_b)
CLINEA 0000H 0000H 0095H 0002H 000CH
	cmp	r0,	#01h
	beq	_$L45

;;	}
CLINEA 0000H 0000H 00A1H 0002H 0002H
CBLOCKEND 328 3 161
_$L42 :

;;	return;
CLINEA 0000H 0001H 00A2H 0002H 0008H
	bal	_$L36

;;	case 0:					// ftm_a
CLINEA 0000H 0001H 0097H 0002H 0015H
_$L44 :

;;		*ftma = val + dt[ftm_ch];
CLINEA 0000H 0001H 0098H 0003H 001BH
	mov	r0,	r4
	mov	r1,	#00h
	add	er0,	er0
	l	er0,	NEAR _dt[er0]
	add	er0,	er10
	st	er0,	[er2]

;;		*ftmp = *ftma + hsv_val2[ftm_ch] + dt[ftm_ch]+1;
CLINEA 0000H 0001H 0099H 0003H 0032H
	mov	r0,	r4
	mov	r1,	#00h
	add	er0,	er0
	l	er2,	NEAR _hsv_val2[er0]
	l	bp,	[bp]
	add	er2,	bp
	l	er0,	NEAR _dt[er0]
	add	er2,	er0
	add	er2,	#1 
	st	er2,	[er6]

;;		break;
CLINEA 0000H 0001H 009AH 0003H 0008H
	bal	_$L42

;;	case 1:					// ftm_b
CLINEA 0000H 0001H 009BH 0002H 0015H
_$L45 :

;;		hsv_val2[ftm_ch] = val;
CLINEA 0000H 0001H 009CH 0003H 0019H
	mov	r0,	r4
	mov	r1,	#00h
	add	er0,	er0
	st	er10,	NEAR _hsv_val2[er0]

;;		*ftmp = *ftma + hsv_val2[ftm_ch] + dt[ftm_ch]+1;
CLINEA 0000H 0001H 009DH 0003H 0032H
	mov	er2,	er10
	l	bp,	[bp]
	add	er2,	bp
	l	er0,	NEAR _dt[er0]
	add	er2,	er0
	add	er2,	#1 
	st	er2,	[er6]

;;		break;
CLINEA 0000H 0001H 009EH 0003H 0008H
	bal	_$L42
CBLOCKEND 328 1 163
CFUNCTIONEND 328


	rseg $$hsv_attach$HardwareServo
CFUNCTION 329

_hsv_attach	:
CBLOCK 329 1 166

;;{
CLINEA 0000H 0001H 00A6H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	xr4
	push	bp
	push	er8
	mov	er8,	er0
CBLOCK 329 2 166
CARGUMENT 46H 0001H 001CH "ch" 02H 00H 00H
CARGUMENT 46H 0001H 001DH "pin" 02H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "port_num" 02H 00H 00H
CLOCAL 46H 0001H 0019H 0002H "ftm" 02H 00H 00H
CLOCAL 46H 0002H 0027H 0002H "port" 04H 03H 00H 00H 00H
CLOCAL 46H 0001H 0018H 0002H "bit" 02H 00H 00H

;;	if(ch >= hsv_use_pwm ) return false;
CLINEA 0000H 0001H 00ADH 0002H 0025H
	l	r1,	NEAR _hsv_use_pwm
	cmp	r0,	r1
	blt	_$L47
	mov	r0,	#00h
CBLOCKEND 329 2 192

;;}
CLINEA 0000H 0001H 00C0H 0001H 0001H
_$L46 :
	pop	er8
	pop	bp
	pop	xr4
	rt

;;	if(ch >= hsv_use_pwm ) return false;
CLINEA 0000H 0000H 00ADH 0002H 0025H
_$L47 :

;;	if(pin_to_pwm[pin] == 0xFF) return false;
CLINEA 0000H 0001H 00B0H 0002H 002AH
	mov	r0,	r9
	mov	r1,	#00h
	l	r0,	NEAR _pin_to_pwm[er0]
	cmp	r0,	#0ffh
	bne	_$L49
	mov	r0,	#00h
	bal	_$L46
_$L49 :

;;	ftm = pin_to_pwm[pin];
CLINEA 0000H 0001H 00B3H 0002H 0017H
	mov	r0,	r9
	mov	r1,	#00h
	l	r2,	NEAR _pin_to_pwm[er0]
	mov	r5,	r2	;; _lftm$2

;;	port = (unsigned char *)ml620504f_pin_to_port[port_num];
CLINEA 0000H 0001H 00B5H 0002H 0039H
	mov	r0,	r2
	l	r12,	NEAR _ml620504f_tmout_to_pin[er0]
	mov	r13,	#00h
	mov	er0,	bp
	add	er0,	bp
	l	er6,	NEAR _ml620504f_pin_to_port[er0]

;;	bit = ml620504f_pin_to_bit[port_num];
CLINEA 0000H 0001H 00B6H 0002H 0026H
	mov	er2,	bp
	l	r4,	NEAR _ml620504f_pin_to_bit[er2]

;;	*(port+1) &= ~bit;		// PnDIR  = 0
CLINEA 0000H 0001H 00B8H 0002H 0022H
	mov	r0,	r4
	xor	r0,	#0ffh
	l	r1,	01h[er6]
	and	r1,	r0
	st	r1,	01h[er6]

;;	*(port+2) |= bit;		// PnCON0 = 1
CLINEA 0000H 0001H 00B9H 0002H 0021H
	l	r0,	02h[er6]
	or	r0,	r4
	st	r0,	02h[er6]

;;	*(port+3) |= bit;		// PnCON1 = 1
CLINEA 0000H 0001H 00BAH 0002H 0021H
	l	r0,	03h[er6]
	or	r0,	r4
	st	r0,	03h[er6]

;;	*(port+4) |= bit;		// PnMOD0 = 1
CLINEA 0000H 0001H 00BBH 0002H 0021H
	l	r0,	04h[er6]
	or	r0,	r4
	st	r0,	04h[er6]

;;	*(port+5) |= bit;		// PnMOD1 = 1
CLINEA 0000H 0001H 00BCH 0002H 0021H
	l	r0,	05h[er6]
	or	r0,	r4
	st	r0,	05h[er6]

;;	*(&FTO0SL + ftm) = ch;
CLINEA 0000H 0001H 00BEH 0002H 0017H
	mov	r0,	r5
	mov	r1,	#00h
	st	r8,	0f480h[er0]

;;	return true;
CLINEA 0000H 0001H 00BFH 0002H 000DH
	mov	r0,	#01h
	bal	_$L46
CBLOCKEND 329 1 192
CFUNCTIONEND 329


	rseg $$hsv_detach$HardwareServo
CFUNCTION 330

_hsv_detach	:
CBLOCK 330 1 195

;;{
CLINEA 0000H 0001H 00C3H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	bp
	push	er8
	mov	er8,	er0
CBLOCK 330 2 195
CARGUMENT 46H 0001H 001CH "pin" 02H 00H 00H
CARGUMENT 46H 0001H 001DH "level" 02H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "port_num" 02H 00H 00H
CLOCAL 4AH 0001H 0000H 0002H "ftm" 02H 00H 00H
CLOCAL 46H 0002H 002AH 0002H "port" 04H 03H 00H 00H 00H
CLOCAL 46H 0001H 0016H 0002H "bit" 02H 00H 00H

;;	if(pin_to_pwm[pin] == 0xFF) return false;
CLINEA 0000H 0001H 00CAH 0002H 002AH
	mov	r1,	#00h
	l	r0,	NEAR _pin_to_pwm[er0]
	cmp	r0,	#0ffh
	bne	_$L52
	mov	r0,	#00h
CBLOCKEND 330 2 220

;;}
CLINEA 0000H 0001H 00DCH 0001H 0001H
_$L51 :
	pop	er8
	pop	bp
	rt

;;	if(pin_to_pwm[pin] == 0xFF) return false;
CLINEA 0000H 0000H 00CAH 0002H 002AH
_$L52 :

;;	port = (unsigned char *)ml620504f_pin_to_port[port_num];
CLINEA 0000H 0001H 00CFH 0002H 0039H
	mov	r0,	r8
	mov	r1,	#00h
	l	r0,	NEAR _pin_to_pwm[er0]
	l	r2,	NEAR _ml620504f_tmout_to_pin[er0]
	mov	r3,	#00h
	mov	er0,	er2
	add	er0,	er2
	l	er0,	NEAR _ml620504f_pin_to_port[er0]
	mov	bp,	er0	;; _lport$4

;;	bit = ml620504f_pin_to_bit[port_num];
CLINEA 0000H 0001H 00D0H 0002H 0026H
	l	r0,	NEAR _ml620504f_pin_to_bit[er2]
	mov	r2,	r0	;; _lbit$6

;;	if(level == 0)
CLINEA 0000H 0001H 00D1H 0002H 000FH
	cmp	r9,	#00h
	bne	_$L54

;;		*(port+0) &= ~bit;		// PnD    = 0
CLINEA 0000H 0001H 00D2H 0003H 0023H
	xor	r0,	#0ffh
	l	r1,	[bp]
	and	r0,	r1

;;	else
CLINEA 0000H 0001H 00D3H 0002H 0005H
	bal	_$L56
_$L54 :

;;		*(port+0) |= bit;		// PnD    = 1
CLINEA 0000H 0001H 00D4H 0003H 0022H
	l	r0,	[bp]
	or	r0,	r2
_$L56 :
	st	r0,	[bp]

;;	*(port+1) &= ~bit;		// PnDIR  = 0
CLINEA 0000H 0001H 00D5H 0002H 0022H
	mov	r0,	r2
	xor	r0,	#0ffh
	l	r1,	1[bp]
	and	r1,	r0
	st	r1,	1[bp]

;;	*(port+2) |= bit;		// PnCON0 = 1
CLINEA 0000H 0001H 00D6H 0002H 0021H
	l	r0,	2[bp]
	or	r0,	r2
	st	r0,	2[bp]

;;	*(port+3) |= bit;		// PnCON1 = 1
CLINEA 0000H 0001H 00D7H 0002H 0021H
	l	r0,	3[bp]
	or	r0,	r2
	st	r0,	3[bp]

;;	*(port+4) &= ~bit;		// PnMOD0 = 0
CLINEA 0000H 0001H 00D8H 0002H 0022H
	mov	r0,	r2
	xor	r0,	#0ffh
	l	r1,	4[bp]
	and	r1,	r0
	st	r1,	4[bp]

;;	*(port+5) &= ~bit;		// PnMOD1 = 0
CLINEA 0000H 0001H 00D9H 0002H 0022H
	mov	r0,	r2
	xor	r0,	#0ffh
	l	r1,	5[bp]
	and	r1,	r0
	st	r1,	5[bp]

;;	return true;
CLINEA 0000H 0001H 00DBH 0002H 000DH
	mov	r0,	#01h
	bal	_$L51
CBLOCKEND 330 1 220
CFUNCTIONEND 330


	rseg $$hsv_close$HardwareServo
CFUNCTION 331

_hsv_close	:
CBLOCK 331 1 224

;;{
CLINEA 0000H 0001H 00E0H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	xr4
	push	er8
CBLOCK 331 2 224
CLOCAL 47H 0002H 0026H 0002H "i" 02H 00H 01H
CLOCAL 46H 0001H 001AH 0002H "use_ftm" 02H 00H 00H

;;	unsigned char use_ftm = (unsigned char)((hsv_use_pwm + 1) >> 1);
CLINEA 0000H 0001H 00E2H 0002H 0041H
	l	r0,	NEAR _hsv_use_pwm
	mov	r1,	#00h
	add	er0,	#1 
	srlc	r0,	#01h
	mov	r6,	r0	;; _luse_ftm$2

;;	clear_bit(ETM5);				// disenable timer interrupt
CLINEA 0000H 0001H 00E4H 0002H 0031H
	rb	0f015h.5

;;	clear_bit(T4RUN);				// stop base time
CLINEA 0000H 0001H 00E5H 0002H 0027H
	rb	0f330h.4

;;	set_bit(DTM4),set_bit(DTM5);	// set timer to power down
CLINEA 0000H 0001H 00E6H 0002H 0038H
	sb	0f068h.4
	sb	0f068h.5

;;	for(i=0;i<use_ftm;i++)
CLINEA 0000H 0001H 00E8H 0002H 0017H
	mov	er4,	#0 	;; _li$0
	bal	_$L63
_$L60 :
CBLOCK 331 3 233

;;		BLKCON1 |= (unsigned char)(1<<i);			// set FTMn to power down
CLINEA 0000H 0001H 00EAH 0003H 003FH
	l	r0,	0f069h
	or	r0,	r8
	st	r0,	0f069h
CBLOCKEND 331 3 235

;;	for(i=0;i<use_ftm;i++)
CLINEA 0000H 0000H 00E8H 0002H 0017H
	add	er4,	#1 
_$L63 :
	mov	er0,	#1 
	mov	er2,	er4
_$M15 :
	cmp	r2,	#07h
	cmpc	r3,	#00h
	ble	_$M14
	sllc	r1,	#07h
	sll	r0,	#07h
	add	er2,	#-7
	bne	_$M15
_$M14 :
	sllc	r1,	r2
	sll	r0,	r2
	mov	er8,	er0
	mov	r0,	r6
	mov	r1,	#00h
	cmp	er4,	er0
	blts	_$L60
CBLOCKEND 331 2 236

;;}
CLINEA 0000H 0001H 00ECH 0001H 0001H
	pop	er8
	pop	xr4
	rt
CBLOCKEND 331 1 236
CFUNCTIONEND 331


	rseg $$hsv_dt$HardwareServo
CFUNCTION 332

_hsv_dt	:
CBLOCK 332 1 239

;;{
CLINEA 0000H 0001H 00EFH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	xr8
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 332 2 239
CARGUMENT 46H 0001H 001CH "ch" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "deadtime" 02H 00H 01H

;;	if(ch>3) return;				// error.
CLINEA 0000H 0001H 00F0H 0002H 001EH
	cmp	r0,	#03h
	ble	_$L65
CBLOCKEND 332 2 245

;;}
CLINEA 0000H 0001H 00F5H 0001H 0001H
_$L64 :
	pop	xr8
	rt

;;	if(ch>3) return;				// error.
CLINEA 0000H 0000H 00F0H 0002H 001EH
_$L65 :

;;	if(deadtime == 0) return;		// error!! output signals are shorted.
CLINEA 0000H 0001H 00F1H 0002H 0042H
	mov	er2,	er2
	beq	_$L64

;;	*(&FT0DT + (ch << (5-sizeof(FT0DT)+1))) = deadtime;			// FTnST0 = One shot, FTnDTEN = 1, PWM2
CLINEA 0000H 0001H 00F2H 0002H 005EH
	mov	r0,	r8
	mov	r1,	#00h
	sllc	r1,	#04h
	sll	r0,	#04h
	add	er0,	er0
	st	er10,	0f406h[er0]

;;	dt[ch] = deadtime;
CLINEA 0000H 0001H 00F3H 0002H 0013H
	mov	r0,	r8
	mov	r1,	#00h
	add	er0,	er0
	st	er10,	NEAR _dt[er0]

;;	return;
CLINEA 0000H 0001H 00F4H 0002H 0008H
	bal	_$L64
CBLOCKEND 332 1 245
CFUNCTIONEND 332

	public _hsv
	extrn table near : _ml620504f_tmout_to_pin
	extrn code near : _digitalWrite
	extrn code near : _digitalRead
	extrn table near : _ml620504f_pin_to_bit
	extrn table near : _pin_to_pwm
	extrn code near : _irq_sethandler
	extrn code near : _pinMode
	extrn table near : _ml620504f_pin_to_port
	extrn code near : _main

	rseg $$NINITTAB
	db	00h

	rseg $$TABhsv$HardwareServo
_hsv :
	dw	_hsv_init
	dw	_hsv_attach
	dw	_hsv_detach
	dw	_hsv_start
	dw	_hsv_stop
	dw	_hsv_close
	dw	_hsv_write
	dw	_hsv_dt
	dw	_hsv_update

	rseg $$NINITVAR
_hsv_use_pwm :
	ds	01h

	rseg $$NVARHardwareServo
_dt :
	ds	08h
_hsv_val2 :
	ds	08h

	rseg $$NINITTAB
	align

	rseg $$NINITVAR
	align

	end
