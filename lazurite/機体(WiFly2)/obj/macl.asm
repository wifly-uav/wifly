;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : macl.c

	type (ML620504F) 
	model small, near
	$$macl_ack_rxdone_handler$macl segment code 2h #0h
	$$macl_ack_timeout_handler$macl segment code 2h #0h
	$$macl_ack_txdone_handler$macl segment code 2h #0h
	$$macl_cca_abort_handler$macl segment code 2h #0h
	$$macl_ccadone_handler$macl segment code 2h #0h
	$$macl_dummy_handler$macl segment code 2h #0h
	$$macl_ed$macl segment code 2h #0h
	$$macl_fifodone_handler$macl segment code 2h #0h
	$$macl_getCondition$macl segment code 2h #0h
	$$macl_init$macl segment code 2h #0h
	$$macl_rxdone_handler$macl segment code 2h #0h
	$$macl_set_ack_tx_interval$macl segment code 2h #0h
	$$macl_set_channel$macl segment code 2h #0h
	$$macl_set_csma_params$macl segment code 2h #0h
	$$macl_set_frame_retries$macl segment code 2h #0h
	$$macl_set_hw_addr_filt$macl segment code 2h #0h
	$$macl_set_promiscuous_mode$macl segment code 2h #0h
	$$macl_sleep$macl segment code 2h #0h
	$$macl_start$macl segment code 2h #0h
	$$macl_stop$macl segment code 2h #0h
	$$macl_total_transmission_time$macl segment code 2h #0h
	$$macl_tx_ack_abort_handler$macl segment code 2h #0h
	$$macl_txdone_handler$macl segment code 2h #0h
	$$macl_xmit_sync$macl segment code 2h #0h
CVERSION 3.53.1
CGLOBAL 01H 03H 0000H "macl_set_ack_tx_interval" 08H 02H 0FAH 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "macl_dummy_handler" 08H 02H 54H 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "macl_set_csma_params" 08H 02H 0F3H 00H 80H 00H 00H 00H 01H
CSGLOBAL 03H 0000H "macl_ack_timeout_handler" 08H 02H 5DH 01H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "macl_txdone_handler" 08H 02H 5BH 01H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "macl_rxdone_handler" 08H 02H 55H 01H 81H 06H 00H 00H 07H
CGLOBAL 01H 03H 0000H "macl_sleep" 08H 02H 0F8H 00H 81H 02H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_ed" 08H 02H 0EFH 00H 81H 04H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_set_channel" 08H 02H 0F0H 00H 83H 08H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_init" 0CH 02H 0EBH 00H 81H 04H 00H 03H 00H 00H 05H 0BH 00H
CSGLOBAL 03H 0000H "macl_fifodone_handler" 08H 02H 58H 01H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "macl_total_transmission_time" 08H 02H 5EH 01H 83H 18H 00H 00H 01H
CSGLOBAL 03H 0000H "macl_cca_abort_handler" 08H 02H 5AH 01H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "macl_set_promiscuous_mode" 08H 02H 0F5H 00H 81H 02H 00H 00H 01H
CSGLOBAL 03H 0000H "macl_ccadone_handler" 08H 02H 59H 01H 81H 04H 00H 00H 07H
CGLOBAL 01H 02H 0000H "macl_getCondition" 08H 02H 0F9H 00H 80H 00H 00H 00H 00H
CSGLOBAL 03H 0000H "macl_tx_ack_abort_handler" 08H 02H 57H 01H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "macl_set_frame_retries" 08H 02H 0F4H 00H 80H 00H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_set_hw_addr_filt" 08H 02H 0F1H 00H 81H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "macl_ack_rxdone_handler" 08H 02H 5CH 01H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "macl_ack_txdone_handler" 08H 02H 56H 01H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "macl_stop" 08H 02H 0EDH 00H 81H 02H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_xmit_sync" 08H 02H 0EEH 00H 83H 06H 00H 00H 01H
CGLOBAL 01H 03H 0000H "macl_start" 08H 02H 0ECH 00H 81H 02H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 001DH 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 2CH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 39H 01H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 001CH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0010H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001BH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 11H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0019H 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0007H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 07H 00H
CSTRUCTTAG 0000H 0000H 000BH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 07H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0014H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000EH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000DH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 0FH 00H
CSTRUCTTAG 0000H 0000H 0012H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 11H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0DH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0DH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 07H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0013H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0015H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0BH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 14H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 12H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 12H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 13H 00H
CSTRUCTTAG 0000H 0000H 000CH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0004H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0003H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0002H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0011H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 10H 00H
CUNIONTAG 0000H 0000H 000FH 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0017H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0016H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000AH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 0009H 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 06H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 16H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0BH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 19H 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 07H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 09H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CGLOBAL 00H 43H 0028H "macl" 04H 00H 05H 0BH 00H
CFILE 0001H 0000006FH "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_irq.h"
CFILE 0002H 00000331H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\irq\\irq.h"
CFILE 0003H 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\common\\rdwr_reg.h"
CFILE 0004H 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 0005H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0006H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0007H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0008H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0009H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 000AH 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 000BH 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 000CH 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000DH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000EH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000FH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 0011H 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0012H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0014H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0015H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0016H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0017H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0018H 00000082H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\subghz_api.h"
CFILE 0019H 0000009EH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\mach.h"
CFILE 001AH 00000064H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\macl.h"
CFILE 001BH 00000032H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\common_subghz.h"
CFILE 001CH 00000062H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\phy.h"
CFILE 001DH 0000003DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\endian.h"
CFILE 001EH 00000024H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\errno.h"
CFILE 001FH 00000064H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\hwif/hal.h"
CFILE 0000H 00000295H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\sub_ghz\\macl.c"

	rseg $$macl_total_transmission_time$macl
CFUNCTION 350

_macl_total_transmission_time	:
CBLOCK 350 1 81

;;{
CLINEA 0000H 0001H 0051H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_current_time$0	set	-4
	_duration$8	set	-8
	_tmp_ttl_byte$4	set	-12
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-012
	push	xr4
	push	bp
	push	er8
	mov	r8,	r0
CBLOCK 350 2 81
CRET 0016H
CARGUMENT 46H 0001H 001CH "len" 02H 00H 00H
CLOCAL 42H 0004H 0004H 0002H "current_time" 02H 00H 02H
CLOCAL 42H 0004H 000CH 0002H "tmp_ttl_byte" 02H 00H 02H
CLOCAL 42H 0004H 0008H 0002H "duration" 02H 00H 02H
CLOCAL 47H 0002H 002AH 0002H "status" 02H 00H 01H

;;	int status=STATUS_OK;
CLINEA 0000H 0001H 0056H 0002H 0016H
	mov	bp,	#0 	;; _lstatus$12

;;	current_time = HAL_millis();
CLINEA 0000H 0000H 005DH 0002H 001DH
	bl	_millis
	st	er0,	_current_time$0[fp]
	st	er2,	_current_time$0+02h[fp]

;;	duration = current_time - macl.start_send_time;
CLINEA 0000H 0001H 005EH 0002H 0030H
	l	er4,	NEAR _macl+016h
	l	er6,	NEAR _macl+018h
	sub	r0,	r4
	subc	r1,	r5
	subc	r2,	r6
	subc	r3,	r7
	st	er0,	_duration$8[fp]
	st	er2,	_duration$8+02h[fp]

;;	if(duration > 3600000L)
CLINEA 0000H 0001H 005FH 0002H 0018H
	cmp	r0,	#080h
	cmpc	r1,	#0eeh
	cmpc	r2,	#036h
	cmpc	r3,	#00h
	ble	_$L1
CBLOCK 350 3 96

;;		macl.total_send_bytes = 0;
CLINEA 0000H 0001H 0061H 0003H 001CH
	mov	er0,	#0 
	st	er0,	NEAR _macl+012h
	st	er0,	NEAR _macl+014h

;;		macl.start_send_time = current_time;
CLINEA 0000H 0001H 0062H 0003H 0026H
	l	er0,	_current_time$0[fp]
	l	er2,	_current_time$0+02h[fp]
	st	er0,	NEAR _macl+016h
	st	er2,	NEAR _macl+018h
CBLOCKEND 350 3 99

;;	}
CLINEA 0000H 0000H 0063H 0002H 0002H
_$L1 :

;;	tmp_ttl_byte = macl.total_send_bytes;
CLINEA 0000H 0001H 0066H 0002H 0026H
	l	er0,	NEAR _macl+012h
	l	er2,	NEAR _macl+014h
	st	er0,	_tmp_ttl_byte$4[fp]
	st	er2,	_tmp_ttl_byte$4+02h[fp]

;;	switch(macl.pages)
CLINEA 0000H 0001H 0067H 0002H 0013H
	l	r0,	NEAR _macl+01h
CBLOCK 350 4 104
	cmp	r0,	#01h
	beq	_$L8

;;	switch(macl.pages)
CLINEA 0000H 0000H 0067H 0002H 0013H
	cmp	r0,	#02h
	beq	_$L9

;;		status = -EAGAIN;
CLINEA 0000H 0001H 0073H 0003H 0013H
	mov	bp,	#-11	;; _lstatus$12
CBLOCKEND 350 4 117

;;	}
CLINEA 0000H 0000H 0075H 0002H 0002H
_$L6 :

;;	duration = current_time - macl.last_send_time;
CLINEA 0000H 0001H 0078H 0002H 002FH
	l	er0,	_current_time$0[fp]
	l	er2,	_current_time$0+02h[fp]
	l	er4,	NEAR _macl+01ah
	l	er6,	NEAR _macl+01ch
	sub	r0,	r4
	subc	r1,	r5
	subc	r2,	r6
	subc	r3,	r7
	st	er0,	_duration$8[fp]
	st	er2,	_duration$8+02h[fp]

;;	if((macl.ch >= 24)&&(macl.ch<=32))
CLINEA 0000H 0001H 007AH 0002H 0023H
	l	r0,	NEAR _macl+02h
	cmp	r0,	#018h
	blt	_$L12
	cmp	r0,	#020h
	bgt	_$L19
CBLOCK 350 6 123

;;		if(duration < 50)
CLINEA 0000H 0001H 007CH 0003H 0013H
	l	er0,	_duration$8[fp]
	cmp	r0,	#032h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bge	_$L19
CBLOCK 350 7 125

;;			HAL_sleep(50-duration);
CLINEA 0000H 0001H 007EH 0004H 001AH
	mov	er0,	#50
	mov	er2,	#0 
	l	er4,	_duration$8[fp]
	l	er6,	_duration$8+02h[fp]
	sub	r0,	r4
	subc	r1,	r5
	subc	r2,	r6
	subc	r3,	r7
	bl	_sleep_long
CBLOCKEND 350 7 127

;;		}
CLINEA 0000H 0000H 007FH 0003H 0003H
_$L19 :
CBLOCKEND 350 6 128

;;	}
CLINEA 0000H 0000H 0080H 0002H 0002H
_$L12 :

;;	return status;
CLINEA 0000H 0001H 0083H 0002H 000FH
	mov	er0,	bp
CBLOCKEND 350 2 132

;;}
CLINEA 0000H 0000H 0084H 0001H 0001H
	pop	er8
	pop	bp
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc

;;    case 1:  /*  50kbps */
CLINEA 0000H 0001H 0069H 0005H 001AH
_$L8 :

;;		tmp_ttl_byte += len; // + SUBGHZ_HEADER_SIZE;
CLINEA 0000H 0001H 006AH 0003H 002FH
	mov	r0,	r8
	mov	r1,	#00h
	mov	er4,	er0
	mov	er6,	#0 
	l	er0,	_tmp_ttl_byte$4[fp]
	l	er2,	_tmp_ttl_byte$4+02h[fp]
	add	er0,	er4
	addc	r2,	r6
	addc	r3,	r7
	st	er0,	_tmp_ttl_byte$4[fp]
	st	er2,	_tmp_ttl_byte$4+02h[fp]

;;    case 2:  /* 100kbps */
CLINEA 0000H 0001H 006BH 0005H 001AH
_$L9 :

;;		tmp_ttl_byte += len; //  + SUBGHZ_HEADER_SIZE;
CLINEA 0000H 0001H 006CH 0003H 0030H
	mov	r0,	r8
	mov	r1,	#00h
	mov	er4,	er0
	mov	er6,	#0 
	l	er0,	_tmp_ttl_byte$4[fp]
	l	er2,	_tmp_ttl_byte$4+02h[fp]
	add	er0,	er4
	addc	r2,	r6
	addc	r3,	r7
	st	er0,	_tmp_ttl_byte$4[fp]
	st	er2,	_tmp_ttl_byte$4+02h[fp]

;;		if(tmp_ttl_byte>45000000)
CLINEA 0000H 0001H 006DH 0003H 001BH
	cmp	r0,	#040h
	cmpc	r1,	#0a5h
	cmpc	r2,	#0aeh
	cmpc	r3,	#02h
	ble	_$L6
CBLOCK 350 5 110

;;			status = -EAGAIN;
CLINEA 0000H 0001H 006FH 0004H 0014H
	mov	bp,	#-11	;; _lstatus$12
CBLOCKEND 350 5 112

;;		break;
CLINEA 0000H 0001H 0071H 0003H 0008H
	bal	_$L6
CBLOCKEND 350 1 132
CFUNCTIONEND 350


	rseg $$macl_dummy_handler$macl
CFUNCTION 340

_macl_dummy_handler	:
CBLOCK 340 1 136

;;{
CLINEA 0000H 0001H 0088H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 340 2 136

;;    phy_stop();
CLINEA 0000H 0001H 0089H 0005H 000FH
	b	_phy_stop
CBLOCKEND 340 2 138
CLINEA 0000H 0001H 008AH 0001H 0001H
CBLOCKEND 340 1 138
CFUNCTIONEND 340


	rseg $$macl_rxdone_handler$macl
CFUNCTION 341

_macl_rxdone_handler	:
CBLOCK 341 1 141

;;{
CLINEA 0000H 0001H 008DH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
	push	er4
CBLOCK 341 2 141
CRET 0004H
CLOCAL 47H 0002H 0026H 0002H "status" 02H 00H 01H

;;    macl.condition=SUBGHZ_ST_RX_DONE;
CLINEA 0000H 0001H 0090H 0005H 0025H
	mov	r0,	#0bh
	st	r0,	NEAR _macl

;;	phy_timer_di();
CLINEA 0000H 0001H 0091H 0002H 0010H
	bl	_phy_timer_di

;;    status = phy_rxdone(&macl.phy->in);
CLINEA 0000H 0000H 0092H 0005H 0027H
	l	er0,	NEAR _macl+01eh
	add	er0,	#4 
	bl	_phy_rxdone
	mov	er4,	er0	;; _lstatus$0

;;	if(status == STATUS_OK) {
CLINEA 0000H 0001H 0093H 0002H 001AH
	mov	er0,	er0
	bne	_$L23
CBLOCK 341 3 147

;;    	status = macl_rx_irq(&macl.phy->in,&macl.ack);
CLINEA 0000H 0000H 0094H 0006H 0033H
	mov	r2,	#BYTE1 OFFSET (_macl+020h)
	mov	r3,	#BYTE2 OFFSET (_macl+020h)
	l	er0,	NEAR _macl+01eh
	add	er0,	#4 
	bl	_macl_rx_irq
	mov	er4,	er0	;; _lstatus$0
CBLOCKEND 341 3 149

;;	}
CLINEA 0000H 0000H 0095H 0002H 0002H
_$L23 :

;;	if ((status == STATUS_OK) && !macl.promiscuousMode && (macl_total_transmission_time(macl.phy->out.len) == STATUS_OK) && macl.ack.data){
CLINEA 0000H 0000H 0097H 0002H 0088H
	mov	er0,	er0
	bne	_$L25
	l	r0,	NEAR _macl+0ch
	bne	_$L25
	l	bp,	NEAR _macl+01eh
	l	r0,	12[bp]
	bl	_macl_total_transmission_time
	mov	er0,	er0
	bne	_$L25
	l	er0,	NEAR _macl+020h
	beq	_$L25
CBLOCK 341 4 151

;;			phy_sint_handler(macl_ack_txdone_handler);
CLINEA 0000H 0001H 0098H 0004H 002DH
	mov	r0,	#BYTE1 OFFSET _macl_ack_txdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ack_txdone_handler
	bl	_phy_sint_handler

;;			HAL_delayMicroseconds(macl.tx_ack_interval);
CLINEA 0000H 0001H 0099H 0004H 002FH
	l	er0,	NEAR _macl+026h
	mov	er2,	#0 
	bl	_HAL_delayMicroseconds

;;			phy_txStart(&macl.ack,2);
CLINEA 0000H 0001H 009AH 0004H 001CH
	mov	r2,	#02h
	mov	r0,	#BYTE1 OFFSET (_macl+020h)
	mov	r1,	#BYTE2 OFFSET (_macl+020h)
	bl	_phy_txStart

;;			phy_timer_handler(macl_tx_ack_abort_handler);
CLINEA 0000H 0001H 009BH 0004H 0030H
	mov	r0,	#BYTE1 OFFSET _macl_tx_ack_abort_handler
	mov	r1,	#BYTE2 OFFSET _macl_tx_ack_abort_handler
	bl	_phy_timer_handler

;;			phy_timer_start(20);
CLINEA 0000H 0001H 009CH 0004H 0017H
	mov	er0,	#20
	bl	_phy_timer_start
CBLOCKEND 341 4 157

;;	} else {
CLINEA 0000H 0000H 009DH 0002H 0009H
	bal	_$L38
_$L25 :
CBLOCK 341 5 157

;;		phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 009EH 0003H 0028H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;		if(status == STATUS_OK)	macl_rx_irq(NULL,NULL);
CLINEA 0000H 0001H 009FH 0003H 0031H
	mov	er4,	er4
	bne	_$L39
	mov	er2,	#0 
	mov	er0,	#0 
	bl	_macl_rx_irq
_$L39 :

;;		if(macl.rxOnEnable){
CLINEA 0000H 0001H 00A0H 0003H 0016H
	l	r0,	NEAR _macl+0bh
	beq	_$L41
CBLOCK 341 6 160

;;			phy_rxStart();
CLINEA 0000H 0001H 00A1H 0004H 0011H
	bl	_phy_rxStart

;;			phy_wait_phy_event();
CLINEA 0000H 0001H 00A2H 0004H 0018H
	bl	_phy_wait_phy_event

;;    		macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 00A3H 0007H 0028H
	mov	r0,	#0ah
CBLOCKEND 341 6 164

;;		}else{
CLINEA 0000H 0000H 00A4H 0003H 0008H
	bal	_$L43
_$L41 :
CBLOCK 341 7 164

;;			phy_stop();
CLINEA 0000H 0001H 00A5H 0004H 000EH
	bl	_phy_stop

;;    		macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 00A6H 0007H 0024H
	mov	r0,	#0dh
CBLOCKEND 341 7 167

;;		}
CLINEA 0000H 0000H 00A7H 0003H 0003H
_$L43 :
	st	r0,	NEAR _macl

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 00A8H 0003H 0019H
	bl	_phy_wakeup_mac_event
CBLOCKEND 341 5 169

;;	}
CLINEA 0000H 0000H 00A9H 0002H 0002H
_$L38 :

;;	phy_timer_ei();
CLINEA 0000H 0001H 00B7H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 341 2 184

;;}
CLINEA 0000H 0001H 00B8H 0001H 0001H
	pop	er4
	pop	bp
	pop	pc
CBLOCKEND 341 1 184
CFUNCTIONEND 341


	rseg $$macl_ack_txdone_handler$macl
CFUNCTION 342

_macl_ack_txdone_handler	:
CBLOCK 342 1 188

;;{
CLINEA 0000H 0001H 00BCH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 342 2 188
CRET 0000H

;;	phy_timer_di();
CLINEA 0000H 0001H 00C1H 0002H 0010H
	bl	_phy_timer_di

;;	phy_timer_stop();
CLINEA 0000H 0001H 00C2H 0002H 0012H
	bl	_phy_timer_stop

;;	macl.condition=SUBGHZ_ST_RX_ACK_DONE;
CLINEA 0000H 0001H 00C3H 0002H 0026H
	mov	r0,	#0ch
	st	r0,	NEAR _macl

;;	macl.ack.data = NULL;
CLINEA 0000H 0001H 00C4H 0002H 0016H
	mov	er0,	#0 
	st	er0,	NEAR _macl+020h

;;	macl.ack.len = 0;
CLINEA 0000H 0001H 00C5H 0002H 0012H
	st	er0,	NEAR _macl+022h

;;	macl_rx_irq(NULL,NULL);
CLINEA 0000H 0001H 00C6H 0002H 0018H
	mov	er2,	#0 
	bl	_macl_rx_irq

;;	phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 00C7H 0002H 0027H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;	if(macl.rxOnEnable){
CLINEA 0000H 0001H 00C8H 0002H 0015H
	l	r0,	NEAR _macl+0bh
	beq	_$L45
CBLOCK 342 3 200

;;		phy_rxStart();
CLINEA 0000H 0001H 00C9H 0003H 0010H
	bl	_phy_rxStart

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 00CAH 0003H 0017H
	bl	_phy_wait_phy_event

;;    	macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 00CBH 0006H 0027H
	mov	r0,	#0ah
CBLOCKEND 342 3 204

;;	}else{
CLINEA 0000H 0000H 00CCH 0002H 0007H
	bal	_$L47
_$L45 :
CBLOCK 342 4 204

;;		phy_stop();
CLINEA 0000H 0001H 00CDH 0003H 000DH
	bl	_phy_stop

;;    	macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 00CEH 0006H 0023H
	mov	r0,	#0dh
CBLOCKEND 342 4 207

;;	}
CLINEA 0000H 0000H 00CFH 0002H 0002H
_$L47 :
	st	r0,	NEAR _macl

;;	phy_wakeup_mac_event();
CLINEA 0000H 0001H 00D0H 0002H 0018H
	bl	_phy_wakeup_mac_event

;;	phy_timer_ei();
CLINEA 0000H 0001H 00D1H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 342 2 210

;;}
CLINEA 0000H 0001H 00D2H 0001H 0001H
	pop	pc
CBLOCKEND 342 1 210
CFUNCTIONEND 342


	rseg $$macl_tx_ack_abort_handler$macl
CFUNCTION 343

_macl_tx_ack_abort_handler	:
CBLOCK 343 1 213

;;{
CLINEA 0000H 0001H 00D5H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 343 2 213
CRET 0000H

;;	phy_sint_di();
CLINEA 0000H 0001H 00DAH 0002H 000FH
	bl	_phy_sint_di

;;	phy_timer_stop();
CLINEA 0000H 0001H 00DBH 0002H 0012H
	bl	_phy_timer_stop

;;	macl.condition=SUBGHZ_ST_RX_ACK_DONE;
CLINEA 0000H 0001H 00DCH 0002H 0026H
	mov	r0,	#0ch
	st	r0,	NEAR _macl

;;	macl.ack.data = NULL;
CLINEA 0000H 0001H 00DDH 0002H 0016H
	mov	er0,	#0 
	st	er0,	NEAR _macl+020h

;;	macl.ack.len = 0;
CLINEA 0000H 0001H 00DEH 0002H 0012H
	st	er0,	NEAR _macl+022h

;;	macl_rx_irq(NULL,NULL);
CLINEA 0000H 0001H 00DFH 0002H 0018H
	mov	er2,	#0 
	bl	_macl_rx_irq

;;	phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 00E0H 0002H 0027H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;	if(macl.rxOnEnable){
CLINEA 0000H 0001H 00E1H 0002H 0015H
	l	r0,	NEAR _macl+0bh
	beq	_$L49
CBLOCK 343 3 225

;;		phy_rxStart();
CLINEA 0000H 0001H 00E2H 0003H 0010H
	bl	_phy_rxStart

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 00E3H 0003H 0017H
	bl	_phy_wait_phy_event

;;    	macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 00E4H 0006H 0027H
	mov	r0,	#0ah
CBLOCKEND 343 3 229

;;	}else{
CLINEA 0000H 0000H 00E5H 0002H 0007H
	bal	_$L51
_$L49 :
CBLOCK 343 4 229

;;		phy_stop();
CLINEA 0000H 0001H 00E6H 0003H 000DH
	bl	_phy_stop

;;    	macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 00E7H 0006H 0023H
	mov	r0,	#0dh
CBLOCKEND 343 4 232

;;	}
CLINEA 0000H 0000H 00E8H 0002H 0002H
_$L51 :
	st	r0,	NEAR _macl

;;	phy_wakeup_mac_event();
CLINEA 0000H 0001H 00E9H 0002H 0018H
	bl	_phy_wakeup_mac_event

;;	phy_sint_ei();
CLINEA 0000H 0001H 00EAH 0002H 000FH
	bl	_phy_sint_ei
CBLOCKEND 343 2 235

;;}
CLINEA 0000H 0001H 00EBH 0001H 0001H
	pop	pc
CBLOCKEND 343 1 235
CFUNCTIONEND 343


	rseg $$macl_fifodone_handler$macl
CFUNCTION 344

_macl_fifodone_handler	:
CBLOCK 344 1 238

;;{
CLINEA 0000H 0001H 00EEH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 344 2 238
CRET 0000H

;;	phy_timer_di();
CLINEA 0000H 0001H 00F2H 0002H 0010H
	bl	_phy_timer_di

;;	phy_sint_handler(macl_ccadone_handler);
CLINEA 0000H 0001H 00F3H 0002H 0028H
	mov	r0,	#BYTE1 OFFSET _macl_ccadone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ccadone_handler
	bl	_phy_sint_handler

;;	phy_ccaCtrl(CCA_FAST);
CLINEA 0000H 0001H 00F4H 0002H 0017H
	mov	er0,	#1 
	bl	_phy_ccaCtrl

;;	phy_wait_phy_event();
CLINEA 0000H 0001H 00F5H 0002H 0016H
	bl	_phy_wait_phy_event

;;	phy_timer_ei();
CLINEA 0000H 0001H 00F6H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 344 2 247

;;}
CLINEA 0000H 0001H 00F7H 0001H 0001H
	pop	pc
CBLOCKEND 344 1 247
CFUNCTIONEND 344


	rseg $$macl_ccadone_handler$macl
CFUNCTION 345

_macl_ccadone_handler	:
CBLOCK 345 1 251

;;{
CLINEA 0000H 0001H 00FBH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er4
CBLOCK 345 2 251
CRET 0002H
CLOCAL 47H 0002H 0026H 0002H "cca_state" 02H 00H 01H

;;	phy_timer_di();
CLINEA 0000H 0001H 00FEH 0002H 0010H
	bl	_phy_timer_di

;;	cca_state = phy_ccadone(macl.ccaBe,macl.ccaCount,macl.ccaRetry);
CLINEA 0000H 0000H 00FFH 0002H 0041H
	l	r2,	NEAR _macl+03h
	l	r1,	NEAR _macl+05h
	l	r0,	NEAR _macl+04h
	bl	_phy_ccadone
	mov	er4,	er0	;; _lcca_state$0

;;	if(cca_state == IDLE_DETECT){
CLINEA 0000H 0001H 0103H 0002H 001EH
	cmp	r0,	#02h
	cmpc	r1,	#00h
	bne	_$L54
CBLOCK 345 3 259

;;		macl.condition=SUBGHZ_ST_CCA_IDLE_DETECT;
CLINEA 0000H 0001H 0104H 0003H 002BH
	mov	r0,	#02h
	st	r0,	NEAR _macl

;;		macl.ccaCount++;
CLINEA 0000H 0000H 0105H 0003H 0012H
	lea	OFFSET (_macl+05h)
	inc	[ea]

;;		phy_timer_handler(macl_cca_abort_handler);
CLINEA 0000H 0001H 0106H 0003H 002CH
	mov	r0,	#BYTE1 OFFSET _macl_cca_abort_handler
	mov	r1,	#BYTE2 OFFSET _macl_cca_abort_handler
	bl	_phy_timer_handler

;;		phy_timer_start(50);
CLINEA 0000H 0001H 0107H 0003H 0016H
	mov	er0,	#50
	bl	_phy_timer_start

;;		phy_sint_handler(macl_ccadone_handler);
CLINEA 0000H 0001H 0108H 0003H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_ccadone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ccadone_handler
	bl	_phy_sint_handler

;;		phy_ccaCtrl(cca_state);
CLINEA 0000H 0001H 0109H 0003H 0019H
	mov	er0,	er4
	bl	_phy_ccaCtrl

;;	}else if(cca_state == CCA_RETRY){
CLINEA 0000H 0000H 010BH 0002H 0022H
	b	_$L66
_$L54 :
	cmp	r0,	#03h
	cmpc	r1,	#00h
	bne	_$L57
CBLOCK 345 4 267

;;		macl.condition=SUBGHZ_ST_CCA_RETRY;
CLINEA 0000H 0001H 010CH 0003H 0025H
	mov	r0,	#04h
	st	r0,	NEAR _macl

;;		phy_timer_stop(); // stop for cca abort timer
CLINEA 0000H 0001H 010DH 0003H 002FH
	bl	_phy_timer_stop

;;		macl.ccaCount++;
CLINEA 0000H 0000H 010EH 0003H 0012H
	lea	OFFSET (_macl+05h)
	inc	[ea]

;;		phy_sint_handler(macl_ccadone_handler);
CLINEA 0000H 0001H 010FH 0003H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_ccadone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ccadone_handler
	bl	_phy_sint_handler

;;		phy_ccaCtrl(cca_state);
CLINEA 0000H 0001H 0110H 0003H 0019H
	mov	er0,	er4
	bl	_phy_ccaCtrl

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 0111H 0003H 0017H
	bl	_phy_wait_phy_event

;;	}else if(cca_state == CCA_FAILURE){
CLINEA 0000H 0000H 0112H 0002H 0024H
	bal	_$L66
_$L57 :
	cmp	r0,	#04h
	cmpc	r1,	#00h
	bne	_$L60
CBLOCK 345 5 274

;;		macl.condition=SUBGHZ_ST_CCA_FAILURE;
CLINEA 0000H 0001H 0113H 0003H 0027H
	mov	r0,	#05h
	st	r0,	NEAR _macl

;;		phy_ccaCtrl(cca_state);
CLINEA 0000H 0001H 0114H 0003H 0019H
	mov	er0,	er4
	bl	_phy_ccaCtrl

;;		if(macl.rxOnEnable){
CLINEA 0000H 0001H 0115H 0003H 0016H
	l	r0,	NEAR _macl+0bh
	beq	_$L62
CBLOCK 345 6 277

;;			macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 0116H 0004H 0025H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;			phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 0117H 0004H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;			phy_rxStart();
CLINEA 0000H 0001H 0118H 0004H 0011H
	bl	_phy_rxStart

;;			phy_wait_phy_event();
CLINEA 0000H 0001H 0119H 0004H 0018H
	bl	_phy_wait_phy_event

;;			phy_wakeup_mac_event();
CLINEA 0000H 0001H 011AH 0004H 001AH
	bl	_phy_wakeup_mac_event
CBLOCKEND 345 6 283

;;		}else{
CLINEA 0000H 0000H 011BH 0003H 0008H
	bal	_$L64
_$L62 :
CBLOCK 345 7 283

;;			macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 011CH 0004H 0021H
	mov	r0,	#0dh
	st	r0,	NEAR _macl

;;			phy_stop();
CLINEA 0000H 0001H 011DH 0004H 000EH
	bl	_phy_stop
CBLOCKEND 345 7 286

;;		}
CLINEA 0000H 0000H 011EH 0003H 0003H
_$L64 :

;;		macl.status = -EBUSY;
CLINEA 0000H 0001H 011FH 0003H 0017H
	mov	er0,	#-16
	st	er0,	NEAR _macl+010h

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 0120H 0003H 0019H
	bl	_phy_wakeup_mac_event

;;	}else if(cca_state == CCA_IDLE){
CLINEA 0000H 0000H 0121H 0002H 0021H
	bal	_$L66
_$L60 :
	mov	er4,	er4
	bne	_$L66
CBLOCK 345 8 289

;;		macl.condition=SUBGHZ_ST_CCA_DONE;
CLINEA 0000H 0001H 0122H 0003H 0024H
	mov	r0,	#06h
	st	r0,	NEAR _macl

;;		phy_timer_stop();
CLINEA 0000H 0001H 0123H 0003H 0013H
	bl	_phy_timer_stop

;;		phy_sint_handler(macl_txdone_handler);
CLINEA 0000H 0001H 0124H 0003H 0028H
	mov	r0,	#BYTE1 OFFSET _macl_txdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_txdone_handler
	bl	_phy_sint_handler

;;		phy_ccaCtrl(cca_state);
CLINEA 0000H 0001H 0125H 0003H 0019H
	mov	er0,	er4
	bl	_phy_ccaCtrl
CBLOCKEND 345 8 295

;;	}
CLINEA 0000H 0000H 0127H 0002H 0002H
_$L66 :
CBLOCKEND 345 5 297
CBLOCKEND 345 4 297

;;	phy_timer_ei();
CLINEA 0000H 0001H 0128H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 345 3 297
CBLOCKEND 345 2 297

;;}
CLINEA 0000H 0001H 0129H 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 345 1 297
CFUNCTIONEND 345


	rseg $$macl_cca_abort_handler$macl
CFUNCTION 346

_macl_cca_abort_handler	:
CBLOCK 346 1 301

;;{
CLINEA 0000H 0001H 012DH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 346 2 301
CRET 0000H

;;	phy_sint_di();
CLINEA 0000H 0001H 0131H 0002H 000FH
	bl	_phy_sint_di

;;	macl.condition=SUBGHZ_ST_CCA_ABORT;
CLINEA 0000H 0001H 0132H 0002H 0024H
	mov	r0,	#03h
	st	r0,	NEAR _macl

;;	phy_timer_stop();
CLINEA 0000H 0001H 0133H 0002H 0012H
	bl	_phy_timer_stop

;;	phy_ccaCtrl(CCA_FAILURE);
CLINEA 0000H 0001H 0134H 0002H 001AH
	mov	er0,	#4 
	bl	_phy_ccaCtrl

;;	if(macl.rxOnEnable){
CLINEA 0000H 0001H 0135H 0002H 0015H
	l	r0,	NEAR _macl+0bh
	beq	_$L69
CBLOCK 346 3 309

;;		macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 0136H 0003H 0024H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;		phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 0137H 0003H 0028H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;		phy_rxStart();
CLINEA 0000H 0001H 0138H 0003H 0010H
	bl	_phy_rxStart

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 0139H 0003H 0017H
	bl	_phy_wait_phy_event

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 013AH 0003H 0019H
	bl	_phy_wakeup_mac_event
CBLOCKEND 346 3 315

;;	}else{
CLINEA 0000H 0000H 013BH 0002H 0007H
	bal	_$L71
_$L69 :
CBLOCK 346 4 315

;;		macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 013CH 0003H 0020H
	mov	r0,	#0dh
	st	r0,	NEAR _macl

;;		phy_stop();
CLINEA 0000H 0001H 013DH 0003H 000DH
	bl	_phy_stop
CBLOCKEND 346 4 318

;;	}
CLINEA 0000H 0000H 013EH 0002H 0002H
_$L71 :

;;	macl.status = -EBUSY;
CLINEA 0000H 0001H 0140H 0002H 0016H
	mov	er0,	#-16
	st	er0,	NEAR _macl+010h

;;	phy_wakeup_mac_event();
CLINEA 0000H 0001H 0141H 0002H 0018H
	bl	_phy_wakeup_mac_event

;;	phy_sint_ei();
CLINEA 0000H 0001H 0142H 0002H 000FH
	bl	_phy_sint_ei
CBLOCKEND 346 2 323

;;}
CLINEA 0000H 0001H 0143H 0001H 0001H
	pop	pc
CBLOCKEND 346 1 323
CFUNCTIONEND 346


	rseg $$macl_txdone_handler$macl
CFUNCTION 347

_macl_txdone_handler	:
CBLOCK 347 1 326

;;{
CLINEA 0000H 0001H 0146H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
CBLOCK 347 2 326
CRET 0002H
CLOCAL 46H 0001H 0014H 0002H "ack_req" 02H 00H 00H
CLOCAL 46H 0002H 0024H 0002H "timeout" 02H 00H 08H

;;	phy_timer_di();
CLINEA 0000H 0001H 014DH 0002H 0010H
	bl	_phy_timer_di

;;	macl.condition=SUBGHZ_ST_TX_DONE;
CLINEA 0000H 0001H 014EH 0002H 0022H
	mov	r0,	#07h
	st	r0,	NEAR _macl

;;	phy_txdone();
CLINEA 0000H 0001H 014FH 0002H 000EH
	bl	_phy_txdone

;;	ack_req = macl.phy->out.data[0]&0x20;
CLINEA 0000H 0001H 0150H 0002H 0026H
	l	bp,	NEAR _macl+01eh
	l	bp,	10[bp]
	l	r0,	[bp]
	and	r0,	#020h

;;	if(ack_req){
CLINEA 0000H 0001H 0151H 0002H 000DH
	cmp	r0,	#00h
	beq	_$L73
CBLOCK 347 3 337

;;		phy_timer_handler(macl_ack_timeout_handler);
CLINEA 0000H 0001H 0152H 0003H 002EH
	mov	r0,	#BYTE1 OFFSET _macl_ack_timeout_handler
	mov	r1,	#BYTE2 OFFSET _macl_ack_timeout_handler
	bl	_phy_timer_handler

;;		if(macl.ack_timeout == 0) {
CLINEA 0000H 0001H 0153H 0003H 001DH
	l	er0,	NEAR _macl+0eh
	bne	_$L75
CBLOCK 347 4 339

;;			timeout = 5 + rand() % 15;
CLINEA 0000H 0000H 0154H 0004H 001DH
	bl	_rand
	mov	er2,	#15
	bl	__imodu8sw
	add	er0,	#5 
CBLOCKEND 347 4 341

;;		} else {
CLINEA 0000H 0000H 0155H 0003H 000AH
_$L75 :
CBLOCK 347 5 341

;;			timeout = macl.ack_timeout;
CLINEA 0000H 0001H 0156H 0004H 001EH
CBLOCKEND 347 5 343

;;		}
CLINEA 0000H 0000H 0157H 0003H 0003H
_$L77 :

;;		phy_timer_start(timeout);
CLINEA 0000H 0001H 0158H 0003H 001BH
	bl	_phy_timer_start

;;		phy_sint_handler(macl_ack_rxdone_handler);
CLINEA 0000H 0001H 0159H 0003H 002CH
	mov	r0,	#BYTE1 OFFSET _macl_ack_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ack_rxdone_handler
	bl	_phy_sint_handler

;;		phy_rxStart();
CLINEA 0000H 0001H 015AH 0003H 0010H
	bl	_phy_rxStart
CBLOCKEND 347 3 347

;;	}else{
CLINEA 0000H 0000H 015BH 0002H 0007H
	bal	_$L78
_$L73 :
CBLOCK 347 6 347

;;		if(macl.rxOnEnable){
CLINEA 0000H 0001H 015CH 0003H 0016H
	l	r0,	NEAR _macl+0bh
	beq	_$L79
CBLOCK 347 7 348

;;			phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 015DH 0004H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;			phy_rxStart();
CLINEA 0000H 0001H 015EH 0004H 0011H
	bl	_phy_rxStart

;;			macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 015FH 0004H 0025H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;			phy_wait_phy_event();
CLINEA 0000H 0001H 0160H 0004H 0018H
	bl	_phy_wait_phy_event
CBLOCKEND 347 7 353

;;		}else{
CLINEA 0000H 0000H 0161H 0003H 0008H
	bal	_$L81
_$L79 :
CBLOCK 347 8 353

;;			phy_stop();
CLINEA 0000H 0001H 0162H 0004H 000EH
	bl	_phy_stop

;;			macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 0163H 0004H 0021H
	mov	r0,	#0dh
	st	r0,	NEAR _macl
CBLOCKEND 347 8 356

;;		}
CLINEA 0000H 0000H 0164H 0003H 0003H
_$L81 :

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 0165H 0003H 0019H
	bl	_phy_wakeup_mac_event
CBLOCKEND 347 6 358

;;	}
CLINEA 0000H 0000H 0166H 0002H 0002H
_$L78 :

;;	phy_timer_ei();
CLINEA 0000H 0001H 0167H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 347 2 360

;;}
CLINEA 0000H 0001H 0168H 0001H 0001H
	pop	bp
	pop	pc
CBLOCKEND 347 1 360
CFUNCTIONEND 347


	rseg $$macl_ack_rxdone_handler$macl
CFUNCTION 348

_macl_ack_rxdone_handler	:
CBLOCK 348 1 364

;;{
CLINEA 0000H 0001H 016CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
CBLOCK 348 2 364
CRET 0002H
CLOCAL 47H 0002H 0024H 0002H "status" 02H 00H 01H

;;	phy_timer_di();
CLINEA 0000H 0001H 016FH 0002H 0010H
	bl	_phy_timer_di

;;	macl.condition=SUBGHZ_ST_TX_ACK_DONE;
CLINEA 0000H 0001H 0170H 0002H 0026H
	mov	r0,	#09h
	st	r0,	NEAR _macl

;;	status = phy_rxdone(&macl.phy->in);
CLINEA 0000H 0000H 0171H 0002H 0024H
	l	er0,	NEAR _macl+01eh
	add	er0,	#4 
	bl	_phy_rxdone

;;	if(status == STATUS_OK && ((macl.phy->in.data[0]&0x07) == IEEE802154_FC_TYPE_ACK) && (macl.phy->in.data[2] == macl.sequnceNum)){
CLINEA 0000H 0001H 0178H 0002H 0081H
	mov	er0,	er0
	bne	_$L83
	l	bp,	NEAR _macl+01eh
	l	bp,	4[bp]
	l	r0,	[bp]
	and	r0,	#07h
	cmp	r0,	#02h
	bne	_$L83
	l	bp,	NEAR _macl+01eh
	l	bp,	4[bp]
	l	r0,	2[bp]
	l	r1,	NEAR _macl+09h
	cmp	r0,	r1
	bne	_$L83
CBLOCK 348 3 376

;;		phy_timer_stop();
CLINEA 0000H 0001H 0179H 0003H 0013H
	bl	_phy_timer_stop

;;		if(macl.rxOnEnable){
CLINEA 0000H 0001H 017AH 0003H 0016H
	l	r0,	NEAR _macl+0bh
	beq	_$L93
CBLOCK 348 4 378

;;			macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 017BH 0004H 0025H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;			phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 017CH 0004H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;			phy_rxStart();
CLINEA 0000H 0001H 017DH 0004H 0011H
	bl	_phy_rxStart

;;			phy_wait_phy_event();
CLINEA 0000H 0001H 017EH 0004H 0018H
	bl	_phy_wait_phy_event
CBLOCKEND 348 4 383

;;		}else{
CLINEA 0000H 0000H 017FH 0003H 0008H
	bal	_$L95
_$L93 :
CBLOCK 348 5 383

;;			macl.condition=SUBGHZ_ST_NONE;
CLINEA 0000H 0001H 0180H 0004H 0021H
	mov	r0,	#0dh
	st	r0,	NEAR _macl

;;			phy_stop();
CLINEA 0000H 0001H 0181H 0004H 000EH
	bl	_phy_stop
CBLOCKEND 348 5 386

;;		}
CLINEA 0000H 0000H 0182H 0003H 0003H
_$L95 :

;;		macl_rx_irq(&macl.phy->in,NULL);
CLINEA 0000H 0001H 0183H 0003H 0022H
	mov	er2,	#0 
	l	er0,	NEAR _macl+01eh
	add	er0,	#4 
	bl	_macl_rx_irq

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 0184H 0003H 0019H
	bl	_phy_wakeup_mac_event
CBLOCKEND 348 3 389

;;	}else{
CLINEA 0000H 0000H 0185H 0002H 0007H
	bal	_$L96
_$L83 :
CBLOCK 348 6 389

;;		phy_rxStart();
CLINEA 0000H 0001H 0186H 0003H 0010H
	bl	_phy_rxStart
CBLOCKEND 348 6 392

;;	}
CLINEA 0000H 0000H 0188H 0002H 0002H
_$L96 :

;;	phy_timer_ei();
CLINEA 0000H 0001H 0189H 0002H 0010H
	bl	_phy_timer_ei
CBLOCKEND 348 2 394

;;}
CLINEA 0000H 0001H 018AH 0001H 0001H
	pop	bp
	pop	pc
CBLOCKEND 348 1 394
CFUNCTIONEND 348


	rseg $$macl_ack_timeout_handler$macl
CFUNCTION 349

_macl_ack_timeout_handler	:
CBLOCK 349 1 398

;;{
CLINEA 0000H 0001H 018EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
CBLOCK 349 2 398
CRET 0002H

;;	phy_sint_di();
CLINEA 0000H 0001H 0193H 0002H 000FH
	bl	_phy_sint_di

;;	macl.condition=SUBGHZ_ST_TX_ACK_TIMEOUT;
CLINEA 0000H 0001H 0194H 0002H 0029H
	mov	r0,	#08h
	st	r0,	NEAR _macl

;;	phy_timer_stop();
CLINEA 0000H 0001H 0195H 0002H 0012H
	bl	_phy_timer_stop

;;	phy_stop();
CLINEA 0000H 0001H 0196H 0002H 000CH
	bl	_phy_stop

;;			(macl_total_transmission_time(macl.phy->out.len) == STATUS_OK)){
CLINEA 0000H 0000H 0198H 0004H 0043H
	l	r0,	NEAR _macl+0ah
	l	r1,	NEAR _macl+07h
	cmp	r0,	r1
	bge	_$L98
	l	bp,	NEAR _macl+01eh
	l	r0,	12[bp]
	bl	_macl_total_transmission_time
	mov	er0,	er0
	bne	_$L98
CBLOCK 349 3 408

;;		macl.resendingNum++;
CLINEA 0000H 0000H 019AH 0003H 0016H
	lea	OFFSET (_macl+0ah)
	inc	[ea]

;;		if (macl.txMode == 0) {
CLINEA 0000H 0001H 019BH 0003H 0019H
	l	r0,	NEAR _macl+08h
	bne	_$L105
CBLOCK 349 4 411

;;			phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 019CH 0004H 002BH
	mov	r2,	r0
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart

;;			phy_sint_handler(macl_ccadone_handler);
CLINEA 0000H 0001H 019DH 0004H 002AH
	mov	r0,	#BYTE1 OFFSET _macl_ccadone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ccadone_handler
	bl	_phy_sint_handler

;;			phy_ccaCtrl(CCA_FAST);
CLINEA 0000H 0001H 019EH 0004H 0019H
	mov	er0,	#1 
	bl	_phy_ccaCtrl

;;		}else
CLINEA 0000H 0000H 019FH 0003H 0007H
	bal	_$L111
_$L105 :

;;			if (macl.txMode == 1) {
CLINEA 0000H 0001H 01A0H 0004H 001AH
	cmp	r0,	#01h
	bne	_$L108
CBLOCK 349 5 416

;;				phy_sint_handler(macl_fifodone_handler);
CLINEA 0000H 0001H 01A1H 0005H 002CH
	mov	r0,	#BYTE1 OFFSET _macl_fifodone_handler
	mov	r1,	#BYTE2 OFFSET _macl_fifodone_handler
	bl	_phy_sint_handler

;;				phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 01A2H 0005H 002CH
	l	r2,	NEAR _macl+08h
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart

;;			}else
CLINEA 0000H 0000H 01A3H 0004H 0008H
	bal	_$L111
_$L108 :

;;				if (macl.txMode == 2) {
CLINEA 0000H 0001H 01A4H 0005H 001BH
	cmp	r0,	#02h
	bne	_$L111
CBLOCK 349 6 420

;;					phy_sint_handler(macl_txdone_handler);
CLINEA 0000H 0001H 01A5H 0006H 002BH
	mov	r0,	#BYTE1 OFFSET _macl_txdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_txdone_handler
	bl	_phy_sint_handler

;;					phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 01A6H 0006H 002DH
	l	r2,	NEAR _macl+08h
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart
CBLOCKEND 349 6 423

;;				}
CLINEA 0000H 0000H 01A7H 0005H 0005H
_$L111 :
CBLOCKEND 349 5 436

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 01A8H 0003H 0017H
	bl	_phy_wait_phy_event
CBLOCKEND 349 4 436
CBLOCKEND 349 3 425

;;	}else{
CLINEA 0000H 0000H 01A9H 0002H 0007H
	bal	_$L113
_$L98 :
CBLOCK 349 7 425

;;		if(macl.rxOnEnable){
CLINEA 0000H 0001H 01AAH 0003H 0016H
	l	r0,	NEAR _macl+0bh
	beq	_$L114
CBLOCK 349 8 426

;;			macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 01ABH 0004H 0025H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;			phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 01ACH 0004H 0029H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;			phy_rxStart();
CLINEA 0000H 0001H 01ADH 0004H 0011H
	bl	_phy_rxStart

;;			phy_wait_phy_event();
CLINEA 0000H 0001H 01AEH 0004H 0018H
	bl	_phy_wait_phy_event
CBLOCKEND 349 8 431

;;		}
CLINEA 0000H 0000H 01AFH 0003H 0003H
_$L114 :

;;		macl.status = -ETIMEDOUT;
CLINEA 0000H 0001H 01B0H 0003H 001BH
	mov	r0,	#092h
	mov	r1,	#0ffh
	st	er0,	NEAR _macl+010h

;;		phy_wakeup_mac_event();
CLINEA 0000H 0001H 01B1H 0003H 0019H
	bl	_phy_wakeup_mac_event
CBLOCKEND 349 7 434

;;	}
CLINEA 0000H 0000H 01B2H 0002H 0002H
_$L113 :

;;	phy_sint_ei();
CLINEA 0000H 0001H 01B3H 0002H 000FH
	bl	_phy_sint_ei
CBLOCKEND 349 2 436

;;}
CLINEA 0000H 0001H 01B4H 0001H 0001H
	pop	bp
	pop	pc
CBLOCKEND 349 1 436
CFUNCTIONEND 349


	rseg $$macl_init$macl
CFUNCTION 235

_macl_init	:
CBLOCK 235 1 445

;;{
CLINEA 0000H 0001H 01BDH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 235 2 445
CRET 0000H

;;	phy_sint_di(); phy_timer_di();
CLINEA 0000H 0001H 01BEH 0002H 001FH
	bl	_phy_sint_di
	bl	_phy_timer_di

;;	memset(&macl,0,sizeof(MACL_PARAM));
CLINEA 0000H 0001H 01C0H 0002H 0024H
	mov	er0,	#40
	push	er0
	mov	er2,	#0 
	mov	r0,	#BYTE1 OFFSET _macl
	mov	r1,	#BYTE2 OFFSET _macl
	bl	_memset_n
	add	sp,	#2 

;;	macl.phy = phy_init();
CLINEA 0000H 0000H 01C1H 0002H 0017H
	bl	_phy_init
	st	er0,	NEAR _macl+01eh

;;	macl.txMode = 0;
CLINEA 0000H 0001H 01C3H 0002H 0011H
	mov	r0,	#00h
	st	r0,	NEAR _macl+08h

;;	phy_sint_handler(macl_dummy_handler);
CLINEA 0000H 0001H 01C8H 0002H 0026H
	mov	r0,	#BYTE1 OFFSET _macl_dummy_handler
	mov	r1,	#BYTE2 OFFSET _macl_dummy_handler
	bl	_phy_sint_handler

;;	phy_sint_ei(); phy_timer_ei();
CLINEA 0000H 0001H 01C9H 0002H 001FH
	bl	_phy_sint_ei
	bl	_phy_timer_ei

;;	macl.tx_ack_interval = 1000;
CLINEA 0000H 0001H 01CBH 0002H 001DH
	mov	r0,	#0e8h
	mov	r1,	#03h
	st	er0,	NEAR _macl+026h

;;	return &macl;
CLINEA 0000H 0001H 01CDH 0002H 000EH
	mov	r0,	#BYTE1 OFFSET _macl
	mov	r1,	#BYTE2 OFFSET _macl
CBLOCKEND 235 2 462

;;}
CLINEA 0000H 0000H 01CEH 0001H 0001H
	pop	pc
CBLOCKEND 235 1 462
CFUNCTIONEND 235


	rseg $$macl_start$macl
CFUNCTION 236

_macl_start	:
CBLOCK 236 1 472

;;{
CLINEA 0000H 0001H 01D8H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 236 2 472
CRET 0000H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.condition=SUBGHZ_ST_RX_START;
CLINEA 0000H 0001H 01DBH 0002H 0023H
	mov	r0,	#0ah
	st	r0,	NEAR _macl

;;	macl.rxOnEnable = 1;
CLINEA 0000H 0001H 01DCH 0002H 0015H
	mov	r0,	#01h
	st	r0,	NEAR _macl+0bh

;;	phy_sint_handler(macl_rxdone_handler);
CLINEA 0000H 0001H 01DDH 0002H 0027H
	mov	r0,	#BYTE1 OFFSET _macl_rxdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_rxdone_handler
	bl	_phy_sint_handler

;;	phy_rxStart();
CLINEA 0000H 0001H 01DEH 0002H 000FH
	bl	_phy_rxStart

;;	phy_wait_phy_event();
CLINEA 0000H 0001H 01DFH 0002H 0016H
	bl	_phy_wait_phy_event

;;	return status;
CLINEA 0000H 0001H 01E1H 0002H 000FH
CBLOCKEND 236 2 482

;;}
CLINEA 0000H 0000H 01E2H 0001H 0001H
	mov	er0,	#0 
	pop	pc
CBLOCKEND 236 1 482
CFUNCTIONEND 236


	rseg $$macl_stop$macl
CFUNCTION 237

_macl_stop	:
CBLOCK 237 1 486

;;{
CLINEA 0000H 0001H 01E6H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 237 2 486
CRET 0000H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.rxOnEnable = 0;
CLINEA 0000H 0001H 01E8H 0002H 0015H
	mov	r0,	#00h
	st	r0,	NEAR _macl+0bh

;;	if((macl.condition == SUBGHZ_ST_NONE) && (macl.condition == SUBGHZ_ST_RX_START)){
CLINEA 0000H 0001H 01ECH 0002H 0052H
	l	r0,	NEAR _macl
	cmp	r0,	#0dh
	bne	_$L119
	cmp	r0,	#0ah
	bne	_$L119
CBLOCK 237 3 492

;;		phy_stop();
CLINEA 0000H 0001H 01EDH 0003H 000DH
	bl	_phy_stop
CBLOCKEND 237 3 494

;;	}
CLINEA 0000H 0000H 01EEH 0002H 0002H
_$L119 :

;;	return status;
CLINEA 0000H 0001H 01EFH 0002H 000FH
CBLOCKEND 237 2 496

;;}
CLINEA 0000H 0000H 01F0H 0001H 0001H
	mov	er0,	#0 
	pop	pc
CBLOCKEND 237 1 496
CFUNCTIONEND 237


	rseg $$macl_xmit_sync$macl
CFUNCTION 238

_macl_xmit_sync	:
CBLOCK 238 1 500

;;{
CLINEA 0000H 0001H 01F4H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_buff$0	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	bp
CBLOCK 238 2 500
CRET 0004H
CARGUMENT 43H 0006H 0004H "buff" 04H 00H 05H 07H 00H

;;	macl.condition=SUBGHZ_ST_TX_START;
CLINEA 0000H 0001H 01F5H 0002H 0023H
	mov	r0,	#00h
	st	r0,	NEAR _macl

;;	macl.status=STATUS_OK;
CLINEA 0000H 0001H 01F6H 0002H 0017H
	mov	er0,	#0 
	st	er0,	NEAR _macl+010h

;;	macl.phy->out = buff;
CLINEA 0000H 0001H 01F7H 0002H 0016H
	l	bp,	NEAR _macl+01eh
	l	er0,	_buff$0[fp]
	st	er0,	10[bp]
	l	er0,	_buff$0+02h[fp]
	st	er0,	12[bp]
	l	er0,	_buff$0+04h[fp]
	st	er0,	14[bp]

;;	macl.resendingNum = 0;
CLINEA 0000H 0001H 01F8H 0002H 0017H
	mov	r0,	#00h
	st	r0,	NEAR _macl+0ah

;;	macl.ccaCount=0;
CLINEA 0000H 0001H 01F9H 0002H 0011H
	st	r0,	NEAR _macl+05h

;;	macl.sequnceNum= buff.data[2];
CLINEA 0000H 0001H 01FAH 0002H 001FH
	l	bp,	_buff$0[fp]
	l	r0,	2[bp]
	st	r0,	NEAR _macl+09h

;;	if(macl.condition == SUBGHZ_ST_RX_DONE){
CLINEA 0000H 0001H 01FCH 0002H 0029H
	l	r0,	NEAR _macl
	cmp	r0,	#0bh
	bne	_$L127
CBLOCK 238 3 508

;;		phy_wait_mac_event();
CLINEA 0000H 0001H 01FDH 0003H 0017H
	bl	_phy_wait_mac_event
CBLOCKEND 238 3 510

;;	}
CLINEA 0000H 0000H 01FEH 0002H 0002H
_$L127 :

;;	phy_stop();
CLINEA 0000H 0001H 0200H 0002H 000CH
	bl	_phy_stop

;;	if (macl_total_transmission_time(macl.phy->out.len) == STATUS_OK){
CLINEA 0000H 0001H 0205H 0002H 0043H
	l	bp,	NEAR _macl+01eh
	l	r0,	12[bp]
	bl	_macl_total_transmission_time
	mov	er0,	er0
	bne	_$L129
CBLOCK 238 4 517

;;		dis_interrupts(DI_SUBGHZ);
CLINEA 0000H 0001H 0208H 0003H 001CH
	mov	er0,	#8 
	bl	_dis_interrupts

;;		if (macl.txMode == 0) {
CLINEA 0000H 0001H 020DH 0003H 0019H
	l	r0,	NEAR _macl+08h
	bne	_$L131
CBLOCK 238 5 525

;;			phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 020EH 0004H 002BH
	mov	r2,	r0
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart

;;			phy_sint_handler(macl_ccadone_handler);
CLINEA 0000H 0001H 020FH 0004H 002AH
	mov	r0,	#BYTE1 OFFSET _macl_ccadone_handler
	mov	r1,	#BYTE2 OFFSET _macl_ccadone_handler
	bl	_phy_sint_handler

;;			phy_ccaCtrl(CCA_FAST);
CLINEA 0000H 0001H 0210H 0004H 0019H
	mov	er0,	#1 
	bl	_phy_ccaCtrl

;;			macl.condition=SUBGHZ_ST_CCA_FAST;
CLINEA 0000H 0001H 0211H 0004H 0025H
	mov	r0,	#01h
	st	r0,	NEAR _macl

;;		}else
CLINEA 0000H 0000H 0212H 0003H 0007H
	bal	_$L137
_$L131 :

;;			if (macl.txMode == 1) {
CLINEA 0000H 0001H 0213H 0004H 001AH
	cmp	r0,	#01h
	bne	_$L134
CBLOCK 238 6 531

;;				phy_sint_handler(macl_fifodone_handler);
CLINEA 0000H 0001H 0214H 0005H 002CH
	mov	r0,	#BYTE1 OFFSET _macl_fifodone_handler
	mov	r1,	#BYTE2 OFFSET _macl_fifodone_handler
	bl	_phy_sint_handler

;;				phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 0215H 0005H 002CH
	l	r2,	NEAR _macl+08h
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart

;;			}else
CLINEA 0000H 0000H 0216H 0004H 0008H
	bal	_$L137
_$L134 :

;;				if (macl.txMode == 2) {
CLINEA 0000H 0001H 0217H 0005H 001BH
	cmp	r0,	#02h
	bne	_$L137
CBLOCK 238 7 535

;;					phy_sint_handler(macl_txdone_handler);
CLINEA 0000H 0001H 0218H 0006H 002BH
	mov	r0,	#BYTE1 OFFSET _macl_txdone_handler
	mov	r1,	#BYTE2 OFFSET _macl_txdone_handler
	bl	_phy_sint_handler

;;					phy_txStart(&macl.phy->out,macl.txMode);
CLINEA 0000H 0001H 0219H 0006H 002DH
	l	r2,	NEAR _macl+08h
	l	er0,	NEAR _macl+01eh
	add	er0,	#10
	bl	_phy_txStart
CBLOCKEND 238 7 538

;;				}
CLINEA 0000H 0000H 021AH 0005H 0005H
_$L137 :
CBLOCKEND 238 6 555

;;		enb_interrupts(DI_SUBGHZ);
CLINEA 0000H 0001H 021CH 0003H 001CH
	mov	er0,	#8 
	bl	_enb_interrupts
CBLOCKEND 238 5 555

;;		phy_wait_phy_event();
CLINEA 0000H 0001H 0221H 0003H 0017H
	bl	_phy_wait_phy_event

;;		phy_wait_mac_event();
CLINEA 0000H 0001H 0222H 0003H 0017H
	bl	_phy_wait_mac_event
CBLOCKEND 238 4 547

;;	}
CLINEA 0000H 0000H 0223H 0002H 0002H
_$L129 :

;;	return macl.status;
CLINEA 0000H 0001H 022AH 0002H 0014H
	l	er0,	NEAR _macl+010h
CBLOCKEND 238 2 555

;;}
CLINEA 0000H 0000H 022BH 0001H 0001H
	pop	bp
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 238 1 555
CFUNCTIONEND 238


	rseg $$macl_ed$macl
CFUNCTION 239

_macl_ed	:
CBLOCK 239 1 558

;;{
CLINEA 0000H 0001H 022EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	er8,	er0
CBLOCK 239 2 558
CRET 0002H
CARGUMENT 46H 0002H 0028H "level" 04H 03H 00H 00H 00H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	phy_ed(level, macl.rxOnEnable | macl.promiscuousMode);
CLINEA 0000H 0001H 0230H 0002H 0037H
	l	r2,	NEAR _macl+0bh
	l	r0,	NEAR _macl+0ch
	or	r2,	r0
	mov	er0,	er8
	bl	_phy_ed

;;	return status;
CLINEA 0000H 0001H 0231H 0002H 000FH
CBLOCKEND 239 2 562

;;}
CLINEA 0000H 0000H 0232H 0001H 0001H
	mov	er0,	#0 
	pop	er8
	pop	pc
CBLOCKEND 239 1 562
CFUNCTIONEND 239


	rseg $$macl_set_channel$macl
CFUNCTION 240

_macl_set_channel	:
CBLOCK 240 1 564

;;{
CLINEA 0000H 0001H 0234H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_mbm$4	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	mov	er8,	er0
	mov	r10,	r2
CBLOCK 240 2 564
CRET 0006H
CARGUMENT 46H 0001H 001CH "page" 02H 00H 00H
CARGUMENT 46H 0001H 001DH "ch" 02H 00H 00H
CARGUMENT 46H 0001H 001EH "antsw" 02H 00H 00H
CARGUMENT 42H 0004H 0004H "mbm" 02H 00H 02H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.pages = page;
CLINEA 0000H 0001H 0239H 0002H 0013H
	st	r0,	NEAR _macl+01h

;;	macl.ch = ch;
CLINEA 0000H 0001H 023AH 0002H 000EH
	st	r1,	NEAR _macl+02h

;;	if (mbm == 100){ 
CLINEA 0000H 0001H 023CH 0002H 0012H
	l	er0,	_mbm$4[fp]
	l	er2,	_mbm$4+02h[fp]
	cmp	r0,	#064h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bne	_$L141
CBLOCK 240 3 572

;;		macl.txPower = 1;
CLINEA 0000H 0001H 023DH 0003H 0013H
	mov	r0,	#01h
CBLOCKEND 240 3 574

;;	}else {
CLINEA 0000H 0000H 023EH 0002H 0008H
	bal	_$L143
_$L141 :
CBLOCK 240 4 574

;;		macl.txPower = 20;
CLINEA 0000H 0001H 023FH 0003H 0014H
	mov	r0,	#014h
CBLOCKEND 240 4 576

;;	}
CLINEA 0000H 0000H 0240H 0002H 0002H
_$L143 :
	st	r0,	NEAR _macl+06h

;;	phy_setup(page,ch,macl.txPower,antsw);
CLINEA 0000H 0001H 0242H 0002H 0027H
	mov	r3,	r10
	mov	r2,	r0
	mov	r1,	r9
	mov	r0,	r8
	bl	_phy_setup

;;	return status;
CLINEA 0000H 0001H 0243H 0002H 000FH
CBLOCKEND 240 2 580

;;}
CLINEA 0000H 0000H 0244H 0001H 0001H
	mov	er0,	#0 
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 240 1 580
CFUNCTIONEND 240


	rseg $$macl_set_hw_addr_filt$macl
CFUNCTION 241

_macl_set_hw_addr_filt	:
CBLOCK 241 1 582

;;{
CLINEA 0000H 0001H 0246H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	er8,	er0
CBLOCK 241 2 582
CRET 0002H
CARGUMENT 47H 0002H 0028H "filt" 06H 03H 00H 00H 05H 0CH 00H
CARGUMENT 42H 0004H 0002H "changed" 02H 00H 02H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	phy_addrFilt(filt->pan_id, filt->ieee_addr, filt->short_addr,0xffff);
CLINEA 0000H 0001H 025BH 0002H 0046H
	mov	er0,	#-1
	push	er0
	l	er0,	02h[er8]
	push	er0
	mov	er2,	er8
	add	er2,	#4 
	l	er0,	[er8]
	bl	_phy_addrFilt
	add	sp,	#4 

;;	return status;
CLINEA 0000H 0001H 025CH 0002H 000FH
CBLOCKEND 241 2 605

;;}
CLINEA 0000H 0000H 025DH 0001H 0001H
	mov	er0,	#0 
	pop	er8
	pop	pc
CBLOCKEND 241 1 605
CFUNCTIONEND 241


	rseg $$macl_set_csma_params$macl
CFUNCTION 243

_macl_set_csma_params	:
CBLOCK 243 1 608

;;{
CLINEA 0000H 0001H 0260H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 243 2 608
CARGUMENT 46H 0001H 0000H "min_be" 02H 00H 00H
CARGUMENT 46H 0001H 0015H "max_be" 02H 00H 00H
CARGUMENT 46H 0001H 0016H "retries" 02H 00H 00H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.ccaRetry = retries;
CLINEA 0000H 0001H 0262H 0002H 0019H
	st	r2,	NEAR _macl+03h

;;	macl.ccaBe = max_be;
CLINEA 0000H 0001H 0263H 0002H 0015H
	st	r1,	NEAR _macl+04h

;;	return status;
CLINEA 0000H 0001H 0267H 0002H 000FH
CBLOCKEND 243 2 616

;;}
CLINEA 0000H 0000H 0268H 0001H 0001H
	mov	er0,	#0 
	rt
CBLOCKEND 243 1 616
CFUNCTIONEND 243


	rseg $$macl_set_frame_retries$macl
CFUNCTION 244

_macl_set_frame_retries	:
CBLOCK 244 1 618

;;{
CLINEA 0000H 0001H 026AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 244 2 618
CARGUMENT 46H 0001H 0014H "retries" 02H 00H 00H
CARGUMENT 46H 0002H 0025H "timeout" 02H 00H 01H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.txRetry = retries;
CLINEA 0000H 0001H 026CH 0002H 0018H
	st	r0,	NEAR _macl+07h

;;	macl.ack_timeout = timeout;
CLINEA 0000H 0001H 026DH 0002H 001CH
	st	er2,	NEAR _macl+0eh

;;	return status;
CLINEA 0000H 0001H 0271H 0002H 000FH
CBLOCKEND 244 2 626

;;}
CLINEA 0000H 0000H 0272H 0001H 0001H
	mov	er0,	#0 
	rt
CBLOCKEND 244 1 626
CFUNCTIONEND 244


	rseg $$macl_set_promiscuous_mode$macl
CFUNCTION 245

_macl_set_promiscuous_mode	:
CBLOCK 245 1 628

;;{
CLINEA 0000H 0001H 0274H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 245 2 628
CRET 0000H
CARGUMENT 46H 0001H 0014H "on" 02H 00H 00H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	macl.promiscuousMode = on;
CLINEA 0000H 0001H 0277H 0002H 001BH
	st	r0,	NEAR _macl+0ch

;;	if (macl.promiscuousMode){
CLINEA 0000H 0001H 0279H 0002H 001BH
	cmp	r0,	#00h
	beq	_$L148
CBLOCK 245 3 633

;;		phy_clrAddrFilt();
CLINEA 0000H 0001H 027AH 0003H 0014H
	bl	_phy_clrAddrFilt
CBLOCKEND 245 3 635

;;	}else{
CLINEA 0000H 0000H 027BH 0002H 0007H
	bal	_$L150
_$L148 :
CBLOCK 245 4 635

;;		phy_stop();
CLINEA 0000H 0001H 027CH 0003H 000DH
	bl	_phy_stop
CBLOCKEND 245 4 637

;;	}
CLINEA 0000H 0000H 027DH 0002H 0002H
_$L150 :

;;	return status;
CLINEA 0000H 0001H 027FH 0002H 000FH
CBLOCKEND 245 2 640

;;}
CLINEA 0000H 0000H 0280H 0001H 0001H
	mov	er0,	#0 
	pop	pc
CBLOCKEND 245 1 640
CFUNCTIONEND 245


	rseg $$macl_sleep$macl
CFUNCTION 248

_macl_sleep	:
CBLOCK 248 1 643

;;{
CLINEA 0000H 0001H 0283H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 248 2 643
CRET 0000H
CARGUMENT 46H 0001H 0000H "on" 02H 00H 00H
CLOCAL 4BH 0002H 0000H 0002H "status" 02H 00H 01H

;;	phy_sleep();
CLINEA 0000H 0001H 0288H 0002H 000DH
	bl	_phy_sleep

;;	return status;
CLINEA 0000H 0001H 0289H 0002H 000FH
CBLOCKEND 248 2 650

;;}
CLINEA 0000H 0000H 028AH 0001H 0001H
	mov	er0,	#0 
	pop	pc
CBLOCKEND 248 1 650
CFUNCTIONEND 248


	rseg $$macl_getCondition$macl
CFUNCTION 249

_macl_getCondition	:
CBLOCK 249 1 654

;;{
CLINEA 0000H 0001H 028EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 249 2 654

;;	return macl.condition;
CLINEA 0000H 0001H 028FH 0002H 0017H
	l	r0,	NEAR _macl
CBLOCKEND 249 2 656

;;}
CLINEA 0000H 0000H 0290H 0001H 0001H
	rt
CBLOCKEND 249 1 656
CFUNCTIONEND 249


	rseg $$macl_set_ack_tx_interval$macl
CFUNCTION 250

_macl_set_ack_tx_interval	:
CBLOCK 250 1 658

;;void macl_set_ack_tx_interval(uint16_t interval) {
CLINEA 0000H 0001H 0292H 0001H 0032H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 250 2 658
CARGUMENT 46H 0002H 0024H "interval" 02H 00H 01H

;;	macl.tx_ack_interval = interval;
CLINEA 0000H 0001H 0293H 0002H 0021H
	st	er0,	NEAR _macl+026h
CBLOCKEND 250 2 660

;;}
CLINEA 0000H 0001H 0294H 0001H 0001H
	rt
CBLOCKEND 250 1 660
CFUNCTIONEND 250

	public _macl_set_ack_tx_interval
	public _macl_set_csma_params
	public _macl_sleep
	public _macl_ed
	public _macl_set_channel
	public _macl_init
	public _macl_set_promiscuous_mode
	public _macl_getCondition
	public _macl_set_frame_retries
	public _macl_set_hw_addr_filt
	public _macl_stop
	public _macl_xmit_sync
	public _macl_start
	_macl comm data 028h #00h
	extrn code near : _dis_interrupts
	extrn code near : _phy_timer_start
	extrn code near : _phy_init
	extrn code near : _HAL_delayMicroseconds
	extrn code near : _phy_ccaCtrl
	extrn code near : _millis
	extrn code near : _phy_timer_handler
	extrn code near : _phy_clrAddrFilt
	extrn code near : _phy_timer_stop
	extrn code near : _phy_setup
	extrn code near : _memset_n
	extrn code near : _phy_sleep
	extrn code near : _phy_sint_di
	extrn code near : _phy_sint_ei
	extrn code near : _phy_rxStart
	extrn code near : _phy_txStart
	extrn code near : _macl_rx_irq
	extrn code near : _phy_timer_di
	extrn code near : _phy_timer_ei
	extrn code near : _enb_interrupts
	extrn code near : _rand
	extrn code near : _phy_wakeup_mac_event
	extrn code near : _phy_wait_phy_event
	extrn code near : _phy_wait_mac_event
	extrn code near : _phy_txdone
	extrn code near : _phy_rxdone
	extrn code near : _phy_ccadone
	extrn code near : _phy_addrFilt
	extrn code near : _phy_ed
	extrn code near : _phy_sint_handler
	extrn code near : _phy_stop
	extrn code near : _sleep_long
	extrn code near : _main
	extrn code : __imodu8sw

	end
