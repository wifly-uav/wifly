;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : BM1383.c

	type (ML620504F) 
	model small, near
	$$NVARBM1383 segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$TABbm1383$BM1383 segment table 2h #0h
	$$bm1383_get_rawtemppressval$BM1383 segment code 2h #0h
	$$bm1383_get_temppressval$BM1383 segment code 2h #0h
	$$bm1383_get_val$BM1383 segment code 2h #0h
	$$bm1383_init$BM1383 segment code 2h #0h
	$$bm1383_power_down$BM1383 segment code 2h #0h
	$$bm1383_read$BM1383 segment code 2h #0h
	$$bm1383_write$BM1383 segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 02H 0000H "bm1383_get_rawtemppressval" 08H 02H 3CH 01H 81H 06H 00H 00H 00H
CSGLOBAL 02H 0000H "bm1383_write" 08H 02H 39H 01H 83H 0aH 00H 00H 00H
CSGLOBAL 02H 0000H "bm1383_get_temppressval" 08H 02H 3DH 01H 83H 2aH 00H 00H 00H
CSGLOBAL 03H 0000H "bm1383_get_val" 08H 02H 3EH 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "bm1383_init" 08H 02H 3BH 01H 83H 0aH 00H 00H 00H
CSGLOBAL 02H 0000H "bm1383_read" 08H 02H 3AH 01H 83H 0cH 00H 00H 00H
CSGLOBAL 02H 0000H "bm1383_power_down" 08H 02H 3FH 01H 83H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001FH 0004H 00000008H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "get_val" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "get_rawtemppressval" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "power_down" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001EH 000AH 00000014H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "requestFrom" 0AH 03H 00H 02H 2CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "beginTransmission" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000AH "write_byte" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000CH "write" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "endTransmission" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000010H "setTimeout" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000012H "end" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001DH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 61H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 62H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 63H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 64H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 65H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 66H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 67H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "TwoWire" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "t_BM1383" 04H 00H 05H 1FH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CSGLOBAL 42H 0001H "device" 02H 00H 00H
CSGLOBAL 42H 0001H "device_address" 02H 00H 00H
CGLOBAL 01H 01H 0008H "bm1383" 04H 00H 05H 1FH 00H
CGLOBAL 02H 01H 0014H "Wire" 04H 00H 05H 1EH 00H
CFILE 0001H 00000003H "C:\\LAZURI~1\\LIBRAR~1\\BM1383\\BM1383_ide.h"
CFILE 0002H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 0003H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0004H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0005H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0006H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0007H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 0008H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0009H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000AH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000BH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000CH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 000EH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 000FH 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0011H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0012H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0014H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0015H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0016H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0017H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0018H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0019H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001AH 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001BH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001CH 00000039H "C:\\LAZURI~1\\LIBRAR~1\\Wire\\Wire.h"
CFILE 001DH 0000002FH "C:\\LAZURI~1\\LIBRAR~1\\BM1383\\BM1383.h"
CFILE 0000H 000000D4H "C:\\LAZURI~1\\LIBRAR~1\\BM1383\\BM1383.c"

	rseg $$bm1383_write$BM1383
CFUNCTION 313

_bm1383_write	:
CBLOCK 313 1 31

;;{
CLINEA 0000H 0001H 001FH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_size$4	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	push	er4
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 313 2 31
CRET 0008H
CARGUMENT 46H 0001H 001CH "memory_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "data" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "size" 02H 00H 00H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H

;;  Wire.beginTransmission(device_address);
CLINEA 0000H 0001H 0022H 0003H 0029H
	l	r0,	NEAR _device_address
	l	er2,	NEAR _Wire+08h
	bl	er2

;;  Wire.write_byte(memory_address);
CLINEA 0000H 0001H 0023H 0003H 0022H
	mov	r0,	r8
	l	er2,	NEAR _Wire+0ah
	bl	er2

;;  Wire.write(data, size);
CLINEA 0000H 0001H 0024H 0003H 0019H
	l	r2,	_size$4[fp]
	mov	r3,	#00h
	mov	er0,	er10
	l	er4,	NEAR _Wire+0ch
	bl	er4

;;  rc = Wire.endTransmission(true);
CLINEA 0000H 0000H 0025H 0003H 0022H
	mov	r0,	#01h
	l	er2,	NEAR _Wire+0eh
	bl	er2

;;  return (rc);
CLINEA 0000H 0001H 0026H 0003H 000EH
CBLOCKEND 313 2 39

;;}
CLINEA 0000H 0000H 0027H 0001H 0001H
	pop	er4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 313 1 39
CFUNCTIONEND 313


	rseg $$bm1383_read$BM1383
CFUNCTION 314

_bm1383_read	:
CBLOCK 314 1 42

;;{
CLINEA 0000H 0001H 002AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_size$4	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	push	xr4
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 314 2 42
CRET 000AH
CARGUMENT 46H 0001H 001CH "memory_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "data" 04H 03H 00H 00H 00H
CARGUMENT 43H 0002H 0004H "size" 02H 00H 01H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H
CLOCAL 46H 0001H 0018H 0002H "cnt" 02H 00H 00H

;;  Wire.beginTransmission(device_address);
CLINEA 0000H 0001H 002EH 0003H 0029H
	l	r0,	NEAR _device_address
	l	er2,	NEAR _Wire+08h
	bl	er2

;;  Wire.write_byte(memory_address);
CLINEA 0000H 0001H 002FH 0003H 0022H
	mov	r0,	r8
	l	er2,	NEAR _Wire+0ah
	bl	er2

;;  rc = Wire.endTransmission(false);
CLINEA 0000H 0000H 0030H 0003H 0023H
	mov	r0,	#00h
	l	er2,	NEAR _Wire+0eh
	bl	er2

;;  if (rc != 0) {
CLINEA 0000H 0001H 0031H 0003H 0010H
	cmp	r0,	#00h
	beq	_$L2
CBLOCK 314 3 49
CBLOCKEND 314 3 51

;;}
CLINEA 0000H 0001H 003DH 0001H 0001H
_$L1 :
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;  }
CLINEA 0000H 0000H 0033H 0003H 0003H
_$L2 :

;;  Wire.requestFrom(device_address, size, false);
CLINEA 0000H 0001H 0035H 0003H 0030H
	mov	r2,	#00h
	l	r1,	_size$4[fp]
	l	r0,	NEAR _device_address
	l	er4,	NEAR _Wire+02h
	bl	er4

;;  cnt = 0;
CLINEA 0000H 0001H 0036H 0003H 000AH
	mov	r4,	#00h	;; _lcnt$2

;;  }
CLINEA 0000H 0000H 003AH 0003H 0003H
_$L8 :

;;  while(Wire.available()) {
CLINEA 0000H 0001H 0037H 0003H 001BH
	l	er0,	NEAR _Wire+04h
	bl	er0
	mov	er0,	er0
	beq	_$L5
CBLOCK 314 4 55

;;    data[cnt] = Wire.read();
CLINEA 0000H 0000H 0038H 0005H 001CH
	l	er0,	NEAR _Wire+06h
	bl	er0
	mov	er6,	er0
	mov	r0,	r4
	mov	r1,	#00h
	add	er0,	er10
	st	r6,	[er0]

;;    cnt++;
CLINEA 0000H 0000H 0039H 0005H 000AH
	add	r4,	#01h
CBLOCKEND 314 4 58

;;  }
CLINEA 0000H 0000H 003AH 0003H 0003H
	bal	_$L8
_$L5 :

;;  rc = Wire.endTransmission(true);
CLINEA 0000H 0000H 003BH 0003H 0022H
	mov	r0,	#01h
	l	er2,	NEAR _Wire+0eh
	bl	er2

;;  return (rc);
CLINEA 0000H 0000H 003CH 0003H 000EH
	bal	_$L1
CBLOCKEND 314 1 61
CFUNCTIONEND 314


	rseg $$bm1383_init$BM1383
CFUNCTION 315

_bm1383_init	:
CBLOCK 315 1 64

;;{
CLINEA 0000H 0001H 0040H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_reg$2	set	-1
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
	push	er8
	mov	er8,	er0
CBLOCK 315 2 64
CRET 0006H
CARGUMENT 47H 0002H 0028H "slave_address" 02H 00H 01H
CLOCAL 46H 0001H 0015H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0001H 0001H 0002H "reg" 02H 00H 00H

;;	device_address = (uint8_t)(slave_address==0)?BM1383GLV_DEVICE_ADDRESS:slave_address;
CLINEA 0000H 0000H 0044H 0002H 0055H
	mov	r0,	#00h
	mov	er2,	er8
	or	r2,	r9
	bne	_$M3
	mov	r0,	#01h
_$M3 :
	cmp	r0,	#00h
	beq	_$L10
	mov	r0,	#05dh
	bal	_$L12
_$L10 :
	mov	er0,	er8
_$L12 :
	st	r0,	NEAR _device_address

;;  rc = bm1383_read(BM1383GLV_ID, &reg, sizeof(reg));
CLINEA 0000H 0000H 0045H 0003H 0034H
	mov	er0,	#1 
	push	er0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#010h
	bl	_bm1383_read
	add	sp,	#2 
	mov	r1,	r0	;; _lrc$0

;;  if (rc != 0) {
CLINEA 0000H 0001H 0046H 0003H 0010H
	cmp	r0,	#00h
	beq	_$L13
CBLOCK 315 3 70

;;    return (rc);
CLINEA 0000H 0001H 0048H 0005H 0010H
	mov	r2,	r0
CBLOCKEND 315 3 73
CBLOCKEND 315 2 119

;;}
CLINEA 0000H 0001H 0077H 0001H 0001H
_$L9 :
	mov	r0,	r2
	pop	er8
	mov	sp,	fp
	pop	fp
	pop	pc

;;  } 
CLINEA 0000H 0000H 0049H 0003H 0004H
_$L13 :

;;	if (reg == BM1383GLV_ID_VAL) {
CLINEA 0000H 0001H 004DH 0002H 001FH
	l	r0,	_reg$2[fp]
	cmp	r0,	#031h
	bne	_$L15
CBLOCK 315 4 77

;;		device = 0;
CLINEA 0000H 0001H 004EH 0003H 000DH
	mov	r0,	#00h
CBLOCKEND 315 4 79

;;	} else if(reg == BM1383AGLV_ID_VAL){
CLINEA 0000H 0000H 004FH 0002H 0025H
	bal	_$L17
_$L15 :
	cmp	r0,	#032h
	bne	_$L18
CBLOCK 315 5 79

;;		device = 1;
CLINEA 0000H 0001H 0050H 0003H 000DH
	mov	r0,	#01h
CBLOCKEND 315 5 81

;;	}
CLINEA 0000H 0000H 0054H 0002H 0002H
_$L17 :
	st	r0,	NEAR _device

;;  reg = 0x01;
CLINEA 0000H 0001H 0056H 0003H 000DH
	mov	r0,	#01h
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_POWER_DOWN, &reg, sizeof(reg));
CLINEA 0000H 0000H 0057H 0003H 003DH
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#012h
	bl	_bm1383_write
	add	sp,	#2 

;;  if (rc != 0) {
CLINEA 0000H 0001H 0058H 0003H 0010H
	cmp	r0,	#00h
	beq	_$L21
CBLOCK 315 7 88

;;    return (rc);
CLINEA 0000H 0001H 005AH 0005H 0010H
	mov	r2,	r0
	bal	_$L9
CBLOCKEND 315 7 91

;;  }
CLINEA 0000H 0000H 005BH 0003H 0003H
_$L21 :

;;  delay(1);
CLINEA 0000H 0001H 005DH 0003H 000BH
	mov	er0,	#1 
	mov	er2,	#0 
	bl	_delay_long

;;  reg = 0x01;
CLINEA 0000H 0001H 005FH 0003H 000DH
	mov	r0,	#01h
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_SLEEP, &reg, sizeof(reg));
CLINEA 0000H 0000H 0060H 0003H 0038H
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#013h
	bl	_bm1383_write
	add	sp,	#2 

;;  if (rc != 0) {
CLINEA 0000H 0001H 0061H 0003H 0010H
	cmp	r0,	#00h
	beq	_$L23
CBLOCK 315 8 97

;;    return (rc);
CLINEA 0000H 0001H 0063H 0005H 0010H
	mov	r2,	r0
	bal	_$L9
CBLOCKEND 315 8 100

;;  }
CLINEA 0000H 0000H 0064H 0003H 0003H
_$L23 :

;;	switch(device)
CLINEA 0000H 0001H 0065H 0002H 000FH
	l	r0,	NEAR _device
CBLOCK 315 9 102
	beq	_$L30

;;	switch(device)
CLINEA 0000H 0000H 0065H 0002H 000FH
	cmp	r0,	#01h
	beq	_$L31

;;		return(-1);
CLINEA 0000H 0001H 006EH 0003H 000DH
	mov	r2,	#0ffh
	bal	_$L9

;;	}
CLINEA 0000H 0000H 0070H 0002H 0002H
_$L28 :
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_MODE_CONTROL, &reg, sizeof(reg));
CLINEA 0000H 0000H 0071H 0003H 003FH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#014h
	bl	_bm1383_write
	add	sp,	#2 
CBLOCKEND 315 9 119
	mov	r2,	r0

;;  if (rc != 0) {
CLINEA 0000H 0001H 0072H 0003H 0010H
	cmp	r0,	#00h
	bne	_$L9
CBLOCK 315 10 114

;;    return (rc);
CLINEA 0000H 0000H 0074H 0005H 0010H
CBLOCKEND 315 10 117

;;	return (rc);
CLINEA 0000H 0000H 0076H 0002H 000DH
	bal	_$L9

;;	} else {
CLINEA 0000H 0000H 0051H 0002H 0009H
_$L18 :
CBLOCK 315 6 81

;;	    return (rc);
CLINEA 0000H 0001H 0053H 0006H 0011H
	mov	r2,	r1
	bal	_$L9
CBLOCKEND 315 6 84

;;	case 0:
CLINEA 0000H 0001H 0067H 0002H 0008H
_$L30 :

;;		reg = 0xC4;
CLINEA 0000H 0001H 0068H 0003H 000DH
	mov	r0,	#0c4h

;;		break;
CLINEA 0000H 0001H 0069H 0003H 0008H
	bal	_$L28

;;	case 1:
CLINEA 0000H 0001H 006AH 0002H 0008H
_$L31 :

;;		reg = 0xC2;
CLINEA 0000H 0001H 006BH 0003H 000DH
	mov	r0,	#0c2h

;;		break;
CLINEA 0000H 0001H 006CH 0003H 0008H
	bal	_$L28
CBLOCKEND 315 1 119
CFUNCTIONEND 315


	rseg $$bm1383_get_rawtemppressval$BM1383
CFUNCTION 316

_bm1383_get_rawtemppressval	:
CBLOCK 316 1 122

;;{
CLINEA 0000H 0001H 007AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	er8,	er0
CBLOCK 316 2 122
CRET 0002H
CARGUMENT 46H 0002H 0028H "data" 04H 03H 00H 00H 00H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H

;;  rc = bm1383_read(BM1383GLV_TEMPERATURE_MSB, data, 5);
CLINEA 0000H 0000H 007DH 0003H 0037H
	mov	er0,	#5 
	push	er0
	mov	er2,	er8
	mov	r0,	#01ah
	bl	_bm1383_read
	add	sp,	#2 
CBLOCK 316 3 126
CBLOCKEND 316 3 128

;;  return (rc);  
CLINEA 0000H 0001H 0082H 0003H 0010H
CBLOCKEND 316 2 131

;;}
CLINEA 0000H 0000H 0083H 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 316 1 131
CFUNCTIONEND 316


	rseg $$bm1383_get_temppressval$BM1383
CFUNCTION 317

_bm1383_get_temppressval	:
CBLOCK 317 1 134

;;{
CLINEA 0000H 0001H 0086H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_val$2	set	-6
	_rc$0	set	-19
	_rawpress$10	set	-18
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-020
	push	xr8
	push	xr4
	push	bp
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 317 2 134
CRET 0020H
CARGUMENT 47H 0002H 0028H "temp" 04H 03H 00H 00H 03H
CARGUMENT 47H 0002H 0029H "press" 04H 03H 00H 00H 03H
CLOCAL 42H 0001H 0013H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0005H 0006H 0002H "val" 05H 01H 05H 00H 00H 00H
CLOCAL 47H 0002H 002AH 0002H "rawtemp" 02H 00H 08H
CLOCAL 42H 0004H 0012H 0002H "rawpress" 02H 00H 02H

;;  rc = bm1383_get_rawtemppressval(val);
CLINEA 0000H 0000H 008CH 0003H 0027H
	mov	er0,	fp
	add	er0,	#-6
	bl	_bm1383_get_rawtemppressval
	st	r0,	_rc$0[fp]

;;  if (rc != 0) {
CLINEA 0000H 0001H 008DH 0003H 0010H
	cmp	r0,	#00h
	beq	_$L38
CBLOCK 317 3 141

;;    return (rc);
CLINEA 0000H 0001H 008EH 0005H 0010H
CBLOCKEND 317 3 143
CBLOCKEND 317 2 166

;;}
CLINEA 0000H 0001H 00A6H 0001H 0001H
_$L37 :
	pop	bp
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;  } 
CLINEA 0000H 0000H 008FH 0003H 0004H
_$L38 :

;;	switch(device) {
CLINEA 0000H 0001H 0091H 0002H 0011H
	l	r0,	NEAR _device
CBLOCK 317 4 145
	beq	_$L45

;;	switch(device) {
CLINEA 0000H 0000H 0091H 0002H 0011H
	cmp	r0,	#01h
	bne	_$M6
	b	_$L46
_$M6 :

;;		return (-1);
CLINEA 0000H 0001H 009BH 0003H 000EH
	mov	r0,	#0ffh
	bal	_$L37
CBLOCKEND 317 4 156

;;	}
CLINEA 0000H 0000H 009CH 0002H 0002H
_$L43 :

;;  if (rawpress == 0) {
CLINEA 0000H 0001H 009EH 0003H 0016H
	l	er0,	_rawpress$10[fp]
	l	er2,	_rawpress$10+02h[fp]
	cmp	r0,	#00h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bne	_$L47
CBLOCK 317 5 158

;;    return (-1);    
CLINEA 0000H 0001H 009FH 0005H 0014H
	mov	r0,	#0ffh
	bal	_$L37
CBLOCKEND 317 5 160

;;  }
CLINEA 0000H 0000H 00A0H 0003H 0003H
_$L47 :

;;  *temp = (float)rawtemp / 32;
CLINEA 0000H 0001H 00A2H 0003H 001EH
	mov	er0,	bp
	mov	r2,	r13
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#042h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;  *press = (float)rawpress / 2048;
CLINEA 0000H 0001H 00A3H 0003H 0022H
	l	er0,	_rawpress$10[fp]
	l	er2,	_rawpress$10+02h[fp]
	push	xr0
	bl	__fuldu8sw
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#045h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er10]
	st	er2,	02h[er10]

;;  return (rc);  
CLINEA 0000H 0001H 00A5H 0003H 0010H
	l	r0,	_rc$0[fp]
	bal	_$L37

;;	case 0:
CLINEA 0000H 0001H 0092H 0002H 0008H
_$L45 :

;;		rawtemp = ((signed short)val[0] << 8) | (val[1]);
CLINEA 0000H 0001H 0093H 0003H 0033H
	l	r0,	_val$2+01h[fp]
	mov	r1,	#00h
	l	r2,	_val$2[fp]
	or	r1,	r2
	mov	bp,	er0	;; _lrawtemp$8

;;		rawpress = (((unsigned long)val[2] << 16) | ((unsigned long)val[3] << 8) | val[4]&0xFC) >> 2;
CLINEA 0000H 0001H 0094H 0003H 005FH
	l	r0,	_val$2+02h[fp]
	mov	r1,	#00h
	mov	er2,	#0 
	mov	er4,	#0 
	st	er4,	-14[fp]
	st	er0,	-12[fp]
	l	r0,	_val$2+03h[fp]
	mov	r3,	r2
	mov	r1,	r0
	mov	r0,	#00h
	mov	er4,	er0
	mov	er6,	er2
	push	xr4
	l	er4,	-14[fp]
	l	er6,	-12[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	or	r4,	r0
	or	r5,	r1
	or	r6,	r2
	or	r7,	r3
	l	r0,	_val$2+04h[fp]
	mov	r1,	#00h
	and	r0,	#0fch
	and	r1,	#00h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	or	r0,	r4
	or	r1,	r5
	or	r2,	r6
	or	r3,	r7
	srlc	r0,	#02h
	srlc	r1,	#02h
	srlc	r2,	#02h
	srl	r3,	#02h
	st	er0,	_rawpress$10[fp]
	st	er2,	_rawpress$10+02h[fp]

;;		break;
CLINEA 0000H 0001H 0095H 0003H 0008H
	b	_$L43

;;	case 1:
CLINEA 0000H 0001H 0096H 0002H 0008H
_$L46 :

;;		rawpress = (((unsigned long)val[0] << 16) | ((unsigned long)val[1] << 8) | val[2]&0xFC) >> 2;
CLINEA 0000H 0001H 0097H 0003H 005FH
	l	r0,	_val$2[fp]
	mov	r1,	#00h
	mov	er2,	#0 
	mov	er4,	#0 
	st	er4,	-14[fp]
	st	er0,	-12[fp]
	l	r0,	_val$2+01h[fp]
	mov	r3,	r2
	mov	r1,	r0
	mov	r0,	#00h
	mov	er4,	er0
	mov	er6,	er2
	push	xr4
	l	er4,	-14[fp]
	l	er6,	-12[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	or	r4,	r0
	or	r5,	r1
	or	r6,	r2
	or	r7,	r3
	l	r0,	_val$2+02h[fp]
	mov	r1,	#00h
	and	r0,	#0fch
	and	r1,	#00h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	or	r0,	r4
	or	r1,	r5
	or	r2,	r6
	or	r3,	r7
	srlc	r0,	#02h
	srlc	r1,	#02h
	srlc	r2,	#02h
	srl	r3,	#02h
	st	er0,	_rawpress$10[fp]
	st	er2,	_rawpress$10+02h[fp]

;;		rawtemp = ((signed short)val[3] << 8) | (val[4]);
CLINEA 0000H 0001H 0098H 0003H 0033H
	l	r0,	_val$2+03h[fp]
	mov	r1,	#00h
	mov	r3,	r0
	l	r0,	_val$2+04h[fp]
	or	r1,	r3
	mov	bp,	er0	;; _lrawtemp$8

;;		break;
CLINEA 0000H 0001H 0099H 0003H 0008H
	b	_$L43
CBLOCKEND 317 1 166
CFUNCTIONEND 317


	rseg $$bm1383_get_val$BM1383
CFUNCTION 318

_bm1383_get_val	:
CBLOCK 318 1 168

;;static void bm1383_get_val(float *data) {
CLINEA 0000H 0001H 00A8H 0001H 0029H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 318 2 168
CARGUMENT 47H 0002H 0024H "data" 04H 03H 00H 00H 03H
CLOCAL 4BH 0002H 0000H 0002H "result" 04H 03H 00H 00H 03H

;;	bm1383_get_temppressval(&result[0],&result[1]);
CLINEA 0000H 0001H 00AAH 0002H 0030H
	mov	er2,	er0
	add	er2,	#4 
	b	_bm1383_get_temppressval
CBLOCKEND 318 2 172
CLINEA 0000H 0000H 00ACH 0001H 0001H
CBLOCKEND 318 1 172
CFUNCTIONEND 318


	rseg $$bm1383_power_down$BM1383
CFUNCTION 319

_bm1383_power_down	:
CBLOCK 319 1 175

;;{
CLINEA 0000H 0001H 00AFH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_reg$2	set	-1
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
CBLOCK 319 2 175
CRET 0004H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0001H 0001H 0002H "reg" 02H 00H 00H

;;  reg = 0x00;
CLINEA 0000H 0001H 00B4H 0003H 000DH
	mov	r0,	#00h
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_MODE_CONTROL, &reg, sizeof(reg));
CLINEA 0000H 0000H 00B5H 0003H 003FH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#014h
	bl	_bm1383_write
	add	sp,	#2 

;;  if (rc != 0) {
CLINEA 0000H 0001H 00B6H 0003H 0010H
	cmp	r0,	#00h
	beq	_$L51
CBLOCK 319 3 182
CBLOCKEND 319 3 185

;;}
CLINEA 0000H 0001H 00CAH 0001H 0001H
_$L50 :
	mov	sp,	fp
	pop	fp
	pop	pc

;;  }
CLINEA 0000H 0000H 00B9H 0003H 0003H
_$L51 :

;;  reg = 0x00;
CLINEA 0000H 0001H 00BCH 0003H 000DH
	mov	r0,	#00h
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_SLEEP, &reg, sizeof(reg));
CLINEA 0000H 0000H 00BDH 0003H 0038H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#013h
	bl	_bm1383_write
	add	sp,	#2 

;;  if (rc != 0) {
CLINEA 0000H 0001H 00BEH 0003H 0010H
	cmp	r0,	#00h
	bne	_$L50
CBLOCK 319 4 190

;;    return (rc);
CLINEA 0000H 0000H 00C0H 0005H 0010H
CBLOCKEND 319 4 193

;;  reg = 0x00;
CLINEA 0000H 0001H 00C4H 0003H 000DH
	mov	r0,	#00h
	st	r0,	_reg$2[fp]

;;  rc = bm1383_write(BM1383GLV_POWER_DOWN, &reg, sizeof(reg));
CLINEA 0000H 0000H 00C5H 0003H 003DH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#012h
	bl	_bm1383_write
	add	sp,	#2 
CBLOCK 319 5 198
CBLOCKEND 319 5 200

;;  return (rc);
CLINEA 0000H 0000H 00C9H 0003H 000EH
	bal	_$L50
CBLOCKEND 319 1 202
CFUNCTIONEND 319

	public _bm1383
	extrn table near : _Wire
	extrn code near : _delay_long
	extrn code near : _main

	rseg $$NINITTAB
	db	05dh

	rseg $$TABbm1383$BM1383
_bm1383 :
	dw	_bm1383_init
	dw	_bm1383_get_val
	dw	_bm1383_get_rawtemppressval
	dw	_bm1383_power_down

	rseg $$NINITVAR
_device_address :
	ds	01h

	rseg $$NVARBM1383
_device :
	ds	01h

	rseg $$NINITTAB
	align

	rseg $$NINITVAR
	align
	extrn code : __fdivu8sw
	extrn code : __fildu8sw
	extrn code : __fuldu8sw

	end
