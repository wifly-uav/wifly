;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : WiFly_v3.c

	type (ML620504F) 
	model small, near
	$$NVARWiFly_v3 segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$Emargency_Stop$WiFly_v3 segment code 2h #0h
	$$Flight_Mode$WiFly_v3 segment code 2h #0h
	$$Flight_Preparation_Mode$WiFly_v3 segment code 2h #0h
	$$Motor_Sets$WiFly_v3 segment code 2h #0h
	$$Signal_Check$WiFly_v3 segment code 2h #0h
	$$TAB$$S12$WiFly_v3 segment table 2h #0h
	$$TAB$$S13$WiFly_v3 segment table 2h #0h
	$$TAB$$S14$WiFly_v3 segment table 2h #0h
	$$TAB$$S2$WiFly_v3 segment table 2h #0h
	$$TAB$$S25$WiFly_v3 segment table 2h #0h
	$$TAB$$S27$WiFly_v3 segment table 2h #0h
	$$TAB$$S29$WiFly_v3 segment table 2h #0h
	$$Time_Update$WiFly_v3 segment code 2h #0h
	$$Update_Motor_Data$WiFly_v3 segment code 2h #0h
	$$Update_Posture_Data_From_Sensor$WiFly_v3 segment code 2h #0h
	$$kxg03_isr$WiFly_v3 segment code 2h #0h
	$$loop$WiFly_v3 segment code 2h #0h
	$$setup$WiFly_v3 segment code 2h #0h
CVERSION 3.53.1
CGLOBAL 01H 03H 0000H "Motor_Sets" 08H 02H 89H 01H 81H 18H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Update_Motor_Data" 08H 02H 87H 01H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "Update_Posture_Data_From_Sensor" 08H 02H 88H 01H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Time_Update" 08H 02H 85H 01H 81H 06H 00H 00H 01H
CGLOBAL 01H 03H 0000H "Emargency_Stop" 08H 02H 84H 01H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "loop" 08H 02H 43H 00H 81H 02H 00H 00H 07H
CSGLOBAL 03H 0000H "kxg03_isr" 08H 02H 83H 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Flight_Mode" 08H 02H 8BH 01H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Flight_Preparation_Mode" 08H 02H 8AH 01H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "setup" 08H 02H 42H 00H 83H 22H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Signal_Check" 08H 02H 86H 01H 81H 0aH 00H 00H 07H
CSTRUCTTAG 0000H 0000H 002DH 0005H 0000000EH "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "current_time" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "last_recv_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 00000008H "length" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "signal_check" 02H 00H 01H
CSTRUCTMEM 42H 00000001H 0000000CH "flight_permission" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 002CH 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "ControlValue" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000004H "ControlMode" 02H 00H 03H
CSTRUCTTAG 0000H 0000H 002BH 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "CurrentPosture" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000004H "TargetPosture" 02H 00H 03H
CSTRUCTTAG 0000H 0000H 002AH 000AH 00000014H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 79H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "requestFrom" 0AH 03H 00H 02H 7AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 7BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 7CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "beginTransmission" 0AH 03H 00H 02H 7DH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000AH "write_byte" 0AH 03H 00H 02H 7EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000CH "write" 0AH 03H 00H 02H 7FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "endTransmission" 0AH 03H 00H 02H 80H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000010H "setTimeout" 0AH 03H 00H 02H 81H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000012H "end" 0AH 03H 00H 02H 82H 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0029H 0008H 00000016H "SequenceStepTimeouts"
CSTRUCTMEM 42H 00000002H 00000000H "pre_range_vcsel_period_pclks" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "final_range_vcsel_period_pclks" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "msrc_dss_tcc_mclks" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "pre_range_mclks" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "final_range_mclks" 02H 00H 08H
CSTRUCTMEM 42H 00000004H 0000000AH "msrc_dss_tcc_us" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000000EH "pre_range_us" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000012H "final_range_us" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0028H 0005H 00000006H "SequenceStepEnables"
CSTRUCTMEM 42H 00000001H 00000000H "tcc" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "msrc" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "dss" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "pre_range" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "final_range" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0025H 0003H 00000006H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 58H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "set" 0AH 03H 00H 02H 59H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "cal" 0AH 03H 00H 02H 5AH 01H 00H 00H 00H 00H 03H
CSTRUCTTAG 0000H 0000H 0024H 0006H 00000024H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "angle" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000004H "bias" 02H 00H 03H
CSTRUCTMEM 43H 00000010H 00000008H "P" 08H 01H 02H 00H 01H 02H 00H 00H 03H
CSTRUCTMEM 43H 00000004H 00000018H "newAngle" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 0000001CH "newRate" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000020H "lastTime" 02H 00H 03H
CSTRUCTTAG 0000H 0000H 0023H 0012H 00000024H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 45H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "sync_init" 0AH 03H 00H 02H 47H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "read" 0AH 03H 00H 02H 48H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "write" 0AH 03H 00H 02H 49H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000008H "get_val" 0AH 03H 00H 02H 4AH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000AH "get_gyro" 0AH 03H 00H 02H 4BH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000CH "get_acc" 0AH 03H 00H 02H 4CH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000000EH "set_acc_avr" 0AH 03H 00H 02H 4DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "set_acc_range" 0AH 03H 00H 02H 4EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "set_gyro_range" 0AH 03H 00H 02H 4FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "set_gyro_bw" 0AH 03H 00H 02H 50H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "angle_init" 0AH 03H 00H 02H 51H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000018H "get_angle" 0AH 03H 00H 02H 52H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001AH "set_kalman_out" 0AH 03H 00H 02H 53H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001CH "set_acc_out" 0AH 03H 00H 02H 54H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "set_gyro_out" 0AH 03H 00H 02H 55H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000020H "set_deg_out" 0AH 03H 00H 02H 56H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000022H "standby" 0AH 03H 00H 02H 57H 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0022H 0002H 00000002H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addr" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "data" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0021H 0009H 00000012H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 3CH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "attach" 0AH 03H 00H 02H 3DH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "detach" 0AH 03H 00H 02H 3EH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000006H "start" 0AH 03H 00H 02H 3FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000008H "stop" 0AH 03H 00H 02H 40H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000AH "close" 0AH 03H 00H 02H 41H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000CH "write" 0AH 03H 00H 02H 42H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000EH "dt" 0AH 03H 00H 02H 43H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000010H "update" 0AH 03H 00H 02H 44H 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0020H 0009H 00000012H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "attach" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "detach" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000006H "start" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000008H "stop" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000AH "close" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000CH "write" 0AH 03H 00H 02H 39H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000000EH "dt" 0AH 03H 00H 02H 3AH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000010H "update" 0AH 03H 00H 02H 3BH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 001FH 0004H 00000008H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "get_val" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "get_rawval" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "power_down" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001EH 0004H 00000008H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "get_val" 0AH 03H 00H 02H 2CH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "get_rawtemppressval" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "power_down" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001DH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 61H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 62H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 63H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 64H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 65H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 66H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 67H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0027H 0002H "vcselPeriodType"
CENUMMEM 00000000H "VcselPeriodPreRange"
CENUMMEM 00000001H "VcselPeriodFinalRange"
CENUMTAG 0000H 0000H 0026H 003AH "regAddr"
CENUMMEM 00000000H "SYSRANGE_START"
CENUMMEM 0000000CH "SYSTEM_THRESH_HIGH"
CENUMMEM 0000000EH "SYSTEM_THRESH_LOW"
CENUMMEM 00000001H "SYSTEM_SEQUENCE_CONFIG"
CENUMMEM 00000009H "SYSTEM_RANGE_CONFIG"
CENUMMEM 00000004H "SYSTEM_INTERMEASUREMENT_PERIOD"
CENUMMEM 0000000AH "SYSTEM_INTERRUPT_CONFIG_GPIO"
CENUMMEM 00000084H "GPIO_HV_MUX_ACTIVE_HIGH"
CENUMMEM 0000000BH "SYSTEM_INTERRUPT_CLEAR"
CENUMMEM 00000013H "RESULT_INTERRUPT_STATUS"
CENUMMEM 00000014H "RESULT_RANGE_STATUS"
CENUMMEM 000000BCH "RESULT_CORE_AMBIENT_WINDOW_EVENTS_RTN"
CENUMMEM 000000C0H "RESULT_CORE_RANGING_TOTAL_EVENTS_RTN"
CENUMMEM 000000D0H "RESULT_CORE_AMBIENT_WINDOW_EVENTS_REF"
CENUMMEM 000000D4H "RESULT_CORE_RANGING_TOTAL_EVENTS_REF"
CENUMMEM 000000B6H "RESULT_PEAK_SIGNAL_RATE_REF"
CENUMMEM 00000028H "ALGO_PART_TO_PART_RANGE_OFFSET_MM"
CENUMMEM 0000008AH "I2C_SLAVE_DEVICE_ADDRESS"
CENUMMEM 00000060H "MSRC_CONFIG_CONTROL"
CENUMMEM 00000027H "PRE_RANGE_CONFIG_MIN_SNR"
CENUMMEM 00000056H "PRE_RANGE_CONFIG_VALID_PHASE_LOW"
CENUMMEM 00000057H "PRE_RANGE_CONFIG_VALID_PHASE_HIGH"
CENUMMEM 00000064H "PRE_RANGE_MIN_COUNT_RATE_RTN_LIMIT"
CENUMMEM 00000067H "FINAL_RANGE_CONFIG_MIN_SNR"
CENUMMEM 00000047H "FINAL_RANGE_CONFIG_VALID_PHASE_LOW"
CENUMMEM 00000048H "FINAL_RANGE_CONFIG_VALID_PHASE_HIGH"
CENUMMEM 00000044H "FINAL_RANGE_CONFIG_MIN_COUNT_RATE_RTN_LIMIT"
CENUMMEM 00000061H "PRE_RANGE_CONFIG_SIGMA_THRESH_HI"
CENUMMEM 00000062H "PRE_RANGE_CONFIG_SIGMA_THRESH_LO"
CENUMMEM 00000050H "PRE_RANGE_CONFIG_VCSEL_PERIOD"
CENUMMEM 00000051H "PRE_RANGE_CONFIG_TIMEOUT_MACROP_HI"
CENUMMEM 00000052H "PRE_RANGE_CONFIG_TIMEOUT_MACROP_LO"
CENUMMEM 00000081H "SYSTEM_HISTOGRAM_BIN"
CENUMMEM 00000033H "HISTOGRAM_CONFIG_INITIAL_PHASE_SELECT"
CENUMMEM 00000055H "HISTOGRAM_CONFIG_READOUT_CTRL"
CENUMMEM 00000070H "FINAL_RANGE_CONFIG_VCSEL_PERIOD"
CENUMMEM 00000071H "FINAL_RANGE_CONFIG_TIMEOUT_MACROP_HI"
CENUMMEM 00000072H "FINAL_RANGE_CONFIG_TIMEOUT_MACROP_LO"
CENUMMEM 00000020H "CROSSTALK_COMPENSATION_PEAK_RATE_MCPS"
CENUMMEM 00000046H "MSRC_CONFIG_TIMEOUT_MACROP"
CENUMMEM 000000BFH "SOFT_RESET_GO2_SOFT_RESET_N"
CENUMMEM 000000C0H "IDENTIFICATION_MODEL_ID"
CENUMMEM 000000C2H "IDENTIFICATION_REVISION_ID"
CENUMMEM 000000F8H "OSC_CALIBRATE_VAL"
CENUMMEM 00000032H "GLOBAL_CONFIG_VCSEL_WIDTH"
CENUMMEM 000000B0H "GLOBAL_CONFIG_SPAD_ENABLES_REF_0"
CENUMMEM 000000B1H "GLOBAL_CONFIG_SPAD_ENABLES_REF_1"
CENUMMEM 000000B2H "GLOBAL_CONFIG_SPAD_ENABLES_REF_2"
CENUMMEM 000000B3H "GLOBAL_CONFIG_SPAD_ENABLES_REF_3"
CENUMMEM 000000B4H "GLOBAL_CONFIG_SPAD_ENABLES_REF_4"
CENUMMEM 000000B5H "GLOBAL_CONFIG_SPAD_ENABLES_REF_5"
CENUMMEM 000000B6H "GLOBAL_CONFIG_REF_EN_START_SELECT"
CENUMMEM 0000004EH "DYNAMIC_SPAD_NUM_REQUESTED_REF_SPAD"
CENUMMEM 0000004FH "DYNAMIC_SPAD_REF_EN_START_OFFSET"
CENUMMEM 00000080H "POWER_MANAGEMENT_GO1_POWER_FORCE"
CENUMMEM 00000089H "VHV_CONFIG_PAD_SCL_SDA__EXTSUP_HV"
CENUMMEM 00000030H "ALGO_PHASECAL_LIM"
CENUMMEM 00000030H "ALGO_PHASECAL_CONFIG_TIMEOUT"
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "Control" 04H 00H 05H 2CH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "KALMAN_PARAM" 04H 00H 05H 24H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "TwoWire" 04H 00H 05H 2AH 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 43H "HardwareServo" 04H 00H 05H 21H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "KXG03_REG" 04H 00H 05H 22H 00H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 43H "SequenceStepTimeouts" 04H 00H 05H 29H 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "Posture" 04H 00H 05H 2BH 00H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "KALMAN" 04H 00H 05H 25H 00H
CTYPEDEF 0000H 0000H 43H "HardwareHBridge" 04H 00H 05H 20H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "KXG03" 04H 00H 05H 23H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "FlyParam" 04H 00H 05H 2DH 00H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "pKXG03_REG" 06H 03H 00H 00H 05H 22H 00H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "t_BM1383" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 43H "SequenceStepEnables" 04H 00H 05H 28H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "t_BM1422" 04H 00H 05H 1FH 00H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CGLOBAL 02H 01H 0024H "kxg03" 04H 00H 05H 23H 00H
CGLOBAL 00H 42H 0004H "measurement_timing_budget_us" 02H 00H 02H
CGLOBAL 02H 01H 0012H "hhb" 04H 00H 05H 20H 00H
CGLOBAL 00H 42H 0001H "address" 02H 00H 00H
CGLOBAL 00H 42H 0002H "timeout_start_ms" 02H 00H 08H
CGLOBAL 00H 43H 0020H "mac" 04H 00H 05H 1CH 00H
CGLOBAL 02H 01H 0012H "hsv" 04H 00H 05H 21H 00H
CGLOBAL 00H 42H 0100H "rx_data" 05H 01H 00H 01H 00H 00H
CGLOBAL 00H 42H 0100H "tx_data" 05H 01H 00H 01H 00H 00H
CGLOBAL 01H 43H 0002H "old" 02H 00H 01H
CGLOBAL 00H 43H 0008H "yaw" 04H 00H 05H 2CH 00H
CGLOBAL 00H 43H 0004H "rx" 04H 00H 05H 1AH 00H
CGLOBAL 01H 43H 0002H "current" 02H 00H 01H
CGLOBAL 00H 42H 0002H "io_timeout" 02H 00H 08H
CGLOBAL 00H 43H 0008H "level1" 04H 00H 05H 2CH 00H
CGLOBAL 00H 43H 0008H "level2" 04H 00H 05H 2CH 00H
CGLOBAL 00H 43H 0008H "pitch" 04H 00H 05H 2BH 00H
CGLOBAL 00H 42H 0001H "stop_variable" 02H 00H 00H
CGLOBAL 00H 43H 0008H "mode" 04H 00H 05H 2CH 00H
CGLOBAL 01H 42H 0001H "kxg03_irq" 02H 00H 00H
CGLOBAL 02H 01H 0010H "Print" 04H 00H 05H 03H 00H
CGLOBAL 00H 43H 0008H "servo" 04H 00H 05H 2CH 00H
CSGLOBAL 43H 000EH "fly_param" 04H 00H 05H 2DH 00H
CGLOBAL 02H 01H 001EH "Serial" 04H 00H 05H 02H 00H
CGLOBAL 00H 42H 0001H "did_timeout" 02H 00H 00H
CGLOBAL 00H 42H 0001H "last_status" 02H 00H 00H
CGLOBAL 02H 01H 0014H "Wire" 04H 00H 05H 2AH 00H
CGLOBAL 00H 43H 0008H "slope" 04H 00H 05H 2BH 00H
CGLOBAL 02H 01H 0036H "SubGHz" 04H 00H 05H 1DH 00H
CFILE 0001H 00000009H "WiFly_v3_ide.h"
CFILE 0002H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 0003H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0004H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0005H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0006H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0007H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 0008H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0009H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000AH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000BH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000CH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 000EH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 000FH 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0011H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0012H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0014H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0015H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0016H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0017H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0018H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0019H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001AH 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001BH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001CH 0000002FH "C:\\LAZURI~1\\LIBRAR~1\\BM1383\\BM1383.h"
CFILE 001DH 00000031H "C:\\LAZURI~1\\LIBRAR~1\\BM1422\\BM1422.h"
CFILE 001EH 00000028H "C:\\LAZURI~1\\LIBRAR~1\\HARDWA~1\\HardwareHBridge.h"
CFILE 001FH 00000027H "C:\\LAZURI~1\\LIBRAR~1\\HARDWA~2\\HardwareServo.h"
CFILE 0020H 000000CEH "C:\\LAZURI~1\\LIBRAR~1\\KXG03_~1\\kxg03_new.h"
CFILE 0021H 00000105H "C:\\LAZURI~1\\LIBRAR~1\\VL53L0X\\VL53L0X.h"
CFILE 0022H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\Lazurite.h"
CFILE 0023H 00000039H "C:\\LAZURI~1\\LIBRAR~1\\Wire\\Wire.h"
CFILE 0000H 0000015FH "WiFly_v3.c"

	rseg $$kxg03_isr$WiFly_v3
CFUNCTION 387

_kxg03_isr	:
CBLOCK 387 1 22

;;static void kxg03_isr(void){
CLINEA 0000H 0001H 0016H 0001H 001CH
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 387 2 22

;;	kxg03_irq = true;
CLINEA 0000H 0001H 0017H 0002H 0012H
	mov	r0,	#01h
	st	r0,	NEAR _kxg03_irq
CBLOCKEND 387 2 24

;;}
CLINEA 0000H 0001H 0018H 0001H 0001H
	rt
CBLOCKEND 387 1 24
CFUNCTIONEND 387


	rseg $$Emargency_Stop$WiFly_v3
CFUNCTION 388

_Emargency_Stop	:
CBLOCK 388 1 77

;;void Emargency_Stop(){
CLINEA 0000H 0001H 004DH 0001H 0016H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er4
CBLOCK 388 2 77
CRET 0002H

;;	Serial.println("Emargency Stop!");
CLINEA 0000H 0001H 004EH 0002H 0023H
	mov	r0,	#BYTE1 OFFSET $$S2
	mov	r1,	#BYTE2 OFFSET $$S2
	l	er2,	NEAR _Serial+0eh
	bl	er2

;;	hhb.write(3,0L);
CLINEA 0000H 0001H 004FH 0002H 0011H
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	mov	r0,	#03h
	l	er2,	NEAR _hhb+0ch
	bl	er2
	add	sp,	#4 

;;	hhb.write(2,0L);
CLINEA 0000H 0001H 0050H 0002H 0011H
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	mov	r0,	#02h
	l	er2,	NEAR _hhb+0ch
	bl	er2
	add	sp,	#4 

;;	hsv.write(0,0);
CLINEA 0000H 0001H 0051H 0002H 0010H
	mov	er2,	#0 
	mov	r0,	#00h
	l	er4,	NEAR _hsv+0ch
	bl	er4

;;	hsv.update();
CLINEA 0000H 0001H 0052H 0002H 000EH
	l	er0,	NEAR _hsv+010h
	bl	er0

;;	fly_param.flight_permission = false;
CLINEA 0000H 0001H 0054H 0002H 0025H
	mov	r0,	#00h
	st	r0,	NEAR _fly_param+0ch

;;	digitalWrite(BLUE_LED, LOW);
CLINEA 0000H 0001H 0055H 0002H 001DH
	mov	r1,	#00h
	mov	r0,	#01ah
	bl	_digitalWrite
CBLOCKEND 388 2 88

;;}
CLINEA 0000H 0000H 0058H 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 388 1 88
CFUNCTIONEND 388


	rseg $$Time_Update$WiFly_v3
CFUNCTION 389

_Time_Update	:
CBLOCK 389 1 91

;;int Time_Update(void){
CLINEA 0000H 0001H 005BH 0001H 0016H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr4
CBLOCK 389 2 91
CRET 0004H

;;	if(fly_param.length > 0){
CLINEA 0000H 0001H 005DH 0002H 001AH
	l	er0,	NEAR _fly_param+08h
	cmp	r0,	#00h
	cmpc	r1,	#00h
	bles	_$L4
CBLOCK 389 3 93

;;		fly_param.current_time = millis();
CLINEA 0000H 0000H 005EH 0003H 0024H
	bl	_millis
	st	er0,	NEAR _fly_param
	st	er2,	NEAR _fly_param+02h

;;		fly_param.last_recv_time = fly_param.current_time;
CLINEA 0000H 0001H 005FH 0003H 0034H
	st	er0,	NEAR _fly_param+04h
	st	er2,	NEAR _fly_param+06h

;;		digitalWrite(BLUE_LED, HIGH);
CLINEA 0000H 0001H 0060H 0003H 001FH
	mov	r1,	#01h
	mov	r0,	#01ah
	bl	_digitalWrite

;;		return 1;
CLINEA 0000H 0001H 0061H 0003H 000BH
	mov	er0,	#1 
CBLOCKEND 389 3 98
CBLOCKEND 389 2 106

;;}
CLINEA 0000H 0001H 006AH 0001H 0001H
_$L3 :
	pop	xr4
	pop	pc

;;	} else {
CLINEA 0000H 0000H 0062H 0002H 0009H
_$L4 :
CBLOCK 389 4 98

;;		fly_param.current_time = millis();
CLINEA 0000H 0000H 0063H 0003H 0024H
	bl	_millis
	st	er0,	NEAR _fly_param
	st	er2,	NEAR _fly_param+02h

;;		if(fly_param.current_time - fly_param.last_recv_time > WAIT_TIME_FOR_EMG_STOP){
CLINEA 0000H 0001H 0064H 0003H 0051H
	l	er4,	NEAR _fly_param+04h
	l	er6,	NEAR _fly_param+06h
	sub	r0,	r4
	subc	r1,	r5
	subc	r2,	r6
	subc	r3,	r7
	cmp	r0,	#098h
	cmpc	r1,	#03ah
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bles	_$L7
CBLOCK 389 5 100

;;			Emargency_Stop();
CLINEA 0000H 0001H 0065H 0004H 0014H
	bl	_Emargency_Stop
CBLOCKEND 389 5 102

;;		}
CLINEA 0000H 0000H 0066H 0003H 0003H
_$L7 :

;;		return 0;
CLINEA 0000H 0001H 0067H 0003H 000BH
	mov	er0,	#0 
	bal	_$L3
CBLOCKEND 389 4 104
CBLOCKEND 389 1 106
CFUNCTIONEND 389


	rseg $$Signal_Check$WiFly_v3
CFUNCTION 390

_Signal_Check	:
CBLOCK 390 1 109

;;void Signal_Check(){
CLINEA 0000H 0001H 006DH 0001H 0014H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
	push	er4
CBLOCK 390 2 109
CRET 0004H

;;	fly_param.length = SubGHz.readData(rx_data, sizeof(rx_data));
CLINEA 0000H 0000H 006EH 0002H 003EH
	mov	r2,	#00h
	mov	r3,	#01h
	mov	r0,	#BYTE1 OFFSET _rx_data
	mov	r1,	#BYTE2 OFFSET _rx_data
	l	er4,	NEAR _SubGHz+018h
	bl	er4
	st	er0,	NEAR _fly_param+08h

;;	fly_param.signal_check = Time_Update();
CLINEA 0000H 0000H 006FH 0002H 0028H
	bl	_Time_Update
	st	er0,	NEAR _fly_param+0ah

;;	SubGHz.decMac(&mac,rx_data,fly_param.length);
CLINEA 0000H 0001H 0070H 0002H 002EH
	l	er0,	NEAR _fly_param+08h
	push	er0
	mov	r2,	#BYTE1 OFFSET _rx_data
	mov	r3,	#BYTE2 OFFSET _rx_data
	mov	r0,	#BYTE1 OFFSET _mac
	mov	r1,	#BYTE2 OFFSET _mac
	l	er4,	NEAR _SubGHz+028h
	bl	er4
	add	sp,	#2 

;;	level1.ControlValue = mac.payload[4];	//11
CLINEA 0000H 0001H 0071H 0002H 002BH
	l	bp,	NEAR _mac+01ch
	l	r0,	4[bp]
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _level1
	st	er2,	NEAR _level1+02h
CBLOCKEND 390 2 114

;;}
CLINEA 0000H 0001H 0072H 0001H 0001H
	pop	er4
	pop	bp
	pop	pc
CBLOCKEND 390 1 114
CFUNCTIONEND 390


	rseg $$Update_Motor_Data$WiFly_v3
CFUNCTION 391

_Update_Motor_Data	:
CBLOCK 391 1 117

;;void Update_Motor_Data(void){
CLINEA 0000H 0001H 0075H 0001H 001DH
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	bp
	push	er4
CBLOCK 391 2 117
CRET 0004H

;;	SubGHz.decMac(&mac,rx_data,fly_param.length);
CLINEA 0000H 0001H 0076H 0002H 002EH
	l	er0,	NEAR _fly_param+08h
	push	er0
	mov	r2,	#BYTE1 OFFSET _rx_data
	mov	r3,	#BYTE2 OFFSET _rx_data
	mov	r0,	#BYTE1 OFFSET _mac
	mov	r1,	#BYTE2 OFFSET _mac
	l	er4,	NEAR _SubGHz+028h
	bl	er4
	add	sp,	#2 

;;	fly_param.length = SubGHz.readData(rx_data, sizeof(rx_data));
CLINEA 0000H 0000H 0078H 0002H 003EH
	mov	r2,	#00h
	mov	r3,	#01h
	mov	r0,	#BYTE1 OFFSET _rx_data
	mov	r1,	#BYTE2 OFFSET _rx_data
	l	er4,	NEAR _SubGHz+018h
	bl	er4
	st	er0,	NEAR _fly_param+08h

;;	level1.ControlValue = mac.payload[4];
CLINEA 0000H 0001H 007AH 0002H 0026H
	l	bp,	NEAR _mac+01ch
	l	r0,	4[bp]
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _level1
	st	er2,	NEAR _level1+02h

;;	level2.ControlValue = mac.payload[0];
CLINEA 0000H 0001H 007BH 0002H 0026H
	l	r0,	[bp]
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _level2
	st	er2,	NEAR _level2+02h

;;	servo.ControlValue = mac.payload[2];
CLINEA 0000H 0001H 007CH 0002H 0025H
	l	r0,	2[bp]
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _servo
	st	er2,	NEAR _servo+02h

;;	mode.ControlMode = mac.payload[6];	//
CLINEA 0000H 0001H 007FH 0002H 0026H
	l	r0,	6[bp]
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _mode+04h
	st	er2,	NEAR _mode+06h
CBLOCKEND 391 2 130

;;}
CLINEA 0000H 0000H 0082H 0001H 0001H
	pop	er4
	pop	bp
	pop	pc
CBLOCKEND 391 1 130
CFUNCTIONEND 391


	rseg $$Update_Posture_Data_From_Sensor$WiFly_v3
CFUNCTION 392

_Update_Posture_Data_From_Sensor	:
CBLOCK 392 1 133

;;void Update_Posture_Data_From_Sensor(){
CLINEA 0000H 0001H 0085H 0001H 0027H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er4
CBLOCK 392 2 133
CRET 0002H
CSLOCAL 43H 0040H 0000H 0002H "val" 05H 01H 10H 00H 00H 03H
CLOCAL 4BH 0002H 0000H 0002H "i" 02H 00H 01H
CLOCAL 4BH 0002H 0000H 0002H "msg" 02H 00H 01H

;;	wait_event(&kxg03_irq);
CLINEA 0000H 0001H 0089H 0002H 0018H
	mov	r0,	#BYTE1 OFFSET _kxg03_irq
	mov	r1,	#BYTE2 OFFSET _kxg03_irq
	bl	_wait_event

;;	kxg03.get_angle(val);
CLINEA 0000H 0001H 008AH 0002H 0016H
	mov	r0,	#BYTE1 OFFSET _$ST0
	mov	r1,	#BYTE2 OFFSET _$ST0
	l	er2,	NEAR _kxg03+018h
	bl	er2

;;	old = current;
CLINEA 0000H 0001H 008CH 0002H 000FH
	l	er0,	NEAR _current
	st	er0,	NEAR _old

;;	current = millis();
CLINEA 0000H 0000H 008DH 0002H 0014H
	bl	_millis
	st	er0,	NEAR _current

;;	Print.init(tx_data,sizeof(tx_data));
CLINEA 0000H 0001H 008FH 0002H 0025H
	mov	r2,	#00h
	mov	r3,	#01h
	mov	r0,	#BYTE1 OFFSET _tx_data
	mov	r1,	#BYTE2 OFFSET _tx_data
	l	er4,	NEAR _Print
	bl	er4

;;    Print.p("STX");
CLINEA 0000H 0001H 0091H 0005H 0013H
	mov	r0,	#BYTE1 OFFSET $$S12
	mov	r1,	#BYTE2 OFFSET $$S12
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.p(",");
CLINEA 0000H 0001H 00A3H 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.d((double)val[0], 0);		// kalman pitch
CLINEA 0000H 0001H 00A4H 0002H 002DH
	l	er0,	NEAR _$ST0
	l	er2,	NEAR _$ST0+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#00h
	l	er2,	NEAR _Print+08h
	bl	er2
	add	sp,	#8 

;;	Print.p(",");
CLINEA 0000H 0001H 00A5H 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.d((double)val[1], 0);		// kalman slope
CLINEA 0000H 0001H 00A6H 0002H 002DH
	l	er0,	NEAR _$ST0+04h
	l	er2,	NEAR _$ST0+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#00h
	l	er2,	NEAR _Print+08h
	bl	er2
	add	sp,	#8 

;;	Print.p(",");
CLINEA 0000H 0001H 00A7H 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.d((double)level1.ControlValue, 0);
CLINEA 0000H 0001H 00A8H 0002H 0029H
	l	er0,	NEAR _level1
	l	er2,	NEAR _level1+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#00h
	l	er2,	NEAR _Print+08h
	bl	er2
	add	sp,	#8 

;;	Print.p(",");
CLINEA 0000H 0001H 00A9H 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.d((double)level2.ControlValue, 0);
CLINEA 0000H 0001H 00AAH 0002H 0029H
	l	er0,	NEAR _level2
	l	er2,	NEAR _level2+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#00h
	l	er2,	NEAR _Print+08h
	bl	er2
	add	sp,	#8 

;;	Print.p(",");
CLINEA 0000H 0001H 00ABH 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.d((double)current-old, 0);
CLINEA 0000H 0001H 00ACH 0002H 0021H
	l	er0,	NEAR _current
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	l	er0,	NEAR _old
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__dsubu8sw
	add	sp,	#8 
	mov	r0,	#00h
	l	er2,	NEAR _Print+08h
	bl	er2
	add	sp,	#8 

;;	Print.p(",");
CLINEA 0000H 0001H 00ADH 0002H 000EH
	mov	r0,	#BYTE1 OFFSET $$S13
	mov	r1,	#BYTE2 OFFSET $$S13
	l	er2,	NEAR _Print+02h
	bl	er2

;;	Print.p("ETX");
CLINEA 0000H 0001H 00AEH 0002H 0010H
	mov	r0,	#BYTE1 OFFSET $$S14
	mov	r1,	#BYTE2 OFFSET $$S14
	l	er2,	NEAR _Print+02h
	bl	er2

;;    Print.ln();
CLINEA 0000H 0001H 00BBH 0005H 000FH
	l	er0,	NEAR _Print+0ah
	bl	er0

;;    Serial.print(tx_data);
CLINEA 0000H 0001H 00BDH 0005H 001AH
	mov	r0,	#BYTE1 OFFSET _tx_data
	mov	r1,	#BYTE2 OFFSET _tx_data
	l	er2,	NEAR _Serial+0ch
	bl	er2

;;	msg = SubGHz.send(SUBGHZ_PANID, SUBGHZ_RXADDR, tx_data, Print.len(), NULL);
CLINEA 0000H 0000H 00BEH 0002H 004CH
	l	er0,	NEAR _SubGHz+08h
	mov	er4,	er0
	l	er0,	NEAR _Print+0eh
	bl	er0
	mov	er2,	er0
	mov	er0,	#0 
	push	er0
	push	er2
	mov	r0,	#BYTE1 OFFSET _tx_data
	mov	r1,	#BYTE2 OFFSET _tx_data
	push	er0
	mov	er2,	#2 
	mov	r0,	#09h
	mov	r1,	#08h
	bl	er4
	add	sp,	#6 
CBLOCKEND 392 2 194

;;}
CLINEA 0000H 0000H 00C2H 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 392 1 194
CFUNCTIONEND 392


	rseg $$Motor_Sets$WiFly_v3
CFUNCTION 393

_Motor_Sets	:
CBLOCK 393 1 197

;;void Motor_Sets(){
CLINEA 0000H 0001H 00C5H 0001H 0012H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
CBLOCK 393 2 197
CRET 0002H

;;	hhb.write(3, map((long)level1.ControlValue,0L,255L,0L,1023L));
CLINEA 0000H 0001H 00C7H 0002H 003FH
	l	er8,	NEAR _hhb+0ch
	mov	r0,	#0ffh
	mov	r1,	#03h
	mov	er2,	#0 
	push	xr0
	mov	er0,	#0 
	push	xr0
	mov	r0,	#0ffh
	push	xr0
	mov	er0,	#0 
	push	xr0
	l	er0,	NEAR _level1
	l	er2,	NEAR _level1+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	bl	_map
	add	sp,	#16
	push	xr0
	mov	r0,	#03h
	bl	er8
	add	sp,	#4 

;;	hhb.write(2, map((long)level2.ControlValue,0L,255L,0L,1023L));
CLINEA 0000H 0001H 00C8H 0002H 003FH
	l	er8,	NEAR _hhb+0ch
	mov	r0,	#0ffh
	mov	r1,	#03h
	mov	er2,	#0 
	push	xr0
	mov	er0,	#0 
	push	xr0
	mov	r0,	#0ffh
	push	xr0
	mov	er0,	#0 
	push	xr0
	l	er0,	NEAR _level2
	l	er2,	NEAR _level2+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	bl	_map
	add	sp,	#16
	push	xr0
	mov	r0,	#02h
	bl	er8
	add	sp,	#4 

;;	hsv.write(0, map((unsigned short)servo.ControlValue,0L,255L,900L,1923L));
CLINEA 0000H 0001H 00CAH 0002H 004AH
	l	er8,	NEAR _hsv+0ch
	mov	r0,	#083h
	mov	r1,	#07h
	mov	er2,	#0 
	push	xr0
	mov	r0,	#084h
	mov	r1,	#03h
	push	xr0
	mov	r0,	#0ffh
	mov	r1,	#00h
	push	xr0
	mov	er0,	#0 
	push	xr0
	l	er0,	NEAR _servo
	l	er2,	NEAR _servo+02h
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	mov	er2,	#0 
	bl	_map
	add	sp,	#16
	mov	er2,	er0
	mov	r0,	#00h
	bl	er8

;;	hsv.update();
CLINEA 0000H 0001H 00CBH 0002H 000EH
	l	er0,	NEAR _hsv+010h
	bl	er0
CBLOCKEND 393 2 206

;;}
CLINEA 0000H 0000H 00CEH 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 393 1 206
CFUNCTIONEND 393


	rseg $$Flight_Preparation_Mode$WiFly_v3
CFUNCTION 394

_Flight_Preparation_Mode	:
CBLOCK 394 1 209

;;void Flight_Preparation_Mode(){
CLINEA 0000H 0001H 00D1H 0001H 001FH
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 394 2 209
CRET 0000H

;;	while(1){
CLINEA 0000H 0001H 00D3H 0002H 000AH
	bal	_$L28
_$L19 :
CBLOCK 394 3 211

;;		Signal_Check();
CLINEA 0000H 0001H 00D5H 0003H 0011H
	bl	_Signal_Check

;;		if(fly_param.signal_check > 0){
CLINEA 0000H 0001H 00D7H 0003H 0021H
	l	er0,	NEAR _fly_param+0ah
	cmp	r0,	#00h
	cmpc	r1,	#00h
	bles	_$L21
CBLOCK 394 4 215

;;			if(level1.ControlValue < 1){
CLINEA 0000H 0001H 00D8H 0004H 001FH
	l	er0,	NEAR _level1
	l	er2,	NEAR _level1+02h
	push	xr0
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L23
CBLOCK 394 5 216

;;				Serial.println("ready to flight...");
CLINEA 0000H 0001H 00D9H 0005H 0029H
	mov	r0,	#BYTE1 OFFSET $$S25
	mov	r1,	#BYTE2 OFFSET $$S25
	l	er2,	NEAR _Serial+0eh
	bl	er2

;;				fly_param.flight_permission = true;
CLINEA 0000H 0001H 00DAH 0005H 0027H
	mov	r0,	#01h
	st	r0,	NEAR _fly_param+0ch

;;				return;
CLINEA 0000H 0001H 00DBH 0005H 000BH
	bal	_$L16
CBLOCKEND 394 5 220

;;			} else{
CLINEA 0000H 0000H 00DCH 0004H 000AH
_$L23 :
CBLOCK 394 6 220

;;				Serial.println("level1 is not 0!");
CLINEA 0000H 0001H 00DDH 0005H 0027H
	mov	r0,	#BYTE1 OFFSET $$S27
	mov	r1,	#BYTE2 OFFSET $$S27
	l	er2,	NEAR _Serial+0eh
	bl	er2
CBLOCKEND 394 6 222
CBLOCKEND 394 4 223

;;		} else {
CLINEA 0000H 0000H 00DFH 0003H 000AH
	bal	_$L28
_$L21 :
CBLOCK 394 7 223

;;			Serial.println("preparation error!");
CLINEA 0000H 0001H 00E0H 0004H 0028H
	mov	r0,	#BYTE1 OFFSET $$S29
	mov	r1,	#BYTE2 OFFSET $$S29
	l	er2,	NEAR _Serial+0eh
	bl	er2
CBLOCKEND 394 7 225

;;		}
CLINEA 0000H 0000H 00E1H 0003H 0003H
_$L28 :
CBLOCKEND 394 3 227

;;	while(1){
CLINEA 0000H 0000H 00D3H 0000H 0000H
	bal	_$L19
CBLOCKEND 394 2 228

;;}
CLINEA 0000H 0001H 00E4H 0001H 0001H
_$L16 :
	pop	pc
CBLOCKEND 394 1 228
CFUNCTIONEND 394


	rseg $$Flight_Mode$WiFly_v3
CFUNCTION 395

_Flight_Mode	:
CBLOCK 395 1 230

;;void Flight_Mode(){
CLINEA 0000H 0001H 00E6H 0001H 0013H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 395 2 230
CRET 0000H

;;	while(fly_param.flight_permission == true){
CLINEA 0000H 0000H 00E7H 0001H 0001H
	bal	_$L35

;;	while(fly_param.flight_permission == true){
CLINEA 0000H 0000H 00E7H 0002H 002CH
_$L33 :
CBLOCK 395 3 231

;;		Update_Motor_Data();
CLINEA 0000H 0001H 00E8H 0003H 0016H
	bl	_Update_Motor_Data

;;		Motor_Sets();
CLINEA 0000H 0001H 00E9H 0003H 000FH
	bl	_Motor_Sets

;;		Update_Posture_Data_From_Sensor();
CLINEA 0000H 0001H 00EBH 0003H 0024H
	bl	_Update_Posture_Data_From_Sensor
CBLOCKEND 395 3 236

;;	while(fly_param.flight_permission == true){
CLINEA 0000H 0000H 00E7H 0001H 0001H
_$L35 :
	l	r0,	NEAR _fly_param+0ch
	cmp	r0,	#01h
	beq	_$L33
CBLOCKEND 395 2 237

;;}
CLINEA 0000H 0001H 00EDH 0001H 0001H
	pop	pc
CBLOCKEND 395 1 237
CFUNCTIONEND 395


	rseg $$setup$WiFly_v3
CFUNCTION 66

_setup	:
CBLOCK 66 1 241

;;void setup() {
CLINEA 0000H 0001H 00F1H 0001H 000EH
;;*****************************************
;;	register/stack information
;;*****************************************
	_param$4	set	-10
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-010
	push	er8
	push	er4
CBLOCK 66 2 241
CRET 0010H
CLOCAL 4AH 0001H 0000H 0002H "rc" 02H 00H 00H
CLOCAL 47H 0002H 0024H 0002H "msg" 02H 00H 01H
CLOCAL 43H 000AH 000AH 0002H "param" 04H 00H 05H 1BH 00H

;;	fly_param.length = 0;
CLINEA 0000H 0001H 00F7H 0002H 0016H
	mov	er0,	#0 
	st	er0,	NEAR _fly_param+08h

;;	fly_param.current_time = 0;
CLINEA 0000H 0001H 00F8H 0002H 001CH
	st	er0,	NEAR _fly_param
	st	er0,	NEAR _fly_param+02h

;;	fly_param.last_recv_time = 0;
CLINEA 0000H 0001H 00F9H 0002H 001EH
	st	er0,	NEAR _fly_param+04h
	st	er0,	NEAR _fly_param+06h

;;	fly_param.signal_check = 0;
CLINEA 0000H 0001H 00FAH 0002H 001CH
	st	er0,	NEAR _fly_param+0ah

;;	fly_param.flight_permission = false;
CLINEA 0000H 0001H 00FBH 0002H 0025H
	st	r0,	NEAR _fly_param+0ch

;;	Serial.begin(115200);
CLINEA 0000H 0001H 00FEH 0002H 0016H
	mov	r1,	#0c2h
	mov	er2,	#1 
	l	er4,	NEAR _Serial
	bl	er4

;;	pinMode(BLUE_LED, OUTPUT);
CLINEA 0000H 0001H 0101H 0002H 001BH
	mov	r1,	#01h
	mov	r0,	#01ah
	bl	_pinMode

;;	digitalWrite(BLUE_LED, HIGH);
CLINEA 0000H 0001H 0102H 0002H 001EH
	mov	r1,	#01h
	mov	r0,	#01ah
	bl	_digitalWrite

;;	digitalWrite(MOTOR_PWM, LOW);
CLINEA 0000H 0001H 0105H 0002H 001EH
	mov	r1,	#00h
	mov	r0,	#02h
	bl	_digitalWrite

;;	digitalWrite(MOTOR_PS, HIGH);
CLINEA 0000H 0001H 0106H 0002H 001EH
	mov	r1,	#01h
	mov	r0,	#011h
	bl	_digitalWrite

;;	pinMode(MOTOR_PWM, LOW);
CLINEA 0000H 0001H 0108H 0002H 0019H
	mov	r1,	#00h
	mov	r0,	#02h
	bl	_pinMode

;;	pinMode(MOTOR_PS, HIGH);
CLINEA 0000H 0001H 0109H 0002H 0019H
	mov	r1,	#01h
	mov	r0,	#011h
	bl	_pinMode

;;	level1.ControlValue = 0;
CLINEA 0000H 0001H 010CH 0002H 0019H
	mov	er0,	#0 
	st	er0,	NEAR _level1
	st	er0,	NEAR _level1+02h

;;	level2.ControlValue = 0;
CLINEA 0000H 0001H 010DH 0002H 0019H
	st	er0,	NEAR _level2
	st	er0,	NEAR _level2+02h

;;	servo.ControlValue = 0;
CLINEA 0000H 0001H 010EH 0002H 0018H
	st	er0,	NEAR _servo
	st	er0,	NEAR _servo+02h

;;	yaw.ControlValue = 0;
CLINEA 0000H 0001H 010FH 0002H 0016H
	st	er0,	NEAR _yaw
	st	er0,	NEAR _yaw+02h

;;	hsv.init(2,24000);	//servo
CLINEA 0000H 0001H 0111H 0002H 001BH
	mov	r2,	#0c0h
	mov	r3,	#05dh
	mov	r0,	#02h
	l	er4,	NEAR _hsv
	bl	er4

;;	hsv.attach(0,6);
CLINEA 0000H 0001H 0112H 0002H 0011H
	mov	r1,	#06h
	mov	r0,	#00h
	l	er2,	NEAR _hsv+02h
	bl	er2

;;	hsv.attach(1,7);
CLINEA 0000H 0001H 0113H 0002H 0011H
	mov	r1,	#07h
	mov	r0,	#01h
	l	er2,	NEAR _hsv+02h
	bl	er2

;;	hsv.write(0,(unsigned short)map(0L,-512L,511L,900L,1900L));
CLINEA 0000H 0001H 0114H 0002H 003CH
	l	er8,	NEAR _hsv+0ch
	mov	r0,	#06ch
	mov	r1,	#07h
	mov	er2,	#0 
	push	xr0
	mov	r0,	#084h
	mov	r1,	#03h
	push	xr0
	mov	r0,	#0ffh
	mov	r1,	#01h
	push	xr0
	mov	r0,	#00h
	mov	r1,	#0feh
	mov	er2,	#-1
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	bl	_map
	add	sp,	#16
	mov	er2,	er0
	mov	r0,	#00h
	bl	er8

;;	hsv.write(1,1);
CLINEA 0000H 0001H 0115H 0002H 0010H
	mov	er2,	#1 
	mov	r0,	#01h
	l	er4,	NEAR _hsv+0ch
	bl	er4

;;	hsv.start(); 
CLINEA 0000H 0001H 0116H 0002H 000EH
	l	er0,	NEAR _hsv+06h
	bl	er0

;;	hhb.init(3,1023);	//DCmotor1
CLINEA 0000H 0001H 0118H 0002H 001DH
	mov	r2,	#0ffh
	mov	r3,	#03h
	mov	r0,	#03h
	l	er4,	NEAR _hhb
	bl	er4

;;	hhb.attach(3,9,3);
CLINEA 0000H 0001H 0119H 0002H 0013H
	mov	r2,	#03h
	mov	r1,	#09h
	mov	r0,	#03h
	l	er4,	NEAR _hhb+02h
	bl	er4

;;	hhb.write(3,0L);
CLINEA 0000H 0001H 011BH 0002H 0011H
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	mov	r0,	#03h
	l	er2,	NEAR _hhb+0ch
	bl	er2
	add	sp,	#4 

;;	hhb.start(3);
CLINEA 0000H 0001H 011CH 0002H 000EH
	mov	r0,	#03h
	l	er2,	NEAR _hhb+06h
	bl	er2

;;	hhb.init(1,1023);	//yaw
CLINEA 0000H 0001H 011EH 0002H 0018H
	mov	r2,	#0ffh
	mov	r3,	#03h
	mov	r0,	#01h
	l	er4,	NEAR _hhb
	bl	er4

;;	hhb.attach(1,4,5);
CLINEA 0000H 0001H 011FH 0002H 0013H
	mov	r2,	#05h
	mov	r1,	#04h
	mov	r0,	#01h
	l	er4,	NEAR _hhb+02h
	bl	er4

;;	hhb.write(1,0L);
CLINEA 0000H 0001H 0120H 0002H 0011H
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	mov	r0,	#01h
	l	er2,	NEAR _hhb+0ch
	bl	er2
	add	sp,	#4 

;;	hhb.start(1);
CLINEA 0000H 0001H 0121H 0002H 000EH
	mov	r0,	#01h
	l	er2,	NEAR _hhb+06h
	bl	er2

;;	hhb.init(2,1023);	//DCmotor2
CLINEA 0000H 0001H 0123H 0002H 001DH
	mov	r2,	#0ffh
	mov	r3,	#03h
	mov	r0,	#02h
	l	er4,	NEAR _hhb
	bl	er4

;;	hhb.attach(2,16,8);
CLINEA 0000H 0001H 0124H 0002H 0014H
	mov	r2,	#08h
	mov	r1,	#010h
	mov	r0,	#02h
	l	er4,	NEAR _hhb+02h
	bl	er4

;;	hhb.write(2,0L);
CLINEA 0000H 0001H 0126H 0002H 0011H
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	mov	r0,	#02h
	l	er2,	NEAR _hhb+0ch
	bl	er2
	add	sp,	#4 

;;	hhb.start(2);
CLINEA 0000H 0001H 0127H 0002H 000EH
	mov	r0,	#02h
	l	er2,	NEAR _hhb+06h
	bl	er2

;;	Wire.begin();
CLINEA 0000H 0001H 012AH 0002H 000EH
	l	er0,	NEAR _Wire
	bl	er0

;;	rc = kxg03.sync_init(KXG03_DEVICE_ADDRESS_4E, KXG03_ODR_25HZ,kxg03_isr);
CLINEA 0000H 0000H 012BH 0002H 0049H
	mov	r2,	#BYTE1 OFFSET _kxg03_isr
	mov	r3,	#BYTE2 OFFSET _kxg03_isr
	mov	r1,	#05h
	mov	r0,	#04eh
	l	er4,	NEAR _kxg03+02h
	bl	er4

;;	kxg03.angle_init(KXG03_MODE_PR | KXG03_MODE_KALMAN ,3,2,1,2,-3,-1);
CLINEA 0000H 0001H 012FH 0002H 0044H
	mov	r0,	#0ffh
	push	r0
	mov	r0,	#0fdh
	push	r0
	mov	r0,	#02h
	push	r0
	mov	r3,	#01h
	mov	r2,	#02h
	mov	r1,	#03h
	mov	r0,	#011h
	l	er4,	NEAR _kxg03+016h
	bl	er4
	add	sp,	#6 

;;	kxg03.set_acc_out(true);
CLINEA 0000H 0001H 0130H 0002H 0019H
	mov	r0,	#01h
	l	er2,	NEAR _kxg03+01ch
	bl	er2

;;	kxg03.set_gyro_out(true);
CLINEA 0000H 0001H 0131H 0002H 001AH
	mov	r0,	#01h
	l	er2,	NEAR _kxg03+01eh
	bl	er2

;;	kxg03.set_kalman_out(true);
CLINEA 0000H 0001H 0132H 0002H 001CH
	mov	r0,	#01h
	l	er2,	NEAR _kxg03+01ah
	bl	er2

;;	kxg03.set_deg_out(true);
CLINEA 0000H 0001H 0133H 0002H 0019H
	mov	r0,	#01h
	l	er2,	NEAR _kxg03+020h
	bl	er2

;;	msg = SubGHz.init();
CLINEA 0000H 0000H 0137H 0002H 0015H
	l	er0,	NEAR _SubGHz
	bl	er0

;;	if(msg != SUBGHZ_OK){
CLINEA 0000H 0001H 0138H 0002H 0016H
	mov	er0,	er0
	beq	_$L37
CBLOCK 66 3 312

;;		SubGHz.msgOut(msg);
CLINEA 0000H 0001H 0139H 0003H 0015H
	l	er2,	NEAR _SubGHz+022h
	bl	er2

;;		while(1){}
CLINEA 0000H 0000H 013AH 0003H 000CH
_$L41 :
CBLOCK 66 4 314
CBLOCKEND 66 4 314
	bal	_$L41
CBLOCKEND 66 3 315

;;	}
CLINEA 0000H 0000H 013BH 0002H 0002H
_$L37 :

;;	SubGHz.setMyAddress(SUBGHZ_MYADDR);
CLINEA 0000H 0001H 013EH 0002H 0024H
	mov	er0,	#3 
	l	er2,	NEAR _SubGHz+01eh
	bl	er2

;;	SubGHz.setBroadcastEnb(false);
CLINEA 0000H 0001H 013FH 0002H 001FH
	mov	r0,	#00h
	l	er2,	NEAR _SubGHz+014h
	bl	er2

;; 	SubGHz.setAckReq(false);
CLINEA 0000H 0001H 0140H 0003H 001AH
	mov	r0,	#00h
	l	er2,	NEAR _SubGHz+012h
	bl	er2

;;	msg = SubGHz.begin(SUBGHZ_CH, SUBGHZ_PANID, SUBGHZ_100KBPS, SUBGHZ_PWR_20MW);
CLINEA 0000H 0000H 0143H 0002H 004EH
	mov	er0,	#20
	push	er0
	mov	r0,	#064h
	push	er0
	mov	r2,	#09h
	mov	r3,	#08h
	mov	r0,	#01ch
	l	er4,	NEAR _SubGHz+04h
	bl	er4
	add	sp,	#4 

;;	if(msg != SUBGHZ_OK){
CLINEA 0000H 0001H 0144H 0002H 0016H
	mov	er0,	er0
	beq	_$L43
CBLOCK 66 5 324

;;		SubGHz.msgOut(msg);
CLINEA 0000H 0001H 0145H 0003H 0015H
	l	er2,	NEAR _SubGHz+022h
	bl	er2

;;		while(1){}
CLINEA 0000H 0000H 0146H 0003H 000CH
_$L47 :
CBLOCK 66 6 326
CBLOCKEND 66 6 326
	bal	_$L47
CBLOCKEND 66 5 327

;;	}
CLINEA 0000H 0000H 0147H 0002H 0002H
_$L43 :

;;	SubGHz.getSendMode(&param);
CLINEA 0000H 0001H 014AH 0002H 001CH
	mov	er0,	fp
	add	er0,	#-10
	l	er2,	NEAR _SubGHz+026h
	bl	er2

;;	param.addrType = 4;
CLINEA 0000H 0001H 014BH 0002H 0014H
	mov	r0,	#04h
	st	r0,	_param$4[fp]

;;	SubGHz.setSendMode(&param);
CLINEA 0000H 0001H 014CH 0002H 001CH
	mov	er0,	fp
	add	er0,	#-10
	l	er2,	NEAR _SubGHz+024h
	bl	er2

;;	msg = SubGHz.rxEnable(NULL);
CLINEA 0000H 0000H 014FH 0002H 001DH
	mov	er0,	#0 
	l	er2,	NEAR _SubGHz+0eh
	bl	er2

;;	if(msg != SUBGHZ_OK){
CLINEA 0000H 0001H 0150H 0002H 0016H
	mov	er0,	er0
	beq	_$L49
CBLOCK 66 7 336

;;		SubGHz.msgOut(msg);
CLINEA 0000H 0001H 0151H 0003H 0015H
	l	er2,	NEAR _SubGHz+022h
	bl	er2

;;		while(1){}
CLINEA 0000H 0000H 0152H 0003H 000CH
_$L53 :
CBLOCK 66 8 338
CBLOCKEND 66 8 338
	bal	_$L53
CBLOCKEND 66 7 339

;;	}
CLINEA 0000H 0000H 0153H 0002H 0002H
_$L49 :
CBLOCKEND 66 2 344

;;}
CLINEA 0000H 0000H 0158H 0001H 0001H
	pop	er4
	pop	er8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 66 1 344
CFUNCTIONEND 66


	rseg $$loop$WiFly_v3
CFUNCTION 67

_loop	:
CBLOCK 67 1 347

;;void loop() {
CLINEA 0000H 0001H 015BH 0001H 000DH
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 67 2 347
CRET 0000H

;;	Flight_Preparation_Mode();
CLINEA 0000H 0001H 015CH 0002H 001BH
	bl	_Flight_Preparation_Mode

;;	Flight_Mode();
CLINEA 0000H 0001H 015DH 0002H 000FH
	bl	_Flight_Mode
CBLOCKEND 67 2 350

;;}
CLINEA 0000H 0001H 015EH 0001H 0001H
	pop	pc
CBLOCKEND 67 1 350
CFUNCTIONEND 67


	rseg $$NVARWiFly_v3
_$ST0 :
	ds	040h
	public _Motor_Sets
	public _old
	public _Update_Motor_Data
	public _Update_Posture_Data_From_Sensor
	public _Time_Update
	public _current
	public _Emargency_Stop
	public _loop
	public _kxg03_irq
	public _Flight_Mode
	public _Flight_Preparation_Mode
	public _setup
	public _Signal_Check
	_measurement_timing_budget_us comm data 04h #00h
	_address comm data 01h #00h
	_timeout_start_ms comm data 02h #00h
	_mac comm data 020h #00h
	_rx_data comm data 0100h #00h
	_tx_data comm data 0100h #00h
	_yaw comm data 08h #00h
	_rx comm data 04h #00h
	_io_timeout comm data 02h #00h
	_level1 comm data 08h #00h
	_level2 comm data 08h #00h
	_pitch comm data 08h #00h
	_stop_variable comm data 01h #00h
	_mode comm data 08h #00h
	_servo comm data 08h #00h
	_did_timeout comm data 01h #00h
	_last_status comm data 01h #00h
	_slope comm data 08h #00h
	extrn table near : _kxg03
	extrn table near : _hhb
	extrn code near : _millis
	extrn table near : _hsv
	extrn code near : _map
	extrn code near : _wait_event
	extrn code near : _digitalWrite
	extrn table near : _Print
	extrn table near : _Serial
	extrn table near : _Wire
	extrn code near : _pinMode
	extrn table near : _SubGHz
	extrn code near : _main

	rseg $$NINITTAB
	db	00h
	align
	dw	00h
	dw	00h

	rseg $$TAB$$S2$WiFly_v3
$$S2 :
	DB	"Emargency Stop!", 00H

	rseg $$TAB$$S12$WiFly_v3
$$S12 :
	DB	"STX", 00H

	rseg $$TAB$$S13$WiFly_v3
$$S13 :
	DB	",", 00H

	rseg $$TAB$$S14$WiFly_v3
$$S14 :
	DB	"ETX", 00H

	rseg $$TAB$$S25$WiFly_v3
$$S25 :
	DB	"ready to flight...", 00H

	rseg $$TAB$$S27$WiFly_v3
$$S27 :
	DB	"level1 is not 0!", 00H

	rseg $$TAB$$S29$WiFly_v3
$$S29 :
	DB	"preparation error!", 00H

	rseg $$NINITVAR
_kxg03_irq :
	ds	01h
	align
_current :
	ds	02h
_old :
	ds	02h

	rseg $$NVARWiFly_v3
_fly_param :
	ds	0eh
	extrn code : __fcmpu8sw
	extrn code : __ftolu8sw
	extrn code : __ftodu8sw
	extrn code : __dsubu8sw
	extrn code : __dildu8sw
	extrn code : __fuldu8sw

	end
