;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : lazurite_system.c

	type (ML620504F) 
	model small, near
	$$NVARlazurite_system segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$HALT_Until_Event$lazurite_system segment code 2h #0h
	$$clk_block_ctrl_init$lazurite_system segment code 2h #0h
	$$delay_isr$lazurite_system segment code 2h #0h
	$$delay_long$lazurite_system segment code 2h #0h
	$$delay_microseconds$lazurite_system segment code 2h #0h
	$$halt_event_isr$lazurite_system segment code 2h #0h
	$$init$lazurite_system segment code 2h #0h
	$$init_timer$lazurite_system segment code 2h #0h
	$$interrupts$lazurite_system segment code 2h #0h
	$$isr_sys_timer$lazurite_system segment code 2h #0h
	$$lazurite_gpio_init$lazurite_system segment code 2h #0h
	$$micros$lazurite_system segment code 2h #0h
	$$millis$lazurite_system segment code 2h #0h
	$$noInterrupts$lazurite_system segment code 2h #0h
	$$set_timer0_function$lazurite_system segment code 2h #0h
	$$sleep_long$lazurite_system segment code 2h #0h
	$$start_long_timer$lazurite_system segment code 2h #0h
	$$stop_long_timer$lazurite_system segment code 2h #0h
	$$vls_oneshot_check$lazurite_system segment code 2h #0h
	$$voltage_check$lazurite_system segment code 2h #0h
	$$wait_event$lazurite_system segment code 2h #0h
	$$wait_event_timeout$lazurite_system segment code 2h #0h
	$$watch_dog_isr$lazurite_system segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 03H 0000H "start_long_timer" 08H 02H 7AH 01H 81H 10H 00H 00H 07H
CGLOBAL 01H 02H 0000H "millis" 08H 02H 4FH 00H 81H 12H 00H 00H 02H
CGLOBAL 01H 03H 0000H "wait_event" 08H 02H 53H 00H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "halt_event_isr" 08H 02H 80H 01H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "init_timer" 08H 02H 78H 01H 81H 04H 00H 00H 07H
CSGLOBAL 03H 0000H "stop_long_timer" 08H 02H 7BH 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "HALT_Until_Event" 08H 02H 4AH 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "set_timer0_function" 08H 02H 57H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "init" 08H 02H 4BH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 02H 0000H "voltage_check" 08H 02H 58H 00H 81H 04H 00H 00H 00H
CGLOBAL 01H 02H 0000H "wait_event_timeout" 08H 02H 55H 00H 83H 12H 00H 00H 02H
CSGLOBAL 03H 0000H "lazurite_gpio_init" 08H 02H 77H 01H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "watch_dog_isr" 08H 02H 76H 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "vls_oneshot_check" 08H 02H 95H 01H 81H 04H 00H 00H 00H
CGLOBAL 01H 03H 0000H "delay_microseconds" 08H 02H 4EH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "interrupts" 08H 02H 51H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "delay_isr" 08H 02H 79H 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "isr_sys_timer" 08H 02H 74H 01H 81H 04H 00H 00H 07H
CGLOBAL 01H 03H 0000H "noInterrupts" 08H 02H 52H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "clk_block_ctrl_init" 08H 02H 75H 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 02H 0000H "micros" 08H 02H 50H 00H 81H 12H 00H 00H 02H
CGLOBAL 01H 03H 0000H "delay_long" 08H 02H 4CH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "sleep_long" 08H 02H 4DH 00H 81H 02H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0020H 0002H 00000006H "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "target_h" 02H 00H 02H
CSTRUCTMEM 42H 00000002H 00000004H "target_l" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001FH 0005H 00000008H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "max_length" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "wr_p" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "rd_p" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "length" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001DH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 61H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 62H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 63H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 64H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 65H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 66H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 67H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 001EH 0008H "_Notag"
CENUMMEM 00000000H "TM_CH0"
CENUMMEM 00000001H "TM_CH1"
CENUMMEM 00000002H "TM_CH2"
CENUMMEM 00000003H "TM_CH3"
CENUMMEM 00000004H "TM_CH4"
CENUMMEM 00000005H "TM_CH5"
CENUMMEM 00000006H "TM_CH6"
CENUMMEM 00000007H "TM_CH7"
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "ptrdiff_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "FIFO_CTRL" 04H 00H 05H 1FH 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "TM_CH" 04H 00H 0AH 1EH 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CSGLOBAL 42H 0004H "sys_timer_count" 02H 00H 02H
CSGLOBAL 43H 0006H "delay_time" 04H 00H 05H 20H 00H
CGLOBAL 02H 42H 0001H "subghz_api_status" 02H 00H 00H
CSGLOBAL 42H 0002H "halt_event_flag" 02H 00H 08H
CGLOBAL 02H 43H 0001H "uartf_tx_sending" 02H 00H 00H
CSGLOBAL 43H 0002H "millis_timer_func" 0AH 03H 00H 02H 88H 01H 00H 00H 00H 00H 07H
CGLOBAL 02H 43H 0001H "uart_tx_sending" 02H 00H 00H
CSGLOBAL 42H 0001H "delay_flag" 02H 00H 00H
CFILE 0001H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0002H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0003H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0004H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0005H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0006H 00000042H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\lazurite.h"
CFILE 0007H 0000002BH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\analogio.h"
CFILE 0008H 0000002BH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\digitalio.h"
CFILE 0009H 00000041H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\pin_assignment.h"
CFILE 000AH 00000051H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\lazurite_system.h"
CFILE 000BH 00000045H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\serial.h"
CFILE 000CH 0000002DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\print.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\wiring_shift.h"
CFILE 000EH 0000002CH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\wiring_pulse.h"
CFILE 000FH 0000002DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\WInterrupts.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\WMath.h"
CFILE 0011H 00000031H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\flash.h"
CFILE 0012H 0000002DH "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\tone.h"
CFILE 0013H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0014H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0015H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0016H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0017H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0018H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 0019H 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001AH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001BH 00000040H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\wdt\\wdt.h"
CFILE 001CH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\common\\rdwr_reg.h"
CFILE 001DH 00000035H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_timer.h"
CFILE 001EH 0000006FH "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_irq.h"
CFILE 001FH 00000331H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\irq\\irq.h"
CFILE 0020H 00000057H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_i2c.h"
CFILE 0021H 0000001EH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stddef.h"
CFILE 0022H 00000053H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_uart.h"
CFILE 0023H 00000028H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_gpio.h"
CFILE 0024H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\lp\\lp_manage.h"
CFILE 0025H 000000C8H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\clock\\clock.h"
CFILE 0000H 00000244H "C:\\LAZURI~1\\hardware\\lazurite_subghz\\lazurite\\lazurite_system.c"

	rseg $$init$lazurite_system
CFUNCTION 75

_init	:
CBLOCK 75 1 81

;;{
CLINEA 0000H 0001H 0051H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 75 2 81
CRET 0000H

;;    __DI();
CLINEA 0000H 0001H 0053H 0005H 000BH
	di

;;	write_reg8(BLKCON01,0x0373);
CLINEA 0000H 0001H 0054H 0002H 001DH
	mov	r0,	#073h
	mov	r1,	#00h
	st	er0,	0f068h

;;	clk_setLsclk( CLK_XTM_CRYSTAL );    /* crystal/ceramic oscillation */
CLINEA 0000H 0001H 0056H 0002H 0046H
	mov	r0,	#01h
	st	r0,	0f004h

;;	while( (clk_getClkStatus() & FSTAT_LOSCS) != 0 ) {}
CLINEA 0000H 0000H 0058H 0002H 0034H
_$L3 :
CBLOCK 75 3 88
CBLOCKEND 75 3 88
	tb	0f00ah.2
	bne	_$L3

;;	clk_disHsclk();                             // stop HSCLK oscillation
CLINEA 0000H 0001H 005AH 0002H 0046H
	rb	0f003h.1
CBLOCK 75 4 91

;;	clk_setHsclk( (unsigned char)(CLK_SYSC_OSCLK | CLK_OSCM_RC | CLK_OUTC_OSCLK | CLK_LOSCON_DIS), CLK_LOSCON_DIS ); /* set HSCLK */		// BUG620Q504
CLINEA 0000H 0000H 005BH 0002H 0090H
	mov	r0,	#010h
	st	r0,	0f002h
	rb	0f003h.3
CBLOCKEND 75 4 91

;;	clk_enaHsclk();                             // start HSCLK oscillation
CLINEA 0000H 0001H 005CH 0002H 0047H
	sb	0f003h.1

;;	clk_setSysclk( CLK_SYSCLK_HSCLK );          // Choose HSCLK
CLINEA 0000H 0001H 005EH 0002H 003CH
	sb	0f003h.0

;;	clk_block_ctrl_init();				/* Block Control            */
CLINEA 0000H 0001H 0060H 0002H 0039H
	bl	_clk_block_ctrl_init

;;    irq_init();                         /* Interrupt                */
CLINEA 0000H 0001H 0063H 0005H 0046H
	bl	_irq_init

;;	irq_sethandler(IRQ_NO_WDTINT,watch_dog_isr);
CLINEA 0000H 0001H 0066H 0002H 002DH
	mov	r2,	#BYTE1 OFFSET _watch_dog_isr
	mov	r3,	#BYTE2 OFFSET _watch_dog_isr
	mov	r0,	#00h
	bl	_irq_sethandler

;;	wdt_init( WDTMOD_WDT1 | WDTMOD_WDT0);
CLINEA 0000H 0001H 0067H 0002H 0026H
	mov	r0,	#03h
	st	r0,	0f00fh

;;	wdt_disHaltCount();	
CLINEA 0000H 0001H 0068H 0002H 0015H
	rb	0f00fh.7

;;	lazurite_gpio_init();
CLINEA 0000H 0001H 006BH 0002H 0016H
	bl	_lazurite_gpio_init

;;	init_timer();
CLINEA 0000H 0001H 006EH 0002H 000EH
	bl	_init_timer

;;	rst_interrupts();
CLINEA 0000H 0001H 0071H 0002H 0012H
	bl	_rst_interrupts

;;	__EI();
CLINEA 0000H 0001H 0072H 0002H 0008H
	ei
CBLOCKEND 75 2 116

;;}
CLINEA 0000H 0000H 0074H 0001H 0001H
	pop	pc
CBLOCKEND 75 1 116
CFUNCTIONEND 75


	rseg $$lazurite_gpio_init$lazurite_system
CFUNCTION 375

_lazurite_gpio_init	:
CBLOCK 375 1 119

;;{
CLINEA 0000H 0001H 0077H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 375 2 119
CRET 0000H

;;	write_reg8(P0D,0x10);
CLINEA 0000H 0001H 0079H 0002H 0016H
	mov	r0,	#010h
	st	r0,	0f210h

;;	write_reg8(P1D,0x01);
CLINEA 0000H 0001H 007AH 0002H 0016H
	mov	r0,	#01h
	st	r0,	0f218h

;;	write_reg8(P2D,0x00);
CLINEA 0000H 0001H 007BH 0002H 0016H
	mov	r0,	#00h
	st	r0,	0f220h

;;	write_reg8(P3D,0x00);
CLINEA 0000H 0001H 007CH 0002H 0016H
	st	r0,	0f228h

;;	write_reg8(P4D,0x00);
CLINEA 0000H 0001H 007DH 0002H 0016H
	st	r0,	0f230h

;;	write_reg8(P5D,0x42);
CLINEA 0000H 0001H 007EH 0002H 0016H
	mov	r0,	#042h
	st	r0,	0f238h

;;	write_reg8(P0DIR,0x00);
CLINEA 0000H 0001H 007FH 0002H 0018H
	mov	r0,	#00h
	st	r0,	0f211h

;;	write_reg16(P0CON,0x3535);
CLINEA 0000H 0001H 0080H 0002H 001BH
	mov	r0,	#035h
	mov	r1,	#035h
	st	er0,	0f212h

;;	write_reg16(P0MOD,0x0500);
CLINEA 0000H 0001H 0081H 0002H 001BH
	mov	r0,	#00h
	mov	r1,	#05h
	st	er0,	0f214h

;;	write_reg8(P1DIR,0x10);
CLINEA 0000H 0001H 0082H 0002H 0018H
	mov	r0,	#010h
	st	r0,	0f219h

;;	write_reg16(P1CON,0x0303);
CLINEA 0000H 0001H 0083H 0002H 001BH
	mov	r0,	#03h
	mov	r1,	#03h
	st	er0,	0f21ah

;;	write_reg8(P2DIR,0x00);
CLINEA 0000H 0001H 0084H 0002H 0018H
	mov	r0,	#00h
	st	r0,	0f221h

;;	write_reg16(P2CON,0x0000);
CLINEA 0000H 0001H 0085H 0002H 001BH
	mov	er0,	#0 
	st	er0,	0f222h

;;	write_reg16(P2MOD,0x0000);
CLINEA 0000H 0001H 0086H 0002H 001BH
	st	er0,	0f224h

;;	write_reg8(P3DIR,0x00);
CLINEA 0000H 0001H 0087H 0002H 0018H
	st	r0,	0f229h

;;	write_reg16(P3CON,0x0000);
CLINEA 0000H 0001H 0088H 0002H 001BH
	st	er0,	0f22ah

;;	write_reg16(P3MOD,0x0000);
CLINEA 0000H 0001H 0089H 0002H 001BH
	st	er0,	0f22ch

;;	write_reg8(P4DIR,0x80);
CLINEA 0000H 0001H 008AH 0002H 0018H
	mov	r0,	#080h
	st	r0,	0f231h

;;	write_reg16(P4CON,0x0303);
CLINEA 0000H 0001H 008BH 0002H 001BH
	mov	r0,	#03h
	mov	r1,	#03h
	st	er0,	0f232h

;;	write_reg16(P4MOD,0x0003);
CLINEA 0000H 0001H 008CH 0002H 001BH
	mov	er0,	#3 
	st	er0,	0f234h

;;	write_reg8(P5DIR,0x00);
CLINEA 0000H 0001H 008DH 0002H 0018H
	mov	r0,	#00h
	st	r0,	0f239h

;;	write_reg16(P5CON,0x0000);
CLINEA 0000H 0001H 008EH 0002H 001BH
	st	er0,	0f23ah

;;	write_reg16(P5MOD,0x0000);
CLINEA 0000H 0001H 008FH 0002H 001BH
	st	er0,	0f23ch

;;	drv_pinMode(11,OUTPUT);			//PWR LED ON
CLINEA 0000H 0001H 0093H 0002H 0027H
	mov	r1,	#01h
	mov	r0,	#0bh
	bl	_drv_pinMode

;;	drv_digitalWrite(11,LOW);
CLINEA 0000H 0001H 0094H 0002H 001AH
	mov	r1,	#00h
	mov	r0,	#0bh
	bl	_drv_digitalWrite
CBLOCKEND 375 2 150

;;}
CLINEA 0000H 0001H 0096H 0001H 0001H
	pop	pc
CBLOCKEND 375 1 150
CFUNCTIONEND 375


	rseg $$halt_event_isr$lazurite_system
CFUNCTION 384

_halt_event_isr	:
CBLOCK 384 1 154

;;{
CLINEA 0000H 0001H 009AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 384 2 154

;;	halt_event_flag=true;
CLINEA 0000H 0001H 009BH 0002H 0016H
	mov	er0,	#1 
	st	er0,	NEAR _halt_event_flag
CBLOCKEND 384 2 156

;;}
CLINEA 0000H 0001H 009CH 0001H 0001H
	rt
CBLOCKEND 384 1 156
CFUNCTIONEND 384


	rseg $$HALT_Until_Event$lazurite_system
CFUNCTION 74

_HALT_Until_Event	:
CBLOCK 74 1 158

;;{
CLINEA 0000H 0001H 009EH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	er4
	mov	er10,	er2
	mov	er8,	er0
CBLOCK 74 2 158
CRET 0006H
CARGUMENT 47H 0002H 0028H "halt_event" 02H 00H 01H
CARGUMENT 46H 0002H 0029H "timeout" 02H 00H 01H
CLOCAL 46H 0001H 0018H 0002H "cont" 02H 00H 00H

;;	cont = true;
CLINEA 0000H 0001H 00A0H 0002H 000DH
	mov	r4,	#01h	;; _lcont$0

;;	halt_event_flag = false;
CLINEA 0000H 0001H 00A1H 0002H 0019H
	mov	er0,	#0 
	st	er0,	NEAR _halt_event_flag

;;	if(timeout)
CLINEA 0000H 0001H 00A3H 0002H 000CH
	mov	er2,	er2
	beq	_$L12
CBLOCK 74 3 164

;;		timer_16bit_set(6,0xE8,timeout,halt_event_isr);
CLINEA 0000H 0001H 00A5H 0003H 0031H
	mov	r0,	#BYTE1 OFFSET _halt_event_isr
	mov	r1,	#BYTE2 OFFSET _halt_event_isr
	push	er0
	mov	r1,	#0e8h
	mov	r0,	#06h
	bl	_timer_16bit_set
	add	sp,	#2 

;;		timer_16bit_start(6);
CLINEA 0000H 0001H 00A6H 0003H 0017H
	mov	r0,	#06h
	bl	_timer_16bit_start
CBLOCKEND 74 3 167

;;	}
CLINEA 0000H 0000H 00A7H 0002H 0002H
_$L12 :
CBLOCK 74 4 169
CLOCAL 47H 0001H 0016H 0004H "status" 02H 00H 00H

;;		lp_setHaltMode();
CLINEA 0000H 0001H 00ABH 0003H 0013H
	bl	_lp_setHaltMode

;;		i2c_isr(0);
CLINEA 0000H 0001H 00ADH 0003H 000DH
	mov	r0,	#00h
	bl	_i2c_isr

;;		i2c_isr(1);
CLINEA 0000H 0001H 00AEH 0003H 000DH
	mov	r0,	#01h
	bl	_i2c_isr
CBLOCK 74 5 176

;;		switch(halt_event)
CLINEA 0000H 0001H 00AFH 0003H 0014H
	cmp	r9,	#00h
	bne	_$L22
	cmp	r8,	#01h
	beq	_$L23

;;		switch(halt_event)
CLINEA 0000H 0000H 00AFH 0003H 0014H
	cmp	r8,	#02h
	beq	_$L37

;;		default:
CLINEA 0000H 0001H 00C7H 0003H 000AH
_$L22 :

;;			if(halt_event_flag) {
CLINEA 0000H 0001H 00C8H 0004H 0018H
	l	er0,	NEAR _halt_event_flag
	beq	_$L51
CBLOCK 74 10 200

;;				cont = false;
CLINEA 0000H 0001H 00C9H 0005H 0011H
	mov	r4,	#00h	;; _lcont$0
CBLOCKEND 74 10 202

;;			}
CLINEA 0000H 0000H 00CAH 0004H 0004H
_$L51 :
CBLOCKEND 74 5 204

;;		wdt_clear();
CLINEA 0000H 0001H 00CDH 0003H 000EH
	bl	_wdt_clear
CBLOCKEND 74 4 206

;;	while(cont)
CLINEA 0000H 0000H 00A8H 0000H 0000H
	cmp	r4,	#00h
	bne	_$L12

;;	if(timeout)
CLINEA 0000H 0001H 00CFH 0002H 000CH
	mov	er10,	er10
	beq	_$L53

;;		timer_16bit_stop(6);
CLINEA 0000H 0001H 00D0H 0003H 0016H
	mov	r0,	#06h
	bl	_timer_16bit_stop
_$L53 :
CBLOCKEND 74 2 210

;;}
CLINEA 0000H 0000H 00D2H 0001H 0001H
	pop	er4
	pop	xr8
	pop	pc

;;		case HALT_I2C1_END:
CLINEA 0000H 0001H 00B1H 0003H 0015H
_$L23 :

;;			status=i2c_get_status(1);
CLINEA 0000H 0000H 00B2H 0004H 001CH
	mov	r0,	#01h
	bl	_i2c_get_status
	mov	r2,	r0	;; _lstatus$2

;;			if((halt_event_flag)||((!timeout)&&(status == I2C_MODE_ERROR)))
CLINEA 0000H 0000H 00B3H 0004H 0042H
	l	er0,	NEAR _halt_event_flag
	bne	_$L25
	mov	er10,	er10
	bne	_$L24
	cmp	r2,	#04h
	bne	_$L24
_$L25 :

;;				i2c_force_stop(1);
CLINEA 0000H 0001H 00B5H 0005H 0016H
	mov	r0,	#01h
	bl	_i2c_force_stop

;;			} else if(status < I2C_MODE_ERROR)
CLINEA 0000H 0000H 00B7H 0004H 0025H
	bal	_$L35
_$L24 :
	cmp	r2,	#04h
	bges	_$L51
CBLOCK 74 7 184

;;				cont = false;
CLINEA 0000H 0001H 00B9H 0005H 0011H
CBLOCKEND 74 7 186

;;			}
CLINEA 0000H 0000H 00BAH 0004H 0004H
_$L35 :
	mov	r4,	#00h	;; _lcont$0

;;			break;
CLINEA 0000H 0001H 00BBH 0004H 0009H
	bal	_$L51

;;		case HALT_I2C0_END:
CLINEA 0000H 0001H 00BCH 0003H 0015H
_$L37 :

;;			status=i2c_get_status(0);
CLINEA 0000H 0000H 00BDH 0004H 001CH
	mov	r0,	#00h
	bl	_i2c_get_status
	mov	r2,	r0	;; _lstatus$2

;;			if((halt_event_flag)||((!timeout)&&(status == I2C_MODE_ERROR)))
CLINEA 0000H 0000H 00BEH 0004H 0042H
	l	er0,	NEAR _halt_event_flag
	bne	_$L39
	mov	er10,	er10
	bne	_$L38
	cmp	r2,	#04h
	bne	_$L38
_$L39 :
CBLOCK 74 8 191

;;				i2c_force_stop(0);
CLINEA 0000H 0001H 00C0H 0005H 0016H
	mov	r0,	#00h
	bl	_i2c_force_stop

;;			} else if(status < I2C_MODE_ERROR)
CLINEA 0000H 0000H 00C2H 0004H 0025H
	bal	_$L49
_$L38 :
	cmp	r2,	#04h
	bges	_$L51
CBLOCK 74 9 195

;;				cont = false;
CLINEA 0000H 0001H 00C4H 0005H 0011H
CBLOCKEND 74 9 197

;;			}
CLINEA 0000H 0000H 00C5H 0004H 0004H
_$L49 :
	mov	r4,	#00h	;; _lcont$0

;;			break;
CLINEA 0000H 0001H 00C6H 0004H 0009H
	bal	_$L51
CBLOCKEND 74 8 210
CBLOCKEND 74 1 210
CFUNCTIONEND 74


	rseg $$delay_isr$lazurite_system
CFUNCTION 377

_delay_isr	:
CBLOCK 377 1 213

;;{
CLINEA 0000H 0001H 00D5H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 377 2 213

;;	if(delay_time.target_h == 0)
CLINEA 0000H 0001H 00DCH 0002H 001DH
	l	er0,	NEAR _delay_time
	l	er2,	NEAR _delay_time+02h
	cmp	r0,	#00h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bne	_$L56
CBLOCK 377 3 221

;;		delay_flag = true;
CLINEA 0000H 0001H 00DEH 0003H 0014H
	mov	r0,	#01h
	st	r0,	NEAR _delay_flag
CBLOCKEND 377 3 224
CBLOCKEND 377 2 252

;;}
CLINEA 0000H 0001H 00FCH 0001H 0001H
_$L55 :
	rt

;;	}
CLINEA 0000H 0000H 00E0H 0002H 0002H
_$L56 :

;;	delay_time.target_h--;
CLINEA 0000H 0000H 00E3H 0002H 0017H
	add	er0,	#-1
	addc	r2,	#0ffh
	addc	r3,	#0ffh
	st	er0,	NEAR _delay_time
	st	er2,	NEAR _delay_time+02h

;;	if(delay_time.target_h == 0)
CLINEA 0000H 0001H 00E6H 0002H 001DH
	cmp	r0,	#00h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bne	_$L55
CBLOCK 377 4 231

;;		if((delay_time.target_l == 0) || (TM67C >= delay_time.target_l))
CLINEA 0000H 0001H 00E8H 0003H 0042H
	l	er0,	NEAR _delay_time+04h
	beq	_$L61
	l	er0,	0f316h
	l	er2,	NEAR _delay_time+04h
	cmp	er0,	er2
	blt	_$L60
_$L61 :
CBLOCK 377 5 233

;;			delay_flag = true;
CLINEA 0000H 0001H 00EAH 0004H 0015H
	mov	r0,	#01h
	st	r0,	NEAR _delay_flag

;;			return;
CLINEA 0000H 0001H 00EBH 0004H 000AH
	rt
CBLOCKEND 377 5 236

;;		else
CLINEA 0000H 0000H 00EDH 0003H 0006H
_$L60 :
CBLOCK 377 6 238

;;			T6OST = 1;
CLINEA 0000H 0001H 00EFH 0004H 000DH
	sb	0f326h.7

;;			TM67D = delay_time.target_l;
CLINEA 0000H 0001H 00F0H 0004H 001FH
	st	er2,	0f306h

;;			delay_time.target_l = 0;
CLINEA 0000H 0001H 00F2H 0004H 001BH
	mov	er0,	#0 
	st	er0,	NEAR _delay_time+04h
CBLOCKEND 377 6 243
CBLOCKEND 377 4 244

;;	return;
CLINEA 0000H 0001H 00FBH 0002H 0008H
	rt
CBLOCKEND 377 1 252
CFUNCTIONEND 377


	rseg $$start_long_timer$lazurite_system
CFUNCTION 378

_start_long_timer	:
CBLOCK 378 1 255

;;{
CLINEA 0000H 0001H 00FFH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	er4
	mov	er8,	er0
	mov	er10,	er2
CBLOCK 378 2 255
CRET 0006H
CARGUMENT 46H 0004H 2928H "ms" 02H 00H 02H
CLOCAL 46H 0004H 2726H 0002H "tmp_target_l" 02H 00H 02H

;;	delay_flag = false;
CLINEA 0000H 0001H 0102H 0002H 0014H
	mov	r0,	#00h
	st	r0,	NEAR _delay_flag

;;	tmp_target_l = ((ms % 64000)<<8)/250;
CLINEA 0000H 0001H 0103H 0002H 0026H
	mov	er0,	er8
	push	xr0
	mov	r0,	#00h
	mov	r1,	#0fah
	mov	er2,	#0 
	push	xr0
	bl	__ulmodu8sw
	add	sp,	#4 
	pop	xr0
	mov	r3,	r2
	mov	r2,	r1
	mov	r1,	r0
	mov	r0,	#00h
	push	xr0
	mov	r0,	#0fah
	mov	r1,	#00h
	mov	er2,	#0 
	push	xr0
	bl	__uldivu8sw
	add	sp,	#4 
	pop	xr0
	mov	er4,	er0	;; _ltmp_target_l$0

;;	delay_time.target_l = (unsigned short)tmp_target_l;
CLINEA 0000H 0001H 0104H 0002H 0034H
	st	er0,	NEAR _delay_time+04h

;;	delay_time.target_h = ms / 64000;
CLINEA 0000H 0001H 0105H 0002H 0022H
	push	xr8
	mov	r0,	#00h
	mov	r1,	#0fah
	mov	er2,	#0 
	push	xr0
	bl	__uldivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _delay_time
	st	er2,	NEAR _delay_time+02h

;;	if(delay_time.target_h==0)
CLINEA 0000H 0001H 010DH 0002H 001BH
	cmp	r0,	#00h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bne	_$L69
CBLOCK 378 3 270

;;		timer_16bit_set(6,0xE8,(unsigned short)tmp_target_l,delay_isr);
CLINEA 0000H 0001H 010FH 0003H 0041H
	mov	r0,	#BYTE1 OFFSET _delay_isr
	mov	r1,	#BYTE2 OFFSET _delay_isr
	push	er0
	mov	er2,	er4
	mov	r1,	#0e8h
	mov	r0,	#06h
	bl	_timer_16bit_set
	add	sp,	#2 

;;		delay_time.target_l = 0;
CLINEA 0000H 0001H 0110H 0003H 001AH
	mov	er0,	#0 
	st	er0,	NEAR _delay_time+04h
CBLOCKEND 378 3 273

;;	else
CLINEA 0000H 0001H 0112H 0002H 0005H
	bal	_$L71
_$L69 :
CBLOCK 378 4 275

;;		timer_16bit_set(6,0x68,0xFFFF,delay_isr);
CLINEA 0000H 0001H 0114H 0003H 002BH
	mov	r0,	#BYTE1 OFFSET _delay_isr
	mov	r1,	#BYTE2 OFFSET _delay_isr
	push	er0
	mov	er2,	#-1
	mov	r1,	#068h
	mov	r0,	#06h
	bl	_timer_16bit_set
	add	sp,	#2 
CBLOCKEND 378 4 277

;;	}
CLINEA 0000H 0000H 0115H 0002H 0002H
_$L71 :

;;	timer_16bit_start(6);
CLINEA 0000H 0001H 0118H 0002H 0016H
	mov	r0,	#06h
	bl	_timer_16bit_start
CBLOCKEND 378 2 281

;;}
CLINEA 0000H 0001H 0119H 0001H 0001H
	pop	er4
	pop	xr8
	pop	pc
CBLOCKEND 378 1 281
CFUNCTIONEND 378


	rseg $$stop_long_timer$lazurite_system
CFUNCTION 379

_stop_long_timer	:
CBLOCK 379 1 284

;;{
CLINEA 0000H 0001H 011CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 379 2 284

;;	timer_16bit_stop(6);
CLINEA 0000H 0001H 011DH 0002H 0015H
	mov	r0,	#06h
	b	_timer_16bit_stop
CBLOCKEND 379 2 286
CLINEA 0000H 0001H 011EH 0001H 0001H
CBLOCKEND 379 1 286
CFUNCTIONEND 379


	rseg $$delay_long$lazurite_system
CFUNCTION 76

_delay_long	:
CBLOCK 76 1 289

;;{
CLINEA 0000H 0001H 0121H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 76 2 289
CRET 0000H
CARGUMENT 46H 0004H 2524H "ms" 02H 00H 02H

;;	start_long_timer(ms);
CLINEA 0000H 0001H 0122H 0002H 0016H
	bl	_start_long_timer

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0124H 0001H 0001H
	bal	_$L78

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0124H 0002H 001BH
_$L76 :
CBLOCK 76 3 293

;;		lp_setHaltMode();
CLINEA 0000H 0001H 0126H 0003H 0013H
	bl	_lp_setHaltMode

;;		wdt_clear();
CLINEA 0000H 0001H 0127H 0003H 000EH
	bl	_wdt_clear
CBLOCKEND 76 3 296

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0124H 0001H 0001H
_$L78 :
	l	r0,	NEAR _delay_flag
	beq	_$L76

;;	stop_long_timer();
CLINEA 0000H 0001H 012AH 0002H 0013H
	bl	_stop_long_timer
CBLOCKEND 76 2 300

;;}
CLINEA 0000H 0000H 012CH 0001H 0001H
	pop	pc
CBLOCKEND 76 1 300
CFUNCTIONEND 76


	rseg $$sleep_long$lazurite_system
CFUNCTION 77

_sleep_long	:
CBLOCK 77 1 303

;;{
CLINEA 0000H 0001H 012FH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 77 2 303
CRET 0000H
CARGUMENT 46H 0004H 2524H "ms" 02H 00H 02H

;;	start_long_timer(ms);
CLINEA 0000H 0001H 0130H 0002H 0016H
	bl	_start_long_timer

;;	drv_digitalWrite(11,HIGH);		// PWR LED OFF
CLINEA 0000H 0001H 0133H 0002H 002BH
	mov	r1,	#01h
	mov	r0,	#0bh
	bl	_drv_digitalWrite

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0136H 0001H 0001H
	bal	_$L94

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0136H 0002H 001BH
_$L82 :
CBLOCK 77 3 311

;;		if((uart_tx_sending == true) || (uartf_tx_sending == true) || (subghz_api_status != 0))
CLINEA 0000H 0001H 0139H 0003H 0059H
	l	r0,	NEAR _uart_tx_sending
	cmp	r0,	#01h
	beq	_$L85
	l	r0,	NEAR _uartf_tx_sending
	cmp	r0,	#01h
	beq	_$L85
	l	r0,	NEAR _subghz_api_status
	beq	_$L84
_$L85 :
CBLOCK 77 4 317

;;			lp_setHaltMode();
CLINEA 0000H 0001H 013EH 0004H 0014H
	bl	_lp_setHaltMode

;;			wdt_clear();
CLINEA 0000H 0001H 013FH 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 77 4 320

;;		else
CLINEA 0000H 0001H 0141H 0003H 0006H
	bal	_$L94
_$L84 :
CBLOCK 77 5 322

;;			lp_setHaltHMode();
CLINEA 0000H 0001H 0143H 0004H 0015H
	bl	_lp_setHaltHMode

;;			wdt_clear();
CLINEA 0000H 0001H 0144H 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 77 5 325

;;		}
CLINEA 0000H 0000H 0145H 0003H 0003H
_$L94 :
CBLOCKEND 77 3 326

;;	while(delay_flag == false)
CLINEA 0000H 0000H 0136H 0000H 0000H
	l	r0,	NEAR _delay_flag
	beq	_$L82

;;	stop_long_timer();
CLINEA 0000H 0001H 0147H 0002H 0013H
	bl	_stop_long_timer

;;	drv_digitalWrite(11,LOW);		// PWR LED ON
CLINEA 0000H 0001H 014AH 0002H 0029H
	mov	r1,	#00h
	mov	r0,	#0bh
	bl	_drv_digitalWrite
CBLOCKEND 77 2 333

;;}
CLINEA 0000H 0000H 014DH 0001H 0001H
	pop	pc
CBLOCKEND 77 1 333
CFUNCTIONEND 77


	rseg $$millis$lazurite_system
CFUNCTION 79

_millis	:
CBLOCK 79 1 336

;;{
CLINEA 0000H 0001H 0150H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	xr4
CBLOCK 79 2 336
CRET 0008H
CLOCAL 46H 0004H 2928H 0002H "timer_l" 02H 00H 02H
CLOCAL 46H 0004H 2726H 0002H "timer_h" 02H 00H 02H
CLOCAL 4AH 0004H 0000H 0002H "result" 02H 00H 02H

;;	dis_interrupts(DI_MILLIS);
CLINEA 0000H 0001H 0156H 0002H 001BH
	mov	er0,	#16
	bl	_dis_interrupts

;;	timer_l = read_reg16(TM01C);
CLINEA 0000H 0001H 0157H 0002H 001DH
	l	er0,	0f310h
	mov	er8,	er0	;; _ltimer_l$0
	mov	er10,	#0 	;; _ltimer_l$0

;;	timer_h = sys_timer_count;
CLINEA 0000H 0001H 0158H 0002H 001BH
	l	er0,	NEAR _sys_timer_count
	l	er2,	NEAR _sys_timer_count+02h
	mov	er4,	er0	;; _ltimer_h$4
	mov	er6,	er2	;; _ltimer_h$4

;;	if(QTM1 == 1)
CLINEA 0000H 0001H 015AH 0002H 000EH
	tb	0f01dh.1
	beq	_$L96
CBLOCK 79 3 347

;;		timer_h++;
CLINEA 0000H 0000H 015CH 0003H 000CH
	add	er0,	#1 
	addc	r2,	#00h
	addc	r3,	#00h
	mov	er4,	er0	;; _ltimer_h$4
	mov	er6,	er2	;; _ltimer_h$4

;;		timer_l=0;
CLINEA 0000H 0001H 015DH 0003H 000CH
	mov	er8,	#0 	;; _ltimer_l$0
CBLOCKEND 79 3 350

;;	}
CLINEA 0000H 0000H 015EH 0002H 0002H
_$L96 :

;;	enb_interrupts(DI_MILLIS);
CLINEA 0000H 0001H 0161H 0002H 001BH
	mov	er0,	#16
	bl	_enb_interrupts

;;	timer_l = (timer_l * 1000) >> 15;
CLINEA 0000H 0001H 0163H 0002H 0022H
	push	xr8
	mov	r0,	#0e8h
	mov	r1,	#03h
	mov	er2,	#0 
	push	xr0
	bl	__lmulu8sw
	add	sp,	#4 
	pop	xr0
	mov	r0,	r1
	mov	r1,	r2
	mov	r2,	r3
	srlc	r0,	#07h
	srlc	r1,	#07h
	srl	r2,	#07h
	mov	r3,	#00h
	mov	er8,	er0	;; _ltimer_l$0
	mov	er10,	er2	;; _ltimer_l$0

;;	timer_h = timer_h * 2000;
CLINEA 0000H 0001H 0164H 0002H 001AH
	push	xr4
	mov	r0,	#0d0h
	mov	r1,	#07h
	mov	er2,	#0 
	push	xr0
	bl	__lmulu8sw
	add	sp,	#4 
	pop	xr0

;;	return result;
CLINEA 0000H 0001H 0168H 0002H 000FH
	add	er0,	er8
	addc	r2,	r10
	addc	r3,	r11
CBLOCKEND 79 2 361

;;}
CLINEA 0000H 0000H 0169H 0001H 0001H
	pop	xr4
	pop	xr8
	pop	pc
CBLOCKEND 79 1 361
CFUNCTIONEND 79


	rseg $$isr_sys_timer$lazurite_system
CFUNCTION 372

_isr_sys_timer	:
CBLOCK 372 1 365

;;{
CLINEA 0000H 0001H 016DH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er4
CBLOCK 372 2 365
CRET 0002H

;;	sys_timer_count++;
CLINEA 0000H 0000H 016EH 0002H 0013H
	l	er0,	NEAR _sys_timer_count
	l	er2,	NEAR _sys_timer_count+02h
	add	er0,	#1 
	addc	r2,	#00h
	addc	r3,	#00h
	st	er0,	NEAR _sys_timer_count
	st	er2,	NEAR _sys_timer_count+02h

;;	if(millis_timer_func) millis_timer_func(sys_timer_count);
CLINEA 0000H 0001H 0172H 0002H 003AH
	l	er0,	NEAR _millis_timer_func
	beq	_$L99
	l	er0,	NEAR _sys_timer_count
	l	er4,	NEAR _millis_timer_func
	bl	er4
_$L99 :
CBLOCKEND 372 2 372

;;}
CLINEA 0000H 0000H 0174H 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 372 1 372
CFUNCTIONEND 372


	rseg $$init_timer$lazurite_system
CFUNCTION 376

_init_timer	:
CBLOCK 376 1 380

;;{
CLINEA 0000H 0001H 017CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
CBLOCK 376 2 380
CRET 0000H

;;	sys_timer_count = 0;
CLINEA 0000H 0001H 017DH 0002H 0015H
	mov	er0,	#0 
	st	er0,	NEAR _sys_timer_count
	st	er0,	NEAR _sys_timer_count+02h

;;	millis_timer_func=NULL;
CLINEA 0000H 0001H 017EH 0002H 0018H
	st	er0,	NEAR _millis_timer_func

;;	timer_16bit_set(TM_MILLIS,0x40,0xFFFF,isr_sys_timer);
CLINEA 0000H 0001H 017FH 0002H 0036H
	mov	r0,	#BYTE1 OFFSET _isr_sys_timer
	mov	r1,	#BYTE2 OFFSET _isr_sys_timer
	push	er0
	mov	er2,	#-1
	mov	r1,	#040h
	mov	r0,	#00h
	bl	_timer_16bit_set
	add	sp,	#2 

;;	timer_16bit_start(TM_MILLIS);
CLINEA 0000H 0001H 0180H 0002H 001EH
	mov	r0,	#00h
	bl	_timer_16bit_start
CBLOCKEND 376 2 386

;;}
CLINEA 0000H 0000H 0182H 0001H 0001H
	pop	pc
CBLOCKEND 376 1 386
CFUNCTIONEND 376


	rseg $$set_timer0_function$lazurite_system
CFUNCTION 87

_set_timer0_function	:
CBLOCK 87 1 389

;;{
CLINEA 0000H 0001H 0185H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 87 2 389
CARGUMENT 47H 0002H 0024H "func" 0AH 03H 00H 02H 8BH 01H 00H 00H 00H 00H 07H

;;	millis_timer_func = func;
CLINEA 0000H 0001H 0186H 0002H 001AH
	st	er0,	NEAR _millis_timer_func
CBLOCKEND 87 2 392

;;}
CLINEA 0000H 0000H 0188H 0001H 0001H
	rt
CBLOCKEND 87 1 392
CFUNCTIONEND 87


	rseg $$clk_block_ctrl_init$lazurite_system
CFUNCTION 373

_clk_block_ctrl_init	:
CBLOCK 373 1 395

;;{
CLINEA 0000H 0001H 018BH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 373 2 395

;;	write_reg16(BLKCON01,0x0FFF);
CLINEA 0000H 0001H 018CH 0002H 001EH
	mov	r0,	#0ffh
	mov	r1,	#0fh
	st	er0,	0f068h

;;	write_reg16(BLKCON23,0xC1DF);
CLINEA 0000H 0001H 018DH 0002H 001EH
	mov	r0,	#0dfh
	mov	r1,	#0c1h
	st	er0,	0f06ah

;;	write_reg16(BLKCON45,0x0603);
CLINEA 0000H 0001H 018EH 0002H 001EH
	mov	r0,	#03h
	mov	r1,	#06h
	st	er0,	0f06ch
CBLOCKEND 373 2 399

;;}
CLINEA 0000H 0001H 018FH 0001H 0001H
	rt
CBLOCKEND 373 1 399
CFUNCTIONEND 373


	rseg $$watch_dog_isr$lazurite_system
CFUNCTION 374

_watch_dog_isr	:
CBLOCK 374 1 402

;;{
CLINEA 0000H 0001H 0192H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 374 2 402

;;	wdt_clear();
CLINEA 0000H 0001H 0194H 0002H 000DH
	b	_wdt_clear
CBLOCKEND 374 2 406
CLINEA 0000H 0001H 0196H 0001H 0001H
CBLOCKEND 374 1 406
CFUNCTIONEND 374


	rseg $$wait_event$lazurite_system
CFUNCTION 83

_wait_event	:
CBLOCK 83 1 409

;;{	
CLINEA 0000H 0001H 0199H 0001H 0002H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	er8,	er0
CBLOCK 83 2 409
CRET 0002H
CARGUMENT 46H 0002H 0028H "flag" 04H 03H 00H 00H 00H

;;	drv_digitalWrite(11,HIGH);		// PWR LED OFF
CLINEA 0000H 0001H 019BH 0002H 002BH
	mov	r1,	#01h
	mov	r0,	#0bh
	bl	_drv_digitalWrite

;;	while(*flag == false)
CLINEA 0000H 0000H 019EH 0001H 0001H
	bal	_$L120

;;	while(*flag == false)
CLINEA 0000H 0000H 019EH 0002H 0016H
_$L108 :
CBLOCK 83 3 415

;;		if((uart_tx_sending == true) || (uartf_tx_sending == true) || (subghz_api_status != 0))
CLINEA 0000H 0001H 01A1H 0003H 0059H
	l	r0,	NEAR _uart_tx_sending
	cmp	r0,	#01h
	beq	_$L111
	l	r0,	NEAR _uartf_tx_sending
	cmp	r0,	#01h
	beq	_$L111
	l	r0,	NEAR _subghz_api_status
	beq	_$L110
_$L111 :
CBLOCK 83 4 421

;;			lp_setHaltMode();
CLINEA 0000H 0001H 01A6H 0004H 0014H
	bl	_lp_setHaltMode

;;			wdt_clear();
CLINEA 0000H 0001H 01A7H 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 83 4 424

;;		else
CLINEA 0000H 0001H 01A9H 0003H 0006H
	bal	_$L120
_$L110 :
CBLOCK 83 5 426

;;			lp_setHaltHMode();
CLINEA 0000H 0001H 01ABH 0004H 0015H
	bl	_lp_setHaltHMode

;;			wdt_clear();
CLINEA 0000H 0001H 01ACH 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 83 5 429

;;		}
CLINEA 0000H 0000H 01ADH 0003H 0003H
_$L120 :
CBLOCKEND 83 3 430

;;	while(*flag == false)
CLINEA 0000H 0000H 019EH 0000H 0000H
	l	r0,	[er8]
	beq	_$L108

;;	*flag = false;
CLINEA 0000H 0001H 01AFH 0002H 000FH
	mov	r2,	#00h
	st	r2,	[er8]

;;	drv_digitalWrite(11,LOW);		// PWR LED ON
CLINEA 0000H 0001H 01B1H 0002H 0029H
	mov	r1,	#00h
	mov	r0,	#0bh
	bl	_drv_digitalWrite
CBLOCKEND 83 2 435

;;}
CLINEA 0000H 0001H 01B3H 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 83 1 435
CFUNCTIONEND 83


	rseg $$micros$lazurite_system
CFUNCTION 80

_micros	:
CBLOCK 80 1 438

;;{
CLINEA 0000H 0001H 01B6H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	xr8
	push	xr4
CBLOCK 80 2 438
CRET 0008H
CLOCAL 46H 0004H 2928H 0002H "timer_l" 02H 00H 02H
CLOCAL 46H 0004H 2726H 0002H "timer_h" 02H 00H 02H
CLOCAL 4AH 0004H 0000H 0002H "result" 02H 00H 02H

;;	dis_interrupts(DI_MILLIS);
CLINEA 0000H 0001H 01BCH 0002H 001BH
	mov	er0,	#16
	bl	_dis_interrupts

;;	timer_l = read_reg16(TM01C);
CLINEA 0000H 0001H 01BDH 0002H 001DH
	l	er0,	0f310h
	mov	er8,	er0	;; _ltimer_l$0
	mov	er10,	#0 	;; _ltimer_l$0

;;	timer_h = sys_timer_count;
CLINEA 0000H 0001H 01BEH 0002H 001BH
	l	er0,	NEAR _sys_timer_count
	l	er2,	NEAR _sys_timer_count+02h
	mov	er4,	er0	;; _ltimer_h$4
	mov	er6,	er2	;; _ltimer_h$4

;;	if(QTM1 == 1)
CLINEA 0000H 0001H 01C0H 0002H 000EH
	tb	0f01dh.1
	beq	_$L122
CBLOCK 80 3 449

;;		timer_h++;
CLINEA 0000H 0000H 01C2H 0003H 000CH
	add	er0,	#1 
	addc	r2,	#00h
	addc	r3,	#00h
	mov	er4,	er0	;; _ltimer_h$4
	mov	er6,	er2	;; _ltimer_h$4

;;		timer_l=0;
CLINEA 0000H 0001H 01C3H 0003H 000CH
	mov	er8,	#0 	;; _ltimer_l$0
CBLOCKEND 80 3 452

;;	}
CLINEA 0000H 0000H 01C4H 0002H 0002H
_$L122 :

;;	enb_interrupts(DI_MILLIS);
CLINEA 0000H 0001H 01C7H 0002H 001BH
	mov	er0,	#16
	bl	_enb_interrupts

;;	timer_l = (timer_l * 15625) >> 9;
CLINEA 0000H 0001H 01C9H 0002H 0022H
	push	xr8
	mov	r0,	#09h
	mov	r1,	#03dh
	mov	er2,	#0 
	push	xr0
	bl	__lmulu8sw
	add	sp,	#4 
	pop	xr0
	mov	r0,	r1
	mov	r1,	r2
	mov	r2,	r3
	srlc	r0,	#01h
	srlc	r1,	#01h
	srl	r2,	#01h
	mov	r3,	#00h
	mov	er8,	er0	;; _ltimer_l$0
	mov	er10,	er2	;; _ltimer_l$0

;;	timer_h = timer_h * 2000000;
CLINEA 0000H 0001H 01CAH 0002H 001DH
	push	xr4
	mov	r0,	#080h
	mov	r1,	#084h
	mov	er2,	#30
	push	xr0
	bl	__lmulu8sw
	add	sp,	#4 
	pop	xr0

;;	return result;
CLINEA 0000H 0001H 01CEH 0002H 000FH
	add	er0,	er8
	addc	r2,	r10
	addc	r3,	r11
CBLOCKEND 80 2 463

;;}
CLINEA 0000H 0000H 01CFH 0001H 0001H
	pop	xr4
	pop	xr8
	pop	pc
CBLOCKEND 80 1 463
CFUNCTIONEND 80


	rseg $$delay_microseconds$lazurite_system
CFUNCTION 78

_delay_microseconds	:
CBLOCK 78 1 468

;;{
CLINEA 0000H 0001H 01D4H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 78 2 468
CARGUMENT 46H 0004H 2524H "us" 02H 00H 02H

;;	if(us >= 2)
CLINEA 0000H 0001H 01D5H 0002H 000CH
	cmp	r0,	#02h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	blt	_$L128
CBLOCK 78 3 470

;;		while(us > 0)
CLINEA 0000H 0000H 01D8H 0001H 0001H
	bal	_$L131

;;		while(us > 0)
CLINEA 0000H 0000H 01D8H 0003H 000FH
_$L129 :
CBLOCK 78 4 473

;;			__asm("nop\n");
CLINEA 0000H 0001H 01DAH 0004H 0012H
nop


;;			__asm("nop\n");
CLINEA 0000H 0001H 01DBH 0004H 0012H
nop


;;			__asm("nop\n");
CLINEA 0000H 0001H 01DCH 0004H 0012H
nop


;;			__asm("nop\n");
CLINEA 0000H 0001H 01DDH 0004H 0012H
nop


;;			__asm("nop\n");
CLINEA 0000H 0001H 01DEH 0004H 0012H
nop


;;			us--;
CLINEA 0000H 0000H 01DFH 0004H 0008H
CBLOCKEND 78 4 480

;;		while(us > 0)
CLINEA 0000H 0000H 01D8H 0001H 0001H
_$L131 :
	add	er0,	#-1
	addc	r2,	#0ffh
	addc	r3,	#0ffh
	cmp	r0,	#00h
	cmpc	r1,	#00h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bgt	_$L129

;;		}
CLINEA 0000H 0000H 01E0H 0003H 0003H
_$L128 :
CBLOCKEND 78 3 481
CBLOCKEND 78 2 484

;;}
CLINEA 0000H 0000H 01E4H 0001H 0001H
	rt
CBLOCKEND 78 1 484
CFUNCTIONEND 78


	rseg $$interrupts$lazurite_system
CFUNCTION 81

_interrupts	:
CBLOCK 81 1 493

;;{
CLINEA 0000H 0001H 01EDH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 81 2 493

;;	enb_interrupts(DI_USER);
CLINEA 0000H 0001H 01EEH 0002H 0019H
	mov	r0,	#040h
	mov	r1,	#00h
	b	_enb_interrupts
CBLOCKEND 81 2 495
CLINEA 0000H 0001H 01EFH 0001H 0001H
CBLOCKEND 81 1 495
CFUNCTIONEND 81


	rseg $$noInterrupts$lazurite_system
CFUNCTION 82

_noInterrupts	:
CBLOCK 82 1 498

;;{
CLINEA 0000H 0001H 01F2H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 82 2 498

;;	dis_interrupts(DI_USER);
CLINEA 0000H 0001H 01F3H 0002H 0019H
	mov	r0,	#040h
	mov	r1,	#00h
	b	_dis_interrupts
CBLOCKEND 82 2 500
CLINEA 0000H 0001H 01F4H 0001H 0001H
CBLOCKEND 82 1 500
CFUNCTIONEND 82


	rseg $$wait_event_timeout$lazurite_system
CFUNCTION 85

_wait_event_timeout	:
CBLOCK 85 1 503

;;{	
CLINEA 0000H 0001H 01F7H 0001H 0002H
;;*****************************************
;;	register/stack information
;;*****************************************
	_time$2	set	4
	_result$0	set	-4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-08
	push	xr4
	push	er8
	mov	er8,	er0
CBLOCK 85 2 503
CRET 0010H
CARGUMENT 46H 0002H 0028H "flag" 04H 03H 00H 00H 00H
CARGUMENT 42H 0004H 0004H "time" 02H 00H 02H
CLOCAL 42H 0004H 0004H 0002H "result" 02H 00H 02H

;;	start_long_timer(time);
CLINEA 0000H 0001H 01FAH 0002H 0018H
	l	er0,	_time$2[fp]
	l	er2,	_time$2+02h[fp]
	bl	_start_long_timer

;;	drv_digitalWrite(11,HIGH);		// PWR LED OFF
CLINEA 0000H 0001H 01FDH 0002H 002BH
	mov	r1,	#01h
	mov	r0,	#0bh
	bl	_drv_digitalWrite

;;	result = millis();
CLINEA 0000H 0000H 01FFH 0002H 0013H
	bl	_millis
	st	er0,	_result$0[fp]
	st	er2,	_result$0+02h[fp]

;;	}
CLINEA 0000H 0000H 0210H 0002H 0002H
_$L155 :

;;	while((*flag == false) && (delay_flag == false))
CLINEA 0000H 0001H 0200H 0002H 0031H
	l	r0,	[er8]
	bne	_$L136
	l	r0,	NEAR _delay_flag
	bne	_$L136
CBLOCK 85 3 513

;;		if((uart_tx_sending == true) || (uartf_tx_sending == true) || (subghz_api_status != 0))
CLINEA 0000H 0001H 0203H 0003H 0059H
	l	r0,	NEAR _uart_tx_sending
	cmp	r0,	#01h
	beq	_$L145
	l	r0,	NEAR _uartf_tx_sending
	cmp	r0,	#01h
	beq	_$L145
	l	r0,	NEAR _subghz_api_status
	beq	_$L144
_$L145 :
CBLOCK 85 4 519

;;			lp_setHaltMode();
CLINEA 0000H 0001H 0208H 0004H 0014H
	bl	_lp_setHaltMode

;;			wdt_clear();
CLINEA 0000H 0001H 0209H 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 85 4 522

;;		else
CLINEA 0000H 0001H 020BH 0003H 0006H
	bal	_$L154
_$L144 :
CBLOCK 85 5 524

;;			lp_setHaltHMode();
CLINEA 0000H 0001H 020DH 0004H 0015H
	bl	_lp_setHaltHMode

;;			wdt_clear();
CLINEA 0000H 0001H 020EH 0004H 000FH
	bl	_wdt_clear
CBLOCKEND 85 5 527

;;		}
CLINEA 0000H 0000H 020FH 0003H 0003H
_$L154 :
CBLOCKEND 85 3 528

;;	}
CLINEA 0000H 0000H 0210H 0002H 0002H
	bal	_$L155
_$L136 :

;;	stop_long_timer();
CLINEA 0000H 0001H 0211H 0002H 0013H
	bl	_stop_long_timer

;;	if (*flag == false) {			// timeout
CLINEA 0000H 0001H 0213H 0002H 0023H
	l	r0,	[er8]
	bne	_$L156
CBLOCK 85 6 531

;;		result = 0;
CLINEA 0000H 0001H 0214H 0003H 000DH
	mov	er0,	#0 
	st	er0,	_result$0[fp]
	st	er0,	_result$0+02h[fp]
CBLOCKEND 85 6 533

;;	} else {						// remaining time
CLINEA 0000H 0000H 0215H 0002H 0020H
	bal	_$L158
_$L156 :
CBLOCK 85 7 533

;;		result = time - (millis() - result);
CLINEA 0000H 0000H 0216H 0003H 0026H
	l	er0,	_time$2[fp]
	l	er2,	_time$2+02h[fp]
	st	er0,	-8[fp]
	st	er2,	-6[fp]
	bl	_millis
	l	er4,	_result$0[fp]
	l	er6,	_result$0+02h[fp]
	sub	r0,	r4
	subc	r1,	r5
	subc	r2,	r6
	subc	r3,	r7
	l	er4,	-8[fp]
	l	er6,	-6[fp]
	sub	r4,	r0
	subc	r5,	r1
	subc	r6,	r2
	subc	r7,	r3
	st	er4,	_result$0[fp]
	st	er6,	_result$0+02h[fp]
CBLOCKEND 85 7 535

;;	}
CLINEA 0000H 0000H 0217H 0002H 0002H
_$L158 :

;;	*flag = false;
CLINEA 0000H 0001H 0219H 0002H 000FH
	mov	r2,	#00h
	st	r2,	[er8]

;;	drv_digitalWrite(11,LOW);		// PWR LED ON
CLINEA 0000H 0001H 021CH 0002H 0029H
	mov	r1,	#00h
	mov	r0,	#0bh
	bl	_drv_digitalWrite

;;	return result;
CLINEA 0000H 0001H 021FH 0002H 000FH
	l	er0,	_result$0[fp]
	l	er2,	_result$0+02h[fp]
CBLOCKEND 85 2 544

;;}
CLINEA 0000H 0000H 0220H 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 85 1 544
CFUNCTIONEND 85


	rseg $$vls_oneshot_check$lazurite_system
CFUNCTION 405

_vls_oneshot_check	:
CBLOCK 405 1 547

;;{
CLINEA 0000H 0001H 0223H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	r8,	r0
CBLOCK 405 2 547
CRET 0002H
CARGUMENT 46H 0001H 001CH "level" 02H 00H 00H

;;	clear_bit(ENVLS);				// VLS OFF
CLINEA 0000H 0001H 0224H 0002H 0020H
	rb	0f901h.0

;;	write_reg16(VLSMOD, 0x700);		// reset : NO, interrupt : NO, sampling : YES
CLINEA 0000H 0001H 0225H 0002H 004BH
	mov	r0,	#00h
	mov	r1,	#07h
	st	er0,	0f902h

;;	write_reg8(VLSCONL, level);		// set threshold
CLINEA 0000H 0001H 0226H 0002H 002EH
	st	r8,	0f900h

;;	set_bit(ENVLS);					// VLS ON
CLINEA 0000H 0001H 0228H 0002H 001EH
	sb	0f901h.0

;;	while (VLSRF == 0) wdt_clear();	// wait until check result becomes valid
CLINEA 0000H 0001H 0229H 0002H 0049H
	bal	_$L160
_$L162 :
	bl	_wdt_clear
_$L160 :
	tb	0f901h.2
	beq	_$L162

;;	clear_bit(ENVLS);				// VLS OFF
CLINEA 0000H 0001H 022BH 0002H 0020H
	rb	0f901h.0

;;	return VLSF;					// return 0 : if greator than, 1 : if less than
CLINEA 0000H 0001H 022CH 0002H 0041H
	l	r0,	0f901h
	srl	r0,	#01h
	and	r0,	#01h
CBLOCKEND 405 2 557

;;}
CLINEA 0000H 0000H 022DH 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 405 1 557
CFUNCTIONEND 405


	rseg $$voltage_check$lazurite_system
CFUNCTION 88

_voltage_check	:
CBLOCK 88 1 564

;;{
CLINEA 0000H 0001H 0234H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	push	lr
	push	er8
	mov	r8,	r0
CBLOCK 88 2 564
CRET 0002H
CARGUMENT 46H 0001H 001CH "level" 02H 00H 00H
CLOCAL 46H 0001H 0015H 0002H "ret" 02H 00H 00H

;;	uint8_t ret = 0;
CLINEA 0000H 0001H 0235H 0002H 0011H
	mov	r1,	#00h	;; _lret$0

;;	if ((level >= VLS_1_898) && (level <= VLS_4_667))	// check the range of level
CLINEA 0000H 0001H 0237H 0002H 004EH
	cmp	r8,	#03h
	blt	_$L165
	cmp	r8,	#0fh
	bgt	_$L165
CBLOCK 88 3 568

;;		clear_bit(DVLS);			// enable VLS
CLINEA 0000H 0001H 0239H 0003H 0022H
	rb	0f06dh.1

;;		}
CLINEA 0000H 0000H 023EH 0003H 0003H
_$L178 :

;;		while (vls_oneshot_check(level))
CLINEA 0000H 0001H 023AH 0003H 0022H
	mov	r0,	r8
	bl	_vls_oneshot_check
	cmp	r0,	#00h
	beq	_$L173
CBLOCK 88 4 571

;;			level--;
CLINEA 0000H 0000H 023CH 0004H 000BH
	add	r8,	#0ffh

;;			if (level < VLS_1_898) break;
CLINEA 0000H 0001H 023DH 0004H 0020H
	cmp	r8,	#03h
	blt	_$L173
CBLOCKEND 88 4 574

;;		}
CLINEA 0000H 0000H 023EH 0003H 0003H
	bal	_$L178
_$L173 :

;;		set_bit(DVLS);				// disable VLS
CLINEA 0000H 0001H 023FH 0003H 0022H
	sb	0f06dh.1

;;		ret = level;
CLINEA 0000H 0001H 0240H 0003H 000EH
	mov	r1,	r8	;; _lret$0
CBLOCKEND 88 3 577

;;	}
CLINEA 0000H 0000H 0241H 0002H 0002H
_$L165 :

;;	return ret;
CLINEA 0000H 0001H 0242H 0002H 000CH
	mov	r0,	r1
CBLOCKEND 88 2 579

;;}
CLINEA 0000H 0000H 0243H 0001H 0001H
	pop	er8
	pop	pc
CBLOCKEND 88 1 579
CFUNCTIONEND 88

	public _millis
	public _wait_event
	public _HALT_Until_Event
	public _set_timer0_function
	public _init
	public _voltage_check
	public _wait_event_timeout
	public _watch_dog_isr
	public _delay_microseconds
	public _interrupts
	public _isr_sys_timer
	public _noInterrupts
	public _micros
	public _delay_long
	public _sleep_long
	extrn code near : _timer_16bit_set
	extrn code near : _dis_interrupts
	extrn code near : _irq_init
	extrn code near : _i2c_get_status
	extrn data near : _subghz_api_status
	extrn code near : _timer_16bit_start
	extrn data near : _uartf_tx_sending
	extrn code near : _timer_16bit_stop
	extrn code near : _i2c_isr
	extrn code near : _drv_digitalWrite
	extrn code near : _wdt_clear
	extrn code near : _i2c_force_stop
	extrn code near : _enb_interrupts
	extrn code near : _rst_interrupts
	extrn data near : _uart_tx_sending
	extrn code near : _irq_sethandler
	extrn code near : _lp_setHaltMode
	extrn code near : _drv_pinMode
	extrn code near : _lp_setHaltHMode
	extrn code near : _main

	rseg $$NINITTAB
	dw	00h
	dw	00h
	dw	00h

	rseg $$NINITVAR
_sys_timer_count :
	ds	04h
_halt_event_flag :
	ds	02h

	rseg $$NVARlazurite_system
_delay_time :
	ds	06h
_millis_timer_func :
	ds	02h
_delay_flag :
	ds	01h
	extrn code : __lmulu8sw
	extrn code : __uldivu8sw
	extrn code : __ulmodu8sw

	end
