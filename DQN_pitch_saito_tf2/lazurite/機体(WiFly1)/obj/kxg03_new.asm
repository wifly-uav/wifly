;; Compile Options : /TML620504F /MS /near /IC:\LAZURI~1\LIBRAR~1\BM1383 /IC:\LAZURI~1\LIBRAR~1\BM1422 /IC:\LAZURI~1\LIBRAR~1\HARDWA~1 /IC:\LAZURI~1\LIBRAR~1\HARDWA~2 /IC:\LAZURI~1\LIBRAR~1\KXG03_~1 /IC:\LAZURI~1\LIBRAR~1\VL53L0X /IC:\LAZURI~1\LIBRAR~1\Wire /IC:\LAZURI~1\hardware\LAZURI~2 /IC:\LAZURI~1\hardware\LAZURI~2\lazurite /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\clock /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\common /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\irq /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\lp /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\MCU_SM~1 /IC:\LAZURI~1\hardware\LAZURI~2\ML620Q~1\wdt /IC:\LAZURI~1\hardware\LAZURI~2\sub_ghz\ /D_ML620Q504 /DLAZURITE_MINI /DLAZURITE_IDE /DSUBGHZ /DPWR_LED /DLDO_CNT /SS 512 /SL 65 /SD /Oa /Ot /W 3 /Faobj\ /Lv 
;; Version Number  : Ver.3.53.1
;; File Name       : kxg03_new.c

	type (ML620504F) 
	model small, near
	$$NVARkxg03_new segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$TABQ_angle$kxg03_new segment table 2h #0h
	$$TABQ_bias$kxg03_new segment table 2h #0h
	$$TABR_measure$kxg03_new segment table 2h #0h
	$$TABacc_div$kxg03_new segment table 2h #0h
	$$TABgyro_div$kxg03_new segment table 2h #0h
	$$TABkalman$kxg03_new segment table 2h #0h
	$$TABkxg03$kxg03_new segment table 2h #0h
	$$TABkxg03_err_msg$kxg03_new segment table 2h #0h
	$$kalman_cal$kxg03_new segment code 2h #0h
	$$kalman_init$kxg03_new segment code 2h #0h
	$$kalman_set$kxg03_new segment code 2h #0h
	$$kxg03_angle_init$kxg03_new segment code 2h #0h
	$$kxg03_err_msg_out$kxg03_new segment code 2h #0h
	$$kxg03_get_acc$kxg03_new segment code 2h #0h
	$$kxg03_get_angle$kxg03_new segment code 2h #0h
	$$kxg03_get_gyro$kxg03_new segment code 2h #0h
	$$kxg03_get_val$kxg03_new segment code 2h #0h
	$$kxg03_init$kxg03_new segment code 2h #0h
	$$kxg03_read$kxg03_new segment code 2h #0h
	$$kxg03_set_acc_avr$kxg03_new segment code 2h #0h
	$$kxg03_set_acc_out$kxg03_new segment code 2h #0h
	$$kxg03_set_acc_range$kxg03_new segment code 2h #0h
	$$kxg03_set_deg_out$kxg03_new segment code 2h #0h
	$$kxg03_set_gyro_bw$kxg03_new segment code 2h #0h
	$$kxg03_set_gyro_out$kxg03_new segment code 2h #0h
	$$kxg03_set_gyro_range$kxg03_new segment code 2h #0h
	$$kxg03_set_kalman_out$kxg03_new segment code 2h #0h
	$$kxg03_standby$kxg03_new segment code 2h #0h
	$$kxg03_sync_init$kxg03_new segment code 2h #0h
	$$kxg03_write$kxg03_new segment code 2h #0h
CVERSION 3.53.1
CSGLOBAL 03H 0000H "kxg03_set_gyro_bw" 08H 02H 5EH 01H 80H 00H 00H 00H 01H
CSGLOBAL 02H 0000H "kxg03_write" 08H 02H 55H 01H 83H 0aH 00H 00H 00H
CSGLOBAL 02H 0000H "kxg03_sync_init" 08H 02H 60H 01H 83H 12H 00H 00H 00H
CSGLOBAL 02H 0000H "kxg03_get_val" 08H 02H 57H 01H 83H 34H 00H 00H 00H
CSGLOBAL 03H 0000H "kxg03_set_acc_range" 08H 02H 5CH 01H 80H 00H 00H 00H 01H
CSGLOBAL 02H 0000H "kxg03_init" 08H 02H 56H 01H 83H 08H 00H 00H 00H
CSGLOBAL 03H 0000H "kalman_cal" 08H 02H 53H 01H 83H 2eH 00H 00H 03H
CSGLOBAL 02H 0000H "kxg03_read" 08H 02H 54H 01H 83H 0cH 00H 00H 00H
CSGLOBAL 03H 0000H "kalman_set" 08H 02H 52H 01H 83H 0aH 00H 00H 07H
CSGLOBAL 02H 0000H "kxg03_standby" 08H 02H 67H 01H 83H 0aH 00H 00H 00H
CSGLOBAL 03H 0000H "kxg03_set_gyro_range" 08H 02H 5DH 01H 80H 00H 00H 00H 01H
CGLOBAL 01H 03H 0000H "kxg03_set_gyro_out" 08H 02H 65H 01H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "kxg03_set_kalman_out" 08H 02H 63H 01H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "kxg03_get_angle" 08H 02H 62H 01H 83H 74H 00H 00H 01H
CGLOBAL 01H 03H 0000H "kxg03_set_deg_out" 08H 02H 66H 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "kxg03_get_gyro" 08H 02H 59H 01H 83H 22H 00H 00H 00H
CGLOBAL 01H 03H 0000H "kxg03_err_msg_out" 08H 02H 5AH 01H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "kxg03_set_acc_avr" 08H 02H 5BH 01H 80H 00H 00H 00H 01H
CSGLOBAL 03H 0000H "kxg03_angle_init" 08H 02H 61H 01H 83H 66H 00H 00H 07H
CSGLOBAL 03H 0000H "kalman_init" 08H 02H 51H 01H 80H 00H 00H 00H 07H
CSGLOBAL 02H 0000H "kxg03_get_acc" 08H 02H 58H 01H 83H 22H 00H 00H 00H
CGLOBAL 01H 03H 0000H "kxg03_set_acc_out" 08H 02H 64H 01H 80H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0022H 000AH 00000014H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 41H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "requestFrom" 0AH 03H 00H 02H 42H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 43H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 44H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "beginTransmission" 0AH 03H 00H 02H 45H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000AH "write_byte" 0AH 03H 00H 02H 46H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000CH "write" 0AH 03H 00H 02H 47H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "endTransmission" 0AH 03H 00H 02H 48H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 00000010H "setTimeout" 0AH 03H 00H 02H 49H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000012H "end" 0AH 03H 00H 02H 4AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0021H 0003H 00000006H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 3EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "set" 0AH 03H 00H 02H 3FH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "cal" 0AH 03H 00H 02H 40H 01H 00H 00H 00H 00H 03H
CSTRUCTTAG 0000H 0000H 0020H 0006H 00000024H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "angle" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000004H "bias" 02H 00H 03H
CSTRUCTMEM 43H 00000010H 00000008H "P" 08H 01H 02H 00H 01H 02H 00H 00H 03H
CSTRUCTMEM 43H 00000004H 00000018H "newAngle" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 0000001CH "newRate" 02H 00H 03H
CSTRUCTMEM 43H 00000004H 00000020H "lastTime" 02H 00H 03H
CSTRUCTTAG 0000H 0000H 001FH 0012H 00000024H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "init" 0AH 03H 00H 02H 2BH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "sync_init" 0AH 03H 00H 02H 2DH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "read" 0AH 03H 00H 02H 2EH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "write" 0AH 03H 00H 02H 2FH 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000008H "get_val" 0AH 03H 00H 02H 30H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000AH "get_gyro" 0AH 03H 00H 02H 31H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000CH "get_acc" 0AH 03H 00H 02H 32H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000000EH "set_acc_avr" 0AH 03H 00H 02H 33H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "set_acc_range" 0AH 03H 00H 02H 34H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "set_gyro_range" 0AH 03H 00H 02H 35H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "set_gyro_bw" 0AH 03H 00H 02H 36H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "angle_init" 0AH 03H 00H 02H 37H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000018H "get_angle" 0AH 03H 00H 02H 38H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001AH "set_kalman_out" 0AH 03H 00H 02H 39H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001CH "set_acc_out" 0AH 03H 00H 02H 3AH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "set_gyro_out" 0AH 03H 00H 02H 3BH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000020H "set_deg_out" 0AH 03H 00H 02H 3CH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000022H "standby" 0AH 03H 00H 02H 3DH 01H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 001EH 0002H 00000002H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addr" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "data" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001DH 001BH 00000036H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 0CH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "remove" 0AH 03H 00H 02H 0DH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "begin" 0AH 03H 00H 02H 0EH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "close" 0AH 03H 00H 02H 0FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "send" 0AH 03H 00H 02H 11H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "send64le" 0AH 03H 00H 02H 13H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "send64be" 0AH 03H 00H 02H 15H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "rxEnable" 0AH 03H 00H 02H 17H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000010H "setPromiscuous" 0AH 03H 00H 02H 18H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000012H "setAckReq" 0AH 03H 00H 02H 19H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000014H "setBroadcastEnb" 0AH 03H 00H 02H 1AH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000016H "rxDisable" 0AH 03H 00H 02H 1BH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000018H "readData" 0AH 03H 00H 02H 1CH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001AH "getMyAddress" 0AH 03H 00H 02H 1DH 01H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 0000001CH "getMyAddr64" 0AH 03H 00H 02H 1EH 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000001EH "setMyAddress" 0AH 03H 00H 02H 1FH 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000020H "getStatus" 0AH 03H 00H 02H 20H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000022H "msgOut" 0AH 03H 00H 02H 21H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000024H "setSendMode" 0AH 03H 00H 02H 22H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000026H "getSendMode" 0AH 03H 00H 02H 23H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000028H "decMac" 0AH 03H 00H 02H 24H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 0000002AH "setKey" 0AH 03H 00H 02H 25H 01H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000002CH "setEnhanceAck" 0AH 03H 00H 02H 26H 01H 00H 00H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000002EH "getEnhanceAck" 0AH 03H 00H 02H 27H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000030H "setAckTxInterval" 0AH 03H 00H 02H 28H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000032H "getEdValue" 0AH 03H 00H 02H 29H 01H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000034H "antSwitch" 0AH 03H 00H 02H 2AH 01H 00H 00H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0011H 000BH 00000002H "mac_fc_alignment"
CSTRUCTMEM 52H 00000003H 00000000H "frame_type" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "sec_enb" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "pending" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "ack_req" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "panid_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "nop" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000008H "seq_comp" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000009H "ielist" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000AH "dst_addr_type" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000CH "frame_ver" 02H 00H 00H
CSTRUCTMEM 52H 00000002H 0000000EH "src_addr_type" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 001CH 000BH 00000020H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "mac_header" 04H 00H 06H 12H 00H
CSTRUCTMEM 42H 00000001H 00000002H "seq_num" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "dst_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "dst_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "src_panid" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000010H "src_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000018H "raw" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001AH "raw_len" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 0000001CH "payload" 04H 03H 00H 00H 00H
CSTRUCTMEM 43H 00000002H 0000001EH "payload_len" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001BH 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "addrType" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "senseTime" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000004H "txInterval" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000006H "myAddress" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000008H "ccaWait" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 001AH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000002H "status" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0008H 0003H 00000006H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "data" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "len" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "size" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0009H 0004H 00000010H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "id" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "buf_size" 02H 00H 08H
CSTRUCTMEM 43H 00000006H 00000004H "in" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000000AH "out" 04H 00H 05H 08H 00H
CSTRUCTTAG 0000H 0000H 000CH 0015H 00000028H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "condition" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "ccaRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "ccaBe" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "ccaCount" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "txPower" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "txRetry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "txMode" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000009H "sequnceNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000AH "resendingNum" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000BH "rxOnEnable" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "promiscuousMode" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "ack_timeout" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000010H "status" 02H 00H 01H
CSTRUCTMEM 42H 00000004H 00000012H "total_send_bytes" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 00000016H "start_send_time" 02H 00H 02H
CSTRUCTMEM 42H 00000004H 0000001AH "last_send_time" 02H 00H 02H
CSTRUCTMEM 43H 00000002H 0000001EH "phy" 06H 03H 00H 00H 05H 09H 00H
CSTRUCTMEM 43H 00000006H 00000020H "ack" 04H 00H 05H 08H 00H
CSTRUCTMEM 42H 00000002H 00000026H "tx_ack_interval" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 0015H 0005H 0000000EH "mac_addr"
CSTRUCTMEM 42H 00000001H 00000000H "pan_coord" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "lddn_addr" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000006H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 000FH 0002H 00000004H "_Notag"
CSTRUCTMEM 42H 00000001H 00000000H "enb" 02H 00H 00H
CSTRUCTMEM 42H 00000002H 00000002H "data" 02H 00H 08H
CSTRUCTTAG 0000H 0000H 000EH 0003H 0000000EH "fc_addr"
CSTRUCTMEM 43H 00000004H 00000000H "panid" 04H 00H 05H 0FH 00H
CSTRUCTMEM 42H 00000001H 00000004H "addr_type" 02H 00H 00H
CSTRUCTMEM 43H 00000008H 00000006H "addr" 04H 00H 06H 10H 00H
CSTRUCTTAG 0000H 0000H 0013H 000AH 00000036H "mac_header"
CSTRUCTMEM 43H 00000002H 00000000H "fc" 04H 00H 06H 12H 00H
CSTRUCTMEM 43H 0000000EH 00000002H "dst" 04H 00H 05H 0EH 00H
CSTRUCTMEM 43H 0000000EH 00000010H "src" 04H 00H 05H 0EH 00H
CSTRUCTMEM 42H 00000001H 0000001EH "seq" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 0000001FH "addr_type" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000020H "rssi" 02H 00H 00H
CSTRUCTMEM 43H 00000006H 00000022H "payload" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 00000028H "raw" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000006H 0000002EH "input" 04H 00H 05H 08H 00H
CSTRUCTMEM 43H 00000002H 00000034H "payload_offset" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0014H 000CH 00000016H "rf_param"
CSTRUCTMEM 42H 00000001H 00000000H "ch" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000001H "pages" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000002H "cca_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000003H "cca_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000004H "cca_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "tx_min_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "tx_max_be" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "tx_retry" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "ant_sw" 02H 00H 00H
CSTRUCTMEM 42H 00000004H 0000000AH "ack_timeout" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 0000000EH "cca_level" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000012H "tx_power" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0016H 000AH 000000FAH "mach_param"
CSTRUCTMEM 43H 00000002H 00000000H "macl" 06H 03H 00H 00H 05H 0CH 00H
CSTRUCTMEM 43H 0000000EH 00000002H "my_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 0000000EH 00000010H "coord_addr" 04H 00H 05H 15H 00H
CSTRUCTMEM 43H 00000036H 0000001EH "tx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 00000054H "rx" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 0000008AH "rx_prev" 04H 00H 05H 13H 00H
CSTRUCTMEM 43H 00000036H 000000C0H "ack" 04H 00H 05H 13H 00H
CSTRUCTMEM 42H 00000001H 000000F6H "coordinator" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 000000F7H "sending" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 000000F8H "rf" 06H 03H 00H 00H 05H 14H 00H
CSTRUCTTAG 0000H 0000H 000DH 0004H 0000000EH "ieee802154_my_addr"
CSTRUCTMEM 42H 00000002H 00000000H "pan_id" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000002H "short_addr" 02H 00H 08H
CSTRUCTMEM 42H 00000008H 00000004H "ieee_addr" 05H 01H 08H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 0000000CH "pan_coord" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0006H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0005H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0004H 0005H 0000000AH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "write" 0AH 03H 00H 02H 7BH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000002H "read" 0AH 03H 00H 02H 7CH 00H 00H 00H 00H 00H 08H
CSTRUCTMEM 43H 00000002H 00000004H "erase" 0AH 03H 00H 02H 7DH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000006H "write_byte" 0AH 03H 00H 02H 7EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 00000008H "read_byte" 0AH 03H 00H 02H 7FH 00H 00H 00H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0008H 00000010H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "init" 0AH 03H 00H 02H 68H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "p" 0AH 03H 00H 02H 69H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000004H "l" 0AH 03H 00H 02H 6AH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "f" 0AH 03H 00H 02H 6BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "d" 0AH 03H 00H 02H 6CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "ln" 0AH 03H 00H 02H 6DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000CH "status" 0AH 03H 00H 02H 6EH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000EH "len" 0AH 03H 00H 02H 6FH 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0002H 000FH 0000001EH "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "begin" 0AH 03H 00H 02H 59H 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000002H "end" 0AH 03H 00H 02H 5AH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 43H 00000002H 00000004H "available" 0AH 03H 00H 02H 5BH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000006H "read" 0AH 03H 00H 02H 5CH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 00000008H "peek" 0AH 03H 00H 02H 5DH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000000AH "flush" 0AH 03H 00H 02H 5EH 00H 00H 00H 00H 00H 07H
CSTRUCTMEM 42H 00000002H 0000000CH "print" 0AH 03H 00H 02H 5FH 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000000EH "println" 0AH 03H 00H 02H 60H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000010H "print_long" 0AH 03H 00H 02H 61H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000012H "println_long" 0AH 03H 00H 02H 62H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000014H "print_double" 0AH 03H 00H 02H 63H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000016H "println_double" 0AH 03H 00H 02H 64H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 00000018H "write" 0AH 03H 00H 02H 65H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 42H 00000002H 0000001AH "write_byte" 0AH 03H 00H 02H 66H 00H 00H 00H 00H 00H 01H
CSTRUCTMEM 43H 00000002H 0000001CH "tx_available" 0AH 03H 00H 02H 67H 00H 00H 00H 00H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0012H 0003H 00000002H "mac_frame_control"
CUNIONMEM 42H 00000002H "fc8" 05H 01H 02H 00H 00H 00H
CUNIONMEM 42H 00000002H "fc16" 02H 00H 08H
CUNIONMEM 43H 00000002H "fc_bit" 04H 00H 05H 11H 00H
CUNIONTAG 0000H 0000H 0010H 0003H 00000008H "_Notag"
CUNIONMEM 42H 00000002H "short_addr" 02H 00H 08H
CUNIONMEM 42H 00000002H "lddn_addr" 02H 00H 08H
CUNIONMEM 42H 00000008H "ieee_addr" 05H 01H 08H 00H 00H 00H
CUNIONTAG 0000H 0000H 0007H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CENUMTAG 0000H 0000H 0019H 0002H "_Notag"
CENUMMEM 00000014H "SUBGHZ_PWR_20MW"
CENUMMEM 00000001H "SUBGHZ_PWR_1MW"
CENUMTAG 0000H 0000H 0018H 0002H "_Notag"
CENUMMEM 00000064H "SUBGHZ_100KBPS"
CENUMMEM 00000032H "SUBGHZ_50KBPS"
CENUMTAG 0000H 0000H 0017H 0012H "_Notag"
CENUMMEM 00000000H "SUBGHZ_OK"
CENUMMEM 00000001H "SUBGHZ_RESET_FAIL"
CENUMMEM 00000002H "SUBGHZ_SETUP_FAIL"
CENUMMEM 00000003H "SUBGHZ_SLEEP_FAIL"
CENUMMEM 00000004H "SUBGHZ_WAKEUP_FAIL"
CENUMMEM 00000005H "SUBGHZ_MYADDR_FAIL"
CENUMMEM 00000006H "SUBGHZ_SETFIL_FAIL"
CENUMMEM 00000007H "SUBGHZ_TX_COMP_FAIL"
CENUMMEM 00000008H "SUBGHZ_TX_FAIL"
CENUMMEM 00000009H "SUBGHZ_TX_CCA_FAIL"
CENUMMEM 0000000AH "SUBGHZ_TX_ACK_FAIL"
CENUMMEM 0000000BH "SUBGHZ_RX_ENB_FAIL"
CENUMMEM 0000000CH "SUBGHZ_RX_DIS_FAIL"
CENUMMEM 0000000DH "SUBGHZ_RX_COMP_FAIL"
CENUMMEM 0000000EH "SUBGHZ_PANID"
CENUMMEM 0000000FH "SUBGHZ_ERR_ADDRTYPE"
CENUMMEM 00000010H "SUBGHZ_TTL_SEND_OVR"
CENUMMEM 00000011H "SUBGHZ_DUMMY"
CENUMTAG 0000H 0000H 000BH 000EH "_Notag"
CENUMMEM 00000000H "SUBGHZ_ST_TX_START"
CENUMMEM 00000001H "SUBGHZ_ST_CCA_FAST"
CENUMMEM 00000002H "SUBGHZ_ST_CCA_IDLE_DETECT"
CENUMMEM 00000003H "SUBGHZ_ST_CCA_ABORT"
CENUMMEM 00000004H "SUBGHZ_ST_CCA_RETRY"
CENUMMEM 00000005H "SUBGHZ_ST_CCA_FAILURE"
CENUMMEM 00000006H "SUBGHZ_ST_CCA_DONE"
CENUMMEM 00000007H "SUBGHZ_ST_TX_DONE"
CENUMMEM 00000008H "SUBGHZ_ST_TX_ACK_TIMEOUT"
CENUMMEM 00000009H "SUBGHZ_ST_TX_ACK_DONE"
CENUMMEM 0000000AH "SUBGHZ_ST_RX_START"
CENUMMEM 0000000BH "SUBGHZ_ST_RX_DONE"
CENUMMEM 0000000CH "SUBGHZ_ST_RX_ACK_DONE"
CENUMMEM 0000000DH "SUBGHZ_ST_NONE"
CENUMTAG 0000H 0000H 000AH 0005H "_Notag"
CENUMMEM 00000000H "CCA_IDLE"
CENUMMEM 00000001H "CCA_FAST"
CENUMMEM 00000002H "IDLE_DETECT"
CENUMMEM 00000003H "CCA_RETRY"
CENUMMEM 00000004H "CCA_FAILURE"
CENUMTAG 0000H 0000H 0001H 0003H "_Notag"
CENUMMEM 00000001H "HALT_I2C1_END"
CENUMMEM 00000002H "HALT_I2C0_END"
CENUMMEM 00000003H "HALT_DELAY"
CTYPEDEF 0000H 0000H 43H "SUBGHZ_POWER" 04H 00H 0AH 19H 00H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 07H 00H
CTYPEDEF 0000H 0000H 43H "SubGHz_CTRL" 04H 00H 05H 1DH 00H
CTYPEDEF 0000H 0000H 43H "INT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "KALMAN_PARAM" 04H 00H 05H 20H 00H
CTYPEDEF 0000H 0000H 43H "PHY_PARAM" 04H 00H 05H 09H 00H
CTYPEDEF 0000H 0000H 43H "TwoWire" 04H 00H 05H 22H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_PARAM" 04H 00H 05H 1BH 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MSG" 04H 00H 0AH 17H 00H
CTYPEDEF 0000H 0000H 42H "bool" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "t_print" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "INT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "INT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "KXG03_REG" 04H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_STATE" 04H 00H 0AH 0BH 00H
CTYPEDEF 0000H 0000H 43H "MACL_PARAM" 04H 00H 05H 0CH 00H
CTYPEDEF 0000H 0000H 42H "BOOLEAN" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_MAC_PARAM" 04H 00H 05H 1CH 00H
CTYPEDEF 0000H 0000H 42H "UCHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_STATUS" 04H 00H 05H 1AH 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "uint8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "SUBGHZ_RATE" 04H 00H 0AH 18H 00H
CTYPEDEF 0000H 0000H 43H "BUFFER" 04H 00H 05H 08H 00H
CTYPEDEF 0000H 0000H 43H "int8_t" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "int16_t" 02H 00H 08H
CTYPEDEF 0000H 0000H 43H "int32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "UINT8" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "KALMAN" 04H 00H 05H 21H 00H
CTYPEDEF 0000H 0000H 43H "DATAFLASH" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "KXG03" 04H 00H 05H 1FH 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 84H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 83H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "CHAR" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HardwareSerial" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 86H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 85H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT16" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "UINT32" 02H 00H 02H
CTYPEDEF 0000H 0000H 42H "boolean" 02H 00H 00H
CTYPEDEF 0000H 0000H 42H "word" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "pKXG03_REG" 06H 03H 00H 00H 05H 1EH 00H
CTYPEDEF 0000H 0000H 42H "BOOL" 02H 00H 00H
CTYPEDEF 0000H 0000H 43H "HALT_EVENT" 04H 00H 0AH 01H 00H
CTYPEDEF 0000H 0000H 43H "CCA_STATE" 04H 00H 0AH 0AH 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 06H 00H
CTYPEDEF 0000H 0000H 42H "uint32_t" 02H 00H 02H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CTYPEDEF 0000H 0000H 42H "uint16_t" 02H 00H 08H
CSGLOBAL 01H 0004H "R_measure" 02H 00H 03H
CSGLOBAL 43H 0003H "a" 05H 01H 03H 00H 00H 00H
CSGLOBAL 43H 0003H "g" 05H 01H 03H 00H 00H 00H
CSGLOBAL 43H 0048H "k" 07H 01H 02H 00H 00H 05H 20H 00H
CGLOBAL 01H 01H 0024H "kxg03" 04H 00H 05H 1FH 00H
CSGLOBAL 42H 0001H "angle_mode" 02H 00H 00H
CSGLOBAL 01H 0004H "Q_angle" 02H 00H 03H
CGLOBAL 01H 01H 0006H "kalman" 04H 00H 05H 21H 00H
CSGLOBAL 43H 0018H "raw" 05H 01H 06H 00H 00H 03H
CSGLOBAL 43H 0018H "tmp" 05H 01H 06H 00H 00H 03H
CSGLOBAL 42H 0001H "kxg03_gyro_bw" 02H 00H 00H
CSGLOBAL 43H 0003H "af" 05H 01H 03H 00H 00H 00H
CSGLOBAL 43H 0003H "gf" 05H 01H 03H 00H 00H 00H
CSGLOBAL 01H 0080H "kxg03_err_msg" 08H 01H 08H 00H 01H 10H 00H 00H 00H
CSGLOBAL 42H 0001H "kxg03_out_flag" 02H 00H 00H
CSGLOBAL 01H 0004H "Q_bias" 02H 00H 03H
CSGLOBAL 01H 0008H "gyro_div" 05H 01H 04H 00H 00H 08H
CSGLOBAL 42H 0001H "kxg03_gyro_range" 02H 00H 00H
CSGLOBAL 42H 0001H "slave_addr" 02H 00H 00H
CGLOBAL 02H 01H 0014H "Wire" 04H 00H 05H 22H 00H
CSGLOBAL 42H 0001H "kxg03_acc_avr" 02H 00H 00H
CSGLOBAL 42H 0001H "kxg03_acc_range" 02H 00H 00H
CSGLOBAL 01H 0008H "acc_div" 05H 01H 04H 00H 00H 08H
CFILE 0001H 00000002H "C:\\LAZURI~1\\LIBRAR~1\\KXG03_~1\\kxg03_new_ide.h"
CFILE 0002H 00000042H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite.h"
CFILE 0003H 0000007BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\common.h"
CFILE 0004H 00000F42H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\ml620504F.h"
CFILE 0005H 000000C9H "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\string.h"
CFILE 0006H 0000007AH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\yvals.h"
CFILE 0007H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\analogio.h"
CFILE 0008H 00000022H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\MCU_SM~1\\mcu.h"
CFILE 0009H 0000002BH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\digitalio.h"
CFILE 000AH 00000041H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\pin_assignment.h"
CFILE 000BH 00000051H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\lazurite_system.h"
CFILE 000CH 00000045H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\serial.h"
CFILE 000DH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\print.h"
CFILE 000EH 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_shift.h"
CFILE 000FH 0000002CH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\wiring_pulse.h"
CFILE 0010H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WInterrupts.h"
CFILE 0011H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\WMath.h"
CFILE 0012H 00000031H "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\flash.h"
CFILE 0013H 0000002DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\lazurite\\tone.h"
CFILE 0014H 000000DAH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\stdlib.h"
CFILE 0015H 0000004FH "C:\\LazuriteIDE\\bin\\U8Dev\\Inc\\math.h"
CFILE 0016H 00000082H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\subghz_api.h"
CFILE 0017H 0000009EH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\mach.h"
CFILE 0018H 00000064H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\macl.h"
CFILE 0019H 00000032H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\common_subghz.h"
CFILE 001AH 00000062H "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\phy.h"
CFILE 001BH 0000003DH "C:\\LAZURI~1\\hardware\\LAZURI~2\\sub_ghz\\endian.h"
CFILE 001CH 000000CEH "C:\\LAZURI~1\\LIBRAR~1\\KXG03_~1\\kxg03_new.h"
CFILE 001DH 00000039H "C:\\LAZURI~1\\LIBRAR~1\\Wire\\wire.h"
CFILE 001EH 00000026H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_extirq.h"
CFILE 001FH 00000028H "C:\\LAZURI~1\\hardware\\LAZURI~2\\ML620Q~1\\driver_gpio.h"
CFILE 0000H 000002BEH "C:\\LAZURI~1\\LIBRAR~1\\KXG03_~1\\kxg03_new.c"

	rseg $$kalman_init$kxg03_new
CFUNCTION 337

_kalman_init	:
CBLOCK 337 1 53

;;{
CLINEA 0000H 0001H 0035H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

	mov	er2,	er0
CBLOCK 337 2 53
CARGUMENT 47H 0002H 0025H "param" 06H 03H 00H 00H 05H 20H 00H

;;	param->angle = 0.0;
CLINEA 0000H 0001H 0036H 0002H 0014H
	mov	er0,	#0 
	st	er0,	[er2]
	st	er0,	02h[er2]

;;	param->bias = 0.0;
CLINEA 0000H 0001H 0037H 0002H 0013H
	st	er0,	04h[er2]
	st	er0,	06h[er2]

;;	param->P[0][0] = 0.0;
CLINEA 0000H 0001H 0038H 0002H 0016H
	st	er0,	08h[er2]
	st	er0,	0ah[er2]

;;	param->P[0][1] = 0.0;
CLINEA 0000H 0001H 0039H 0002H 0016H
	st	er0,	0ch[er2]
	st	er0,	0eh[er2]

;;	param->P[1][0] = 0.0;
CLINEA 0000H 0001H 003AH 0002H 0016H
	st	er0,	010h[er2]
	st	er0,	012h[er2]

;;	param->P[1][1] = 0.0;
CLINEA 0000H 0001H 003BH 0002H 0016H
	st	er0,	014h[er2]
	st	er0,	016h[er2]
CBLOCKEND 337 2 62

;;}
CLINEA 0000H 0000H 003EH 0001H 0001H
	rt
CBLOCKEND 337 1 62
CFUNCTIONEND 337


	rseg $$kalman_set$kxg03_new
CFUNCTION 338

_kalman_set	:
CBLOCK 338 1 64

;;{
CLINEA 0000H 0001H 0040H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_newAngle$2	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	er8
	mov	er8,	er0
CBLOCK 338 2 64
CRET 0004H
CARGUMENT 47H 0002H 0028H "param" 06H 03H 00H 00H 05H 20H 00H
CARGUMENT 43H 0004H 0004H "newAngle" 02H 00H 03H

;;	param->angle = newAngle;
CLINEA 0000H 0001H 0041H 0002H 0019H
	l	er0,	_newAngle$2[fp]
	l	er2,	_newAngle$2+02h[fp]
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	param->bias = 0.0;
CLINEA 0000H 0001H 0042H 0002H 0013H
	mov	er0,	#0 
	st	er0,	04h[er8]
	st	er0,	06h[er8]

;;	param->P[0][0] = 0.0;
CLINEA 0000H 0001H 0043H 0002H 0016H
	st	er0,	08h[er8]
	st	er0,	0ah[er8]

;;	param->P[0][1] = 0.0;
CLINEA 0000H 0001H 0044H 0002H 0016H
	st	er0,	0ch[er8]
	st	er0,	0eh[er8]

;;	param->P[1][0] = 0.0;
CLINEA 0000H 0001H 0045H 0002H 0016H
	st	er0,	010h[er8]
	st	er0,	012h[er8]

;;	param->P[1][1] = 0.0;
CLINEA 0000H 0001H 0046H 0002H 0016H
	st	er0,	014h[er8]
	st	er0,	016h[er8]

;;	param->lastTime=millis();
CLINEA 0000H 0000H 0047H 0002H 001AH
	bl	_millis
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	020h[er8]
	st	er2,	022h[er8]
CBLOCKEND 338 2 74

;;}
CLINEA 0000H 0000H 004AH 0001H 0001H
	pop	er8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 338 1 74
CFUNCTIONEND 338


	rseg $$kalman_cal$kxg03_new
CFUNCTION 339

_kalman_cal	:
CBLOCK 339 1 76

;;static float kalman_cal(KALMAN_PARAM *param,float newAngle, float newRate){
CLINEA 0000H 0001H 004CH 0001H 004BH
;;*****************************************
;;	register/stack information
;;*****************************************
	_now$0	set	-16
	_dt$4	set	-12
	_newRate$6	set	8
	_newAngle$2	set	4
	_y$12	set	-20
	_K$20	set	-8
	_P00_temp$28	set	-24
	_P01_temp$32	set	-28
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-028
	push	xr4
	push	er8
	mov	er8,	er0
CBLOCK 339 2 76
CRET 0024H
CARGUMENT 47H 0002H 0028H "param" 06H 03H 00H 00H 05H 20H 00H
CARGUMENT 43H 0004H 0004H "newAngle" 02H 00H 03H
CARGUMENT 43H 0004H 0008H "newRate" 02H 00H 03H
CLOCAL 42H 0004H 0010H 0002H "now" 02H 00H 02H
CLOCAL 43H 0004H 000CH 0002H "dt" 02H 00H 03H
CLOCAL 47H 0004H 2726H 0002H "rate" 02H 00H 03H
CLOCAL 43H 0004H 0014H 0002H "y" 02H 00H 03H
CLOCAL 47H 0004H 2726H 0002H "S" 02H 00H 03H
CLOCAL 43H 0008H 0008H 0002H "K" 05H 01H 02H 00H 00H 03H
CLOCAL 43H 0004H 0018H 0002H "P00_temp" 02H 00H 03H
CLOCAL 43H 0004H 001CH 0002H "P01_temp" 02H 00H 03H

;;	now = millis();;
CLINEA 0000H 0000H 0054H 0002H 0011H
	bl	_millis
	st	er0,	_now$0[fp]
	st	er2,	_now$0+02h[fp]

;;	dt = (now - param->lastTime)/1000;
CLINEA 0000H 0001H 0055H 0002H 0023H
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	push	xr0
	l	er0,	020h[er8]
	l	er2,	022h[er8]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#07ah
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_dt$4[fp]
	st	er2,	_dt$4+02h[fp]

;;	rate = newRate - param->bias;
CLINEA 0000H 0001H 0058H 0002H 001EH
	l	er0,	_newRate$6[fp]
	l	er2,	_newRate$6+02h[fp]
	push	xr0
	l	er0,	04h[er8]
	l	er2,	06h[er8]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	mov	er4,	er0	;; _lrate$8
	mov	er6,	er2	;; _lrate$8

;;	param->angle += dt * rate;
CLINEA 0000H 0001H 0059H 0002H 001BH
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	[er8]
	l	er6,	02h[er8]
	push	qr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	param->P[0][0] += dt * (dt * param->P[1][1] - param->P[0][1] - param->P[1][0] + Q_angle);
CLINEA 0000H 0001H 005CH 0002H 005AH
	l	er0,	014h[er8]
	l	er2,	016h[er8]
	push	xr0
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	xr0
	l	er0,	0ch[er8]
	l	er2,	0eh[er8]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	push	xr0
	l	er0,	010h[er8]
	l	er2,	012h[er8]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	r0,	#06fh
	mov	r1,	#012h
	mov	r2,	#083h
	mov	r3,	#03ah
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	xr0
	l	er0,	08h[er8]
	l	er2,	0ah[er8]
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	08h[er8]
	st	er2,	0ah[er8]

;;	param->P[0][1] -= dt * param->P[1][1];
CLINEA 0000H 0001H 005DH 0002H 0027H
	l	er0,	014h[er8]
	l	er2,	016h[er8]
	push	xr0
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	0ch[er8]
	l	er6,	0eh[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	0ch[er8]
	st	er2,	0eh[er8]

;;	param->P[1][0] -= dt * param->P[1][1];
CLINEA 0000H 0001H 005EH 0002H 0027H
	l	er0,	014h[er8]
	l	er2,	016h[er8]
	push	xr0
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	010h[er8]
	l	er6,	012h[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	010h[er8]
	st	er2,	012h[er8]

;;	param->P[1][1] += Q_bias * dt;
CLINEA 0000H 0001H 005FH 0002H 001FH
	l	er0,	_dt$4[fp]
	l	er2,	_dt$4+02h[fp]
	push	xr0
	mov	r0,	#0a6h
	mov	r1,	#09bh
	mov	r2,	#044h
	mov	r3,	#03bh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	014h[er8]
	l	er6,	016h[er8]
	push	qr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	014h[er8]
	st	er2,	016h[er8]

;;	y = newAngle - param->angle;
CLINEA 0000H 0001H 0062H 0002H 001DH
	l	er0,	_newAngle$2[fp]
	l	er2,	_newAngle$2+02h[fp]
	push	xr0
	l	er0,	[er8]
	l	er2,	02h[er8]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_y$12[fp]
	st	er2,	_y$12+02h[fp]

;;	S = param->P[0][0] + R_measure;
CLINEA 0000H 0001H 0065H 0002H 0020H
	l	er0,	08h[er8]
	l	er2,	0ah[er8]
	push	xr0
	mov	r0,	#08fh
	mov	r1,	#0c2h
	mov	r2,	#0f5h
	mov	r3,	#03ch
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	mov	er4,	er0	;; _lS$16
	mov	er6,	er2	;; _lS$16

;;	K[0] = param->P[0][0] / S;
CLINEA 0000H 0001H 0068H 0002H 001BH
	l	er0,	08h[er8]
	l	er2,	0ah[er8]
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_K$20[fp]
	st	er2,	_K$20+02h[fp]

;;	K[1] = param->P[1][0] / S;
CLINEA 0000H 0001H 0069H 0002H 001BH
	l	er0,	010h[er8]
	l	er2,	012h[er8]
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_K$20+04h[fp]
	st	er2,	_K$20+06h[fp]

;;	param->angle += K[0] * y;
CLINEA 0000H 0001H 006CH 0002H 001AH
	l	er0,	_K$20[fp]
	l	er2,	_K$20+02h[fp]
	push	xr0
	l	er0,	_y$12[fp]
	l	er2,	_y$12+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	[er8]
	l	er6,	02h[er8]
	push	qr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	param->bias += K[1] * y;
CLINEA 0000H 0001H 006DH 0002H 0019H
	l	er0,	_K$20+04h[fp]
	l	er2,	_K$20+06h[fp]
	push	xr0
	l	er0,	_y$12[fp]
	l	er2,	_y$12+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	04h[er8]
	l	er6,	06h[er8]
	push	qr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	04h[er8]
	st	er2,	06h[er8]

;;	P00_temp = param->P[0][0];
CLINEA 0000H 0001H 0070H 0002H 001BH
	l	er0,	08h[er8]
	l	er2,	0ah[er8]
	st	er0,	_P00_temp$28[fp]
	st	er2,	_P00_temp$28+02h[fp]

;;	P01_temp = param->P[0][1];
CLINEA 0000H 0001H 0071H 0002H 001BH
	l	er0,	0ch[er8]
	l	er2,	0eh[er8]
	st	er0,	_P01_temp$32[fp]
	st	er2,	_P01_temp$32+02h[fp]

;;	param->P[0][0] -= K[0] * P00_temp;
CLINEA 0000H 0001H 0072H 0002H 0023H
	l	er0,	_K$20[fp]
	l	er2,	_K$20+02h[fp]
	push	xr0
	l	er0,	_P00_temp$28[fp]
	l	er2,	_P00_temp$28+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	08h[er8]
	l	er6,	0ah[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	08h[er8]
	st	er2,	0ah[er8]

;;	param->P[0][1] -= K[0] * P01_temp;
CLINEA 0000H 0001H 0073H 0002H 0023H
	l	er0,	_K$20[fp]
	l	er2,	_K$20+02h[fp]
	push	xr0
	l	er0,	_P01_temp$32[fp]
	l	er2,	_P01_temp$32+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	0ch[er8]
	l	er6,	0eh[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	0ch[er8]
	st	er2,	0eh[er8]

;;	param->P[1][0] -= K[1] * P00_temp;
CLINEA 0000H 0001H 0074H 0002H 0023H
	l	er0,	_K$20+04h[fp]
	l	er2,	_K$20+06h[fp]
	push	xr0
	l	er0,	_P00_temp$28[fp]
	l	er2,	_P00_temp$28+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	010h[er8]
	l	er6,	012h[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	010h[er8]
	st	er2,	012h[er8]

;;	param->P[1][1] -= K[1] * P01_temp;
CLINEA 0000H 0001H 0075H 0002H 0023H
	l	er0,	_K$20+04h[fp]
	l	er2,	_K$20+06h[fp]
	push	xr0
	l	er0,	_P01_temp$32[fp]
	l	er2,	_P01_temp$32+02h[fp]
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	014h[er8]
	l	er6,	016h[er8]
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	014h[er8]
	st	er2,	016h[er8]

;;	param->lastTime = now;
CLINEA 0000H 0001H 0077H 0002H 0017H
	l	er0,	_now$0[fp]
	l	er2,	_now$0+02h[fp]
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	020h[er8]
	st	er2,	022h[er8]

;;	return param->angle;
CLINEA 0000H 0001H 0079H 0002H 0015H
	l	er0,	[er8]
	l	er2,	02h[er8]
CBLOCKEND 339 2 122

;;}
CLINEA 0000H 0000H 007AH 0001H 0001H
	pop	er8
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 339 1 122
CFUNCTIONEND 339


	rseg $$kxg03_read$kxg03_new
CFUNCTION 340

_kxg03_read	:
CBLOCK 340 1 125

;;{
CLINEA 0000H 0001H 007DH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_size$4	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	push	xr4
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 340 2 125
CRET 000AH
CARGUMENT 46H 0001H 001CH "addr" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "data" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "size" 02H 00H 00H
CLOCAL 46H 0001H 0019H 0002H "rc" 02H 00H 00H
CLOCAL 46H 0001H 0018H 0002H "cnt" 02H 00H 00H

;;	Wire.beginTransmission(slave_addr);
CLINEA 0000H 0001H 0081H 0002H 0024H
	l	r0,	NEAR _slave_addr
	l	er2,	NEAR _Wire+08h
	bl	er2

;;	Wire.write_byte(addr);
CLINEA 0000H 0001H 0082H 0002H 0017H
	mov	r0,	r8
	l	er2,	NEAR _Wire+0ah
	bl	er2

;;	rc = Wire.endTransmission(false);
CLINEA 0000H 0000H 0083H 0002H 0022H
	mov	r0,	#00h
	l	er2,	NEAR _Wire+0eh
	bl	er2
CBLOCK 340 3 132
CBLOCKEND 340 3 138

;;	rc=Wire.requestFrom(slave_addr, size, true);
CLINEA 0000H 0000H 008BH 0002H 002DH
	mov	r2,	#01h
	l	r1,	_size$4[fp]
	l	r0,	NEAR _slave_addr
	l	er4,	NEAR _Wire+02h
	bl	er4
	mov	r5,	r0	;; _lrc$0

;;	cnt = 0;
CLINEA 0000H 0001H 008CH 0002H 0009H
	mov	r4,	#00h	;; _lcnt$2

;;	}
CLINEA 0000H 0000H 0091H 0002H 0002H
_$L10 :

;;	while(Wire.available())
CLINEA 0000H 0001H 008DH 0002H 0018H
	l	er0,	NEAR _Wire+04h
	bl	er0
	mov	er0,	er0
	beq	_$L7
CBLOCK 340 4 142

;;		data[cnt] = (uint8_t)Wire.read();
CLINEA 0000H 0000H 008FH 0003H 0023H
	l	er0,	NEAR _Wire+06h
	bl	er0
	mov	er6,	er0
	mov	r0,	r4
	mov	r1,	#00h
	add	er0,	er10
	st	r6,	[er0]

;;		cnt++;
CLINEA 0000H 0000H 0090H 0003H 0008H
	add	r4,	#01h
CBLOCKEND 340 4 145

;;	}
CLINEA 0000H 0000H 0091H 0002H 0002H
	bal	_$L10
_$L7 :

;;	return (rc);
CLINEA 0000H 0001H 0092H 0002H 000DH
	mov	r0,	r5
CBLOCKEND 340 2 147

;;}
CLINEA 0000H 0000H 0093H 0001H 0001H
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 340 1 147
CFUNCTIONEND 340


	rseg $$kxg03_write$kxg03_new
CFUNCTION 341

_kxg03_write	:
CBLOCK 341 1 150

;;{
CLINEA 0000H 0001H 0096H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_size$4	set	4
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	push	er4
	mov	r8,	r0
	mov	er10,	er2
CBLOCK 341 2 150
CRET 0008H
CARGUMENT 46H 0001H 001CH "addr" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "data" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "size" 02H 00H 00H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H

;;	Wire.beginTransmission(slave_addr);
CLINEA 0000H 0001H 0099H 0002H 0024H
	l	r0,	NEAR _slave_addr
	l	er2,	NEAR _Wire+08h
	bl	er2

;;	Wire.write_byte(addr);
CLINEA 0000H 0001H 009AH 0002H 0017H
	mov	r0,	r8
	l	er2,	NEAR _Wire+0ah
	bl	er2

;;	Wire.write(data, size);
CLINEA 0000H 0001H 009BH 0002H 0018H
	l	r2,	_size$4[fp]
	mov	r3,	#00h
	mov	er0,	er10
	l	er4,	NEAR _Wire+0ch
	bl	er4

;;	rc = Wire.endTransmission(true);
CLINEA 0000H 0000H 009CH 0002H 0021H
	mov	r0,	#01h
	l	er2,	NEAR _Wire+0eh
	bl	er2

;;	return (rc);
CLINEA 0000H 0001H 009DH 0002H 000DH
CBLOCKEND 341 2 158

;;}
CLINEA 0000H 0000H 009EH 0001H 0001H
	pop	er4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 341 1 158
CFUNCTIONEND 341


	rseg $$kxg03_init$kxg03_new
CFUNCTION 342

_kxg03_init	:
CBLOCK 342 1 161

;;{
CLINEA 0000H 0001H 00A1H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_reg$2	set	-1
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
CBLOCK 342 2 161
CRET 0004H
CARGUMENT 46H 0001H 0014H "i2c_addr" 02H 00H 00H
CLOCAL 46H 0001H 0014H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0001H 0001H 0002H "reg" 02H 00H 00H

;;	if(i2c_addr == KXG03_DEVICE_ADDRESS_4F)
CLINEA 0000H 0001H 00A5H 0002H 0028H
	cmp	r0,	#04fh
	bne	_$L13
CBLOCK 342 3 166

;;		slave_addr = KXG03_DEVICE_ADDRESS_4F;
CLINEA 0000H 0001H 00A7H 0003H 0027H
	mov	r0,	#04fh
CBLOCKEND 342 3 168

;;	} else {
CLINEA 0000H 0000H 00A8H 0002H 0009H
	bal	_$L15
_$L13 :
CBLOCK 342 4 168

;;		slave_addr = KXG03_DEVICE_ADDRESS_4E;
CLINEA 0000H 0001H 00A9H 0003H 0027H
	mov	r0,	#04eh
CBLOCKEND 342 4 171

;;	}
CLINEA 0000H 0000H 00ABH 0002H 0002H
_$L15 :
	st	r0,	NEAR _slave_addr

;;	rc = kxg03_read(KXG03_WHO_AM_I, &reg, sizeof(reg));
CLINEA 0000H 0000H 00ADH 0002H 0034H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#030h
	bl	_kxg03_read
	add	sp,	#2 

;;	if (rc != 1) {
CLINEA 0000H 0001H 00AEH 0002H 000FH
	cmp	r0,	#01h
CBLOCK 342 5 174
CBLOCKEND 342 5 179

;;}
CLINEA 0000H 0001H 00C5H 0001H 0001H
_$L12 :
	mov	sp,	fp
	pop	fp
	pop	pc

;;	} 
CLINEA 0000H 0000H 00B3H 0002H 0003H
CBLOCK 342 6 183
CBLOCKEND 342 6 186

;;	return (rc);  
CLINEA 0000H 0000H 00C4H 0002H 000FH
CBLOCKEND 342 1 197
CFUNCTIONEND 342


	rseg $$kxg03_get_val$kxg03_new
CFUNCTION 343

_kxg03_get_val	:
CBLOCK 343 1 200

;;{
CLINEA 0000H 0001H 00C8H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	-12
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-032
	push	xr8
	push	xr4
	mov	er8,	er0
CBLOCK 343 2 200
CRET 002AH
CARGUMENT 47H 0002H 0028H "val" 04H 03H 00H 00H 03H
CLOCAL 46H 0001H 001EH 0002H "rc" 02H 00H 00H
CLOCAL 43H 000CH 000CH 0002H "data" 04H 00H 06H 23H 00H
CUNIONTAG 0157H 0002H 0023H 0002H 0000000CH "_Notag"
CUNIONMEM 42H 0000000CH "d8" 05H 01H 0CH 00H 00H 00H
CUNIONMEM 43H 0000000CH "d16" 05H 01H 06H 00H 00H 08H

;;	rc = kxg03_read(KXG03_GYRO_XOUT_L,data.d8,12);
CLINEA 0000H 0000H 00D0H 0002H 002FH
	mov	r0,	#0ch
	push	r0
	mov	er2,	fp
	add	er2,	#-12
	mov	r0,	#02h
	bl	_kxg03_read
	add	sp,	#2 
	mov	r10,	r0	;; _lrc$0
CBLOCK 343 3 209
CBLOCKEND 343 3 212

;;	val[0] = (float)data.d16[0]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00D6H 0002H 0038H
	l	r0,	NEAR _kxg03_gyro_range
	mov	r1,	#00h
	add	er0,	er0
	l	er0,	NEAR _gyro_div[er0]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	er4,	_data$2[fp]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	val[1] = (float)data.d16[1]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00D7H 0002H 0038H
	l	er0,	_data$2+02h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_gyro_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _gyro_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	04h[er8]
	st	er2,	06h[er8]

;;	val[2] = (float)data.d16[2]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00D8H 0002H 0038H
	l	er0,	_data$2+04h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_gyro_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _gyro_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	08h[er8]
	st	er2,	0ah[er8]

;;	val[3] = (float)data.d16[3]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00D9H 0002H 0036H
	l	er0,	_data$2+06h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_acc_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _acc_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	0ch[er8]
	st	er2,	0eh[er8]

;;	val[4] = (float)data.d16[4]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00DAH 0002H 0036H
	l	er0,	_data$2+08h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_acc_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _acc_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	010h[er8]
	st	er2,	012h[er8]

;;	val[5] = (float)data.d16[5]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00DBH 0002H 0036H
	l	er0,	_data$2+0ah[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_acc_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _acc_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	014h[er8]
	st	er2,	016h[er8]

;;	return rc;
CLINEA 0000H 0001H 00DDH 0002H 000BH
	mov	r0,	r10
CBLOCKEND 343 2 222

;;}
CLINEA 0000H 0000H 00DEH 0001H 0001H
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 343 1 222
CFUNCTIONEND 343


	rseg $$kxg03_get_acc$kxg03_new
CFUNCTION 344

_kxg03_get_acc	:
CBLOCK 344 1 225

;;{
CLINEA 0000H 0001H 00E1H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	-6
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-014
	push	xr8
	push	xr4
	mov	er8,	er0
CBLOCK 344 2 225
CRET 0018H
CARGUMENT 47H 0002H 0028H "acc" 04H 03H 00H 00H 03H
CLOCAL 46H 0001H 001EH 0002H "rc" 02H 00H 00H
CLOCAL 43H 0006H 0006H 0002H "data" 04H 00H 06H 24H 00H
CUNIONTAG 0158H 0002H 0024H 0002H 00000006H "_Notag"
CUNIONMEM 42H 00000006H "d8" 05H 01H 06H 00H 00H 00H
CUNIONMEM 43H 00000006H "d16" 05H 01H 03H 00H 00H 08H

;;	rc = kxg03_read(KXG03_ACCEL_XOUT_L,data.d8,6);
CLINEA 0000H 0000H 00E8H 0002H 002FH
	mov	r0,	#06h
	push	r0
	mov	er2,	fp
	add	er2,	#-6
	mov	r0,	#08h
	bl	_kxg03_read
	add	sp,	#2 
	mov	r10,	r0	;; _lrc$0

;;	if(!rc) return rc;
CLINEA 0000H 0000H 00E9H 0002H 0013H
	cmp	r0,	#00h
	bne	_$L24

;;}
CLINEA 0000H 0001H 00F0H 0001H 0001H
_$L23 :
	mov	r0,	r10
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	if(!rc) return rc;
CLINEA 0000H 0000H 00E9H 0002H 0013H
_$L24 :

;;	acc[0] = (float)data.d16[0]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00EBH 0002H 0036H
	l	r0,	NEAR _kxg03_acc_range
	mov	r1,	#00h
	add	er0,	er0
	l	er0,	NEAR _acc_div[er0]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	er4,	_data$2[fp]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	acc[1] = (float)data.d16[1]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00ECH 0002H 0036H
	l	er0,	_data$2+02h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_acc_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _acc_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	st	er0,	-10[fp]
	st	er2,	-8[fp]
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr4
	l	er4,	-10[fp]
	l	er6,	-8[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	04h[er8]
	st	er2,	06h[er8]

;;	acc[2] = (float)data.d16[2]/acc_div[kxg03_acc_range];
CLINEA 0000H 0001H 00EDH 0002H 0036H
	l	er0,	_data$2+04h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_acc_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _acc_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	st	er0,	-14[fp]
	st	er2,	-12[fp]
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr4
	l	er4,	-14[fp]
	l	er6,	-12[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	08h[er8]
	st	er2,	0ah[er8]

;;	return rc;
CLINEA 0000H 0000H 00EFH 0002H 000BH
	b	_$L23
CBLOCKEND 344 1 240
CFUNCTIONEND 344


	rseg $$kxg03_get_gyro$kxg03_new
CFUNCTION 345

_kxg03_get_gyro	:
CBLOCK 345 1 243

;;{
CLINEA 0000H 0001H 00F3H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	-6
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-014
	push	xr8
	push	xr4
	mov	er8,	er0
CBLOCK 345 2 243
CRET 0018H
CARGUMENT 47H 0002H 0028H "gyro" 04H 03H 00H 00H 03H
CLOCAL 46H 0001H 001EH 0002H "rc" 02H 00H 00H
CLOCAL 43H 0006H 0006H 0002H "data" 04H 00H 06H 25H 00H
CUNIONTAG 0159H 0002H 0025H 0002H 00000006H "_Notag"
CUNIONMEM 42H 00000006H "d8" 05H 01H 06H 00H 00H 00H
CUNIONMEM 43H 00000006H "d16" 05H 01H 03H 00H 00H 08H

;;	rc = kxg03_read(KXG03_GYRO_XOUT_L,data.d8,6);
CLINEA 0000H 0000H 00FAH 0002H 002EH
	mov	r0,	#06h
	push	r0
	mov	er2,	fp
	add	er2,	#-6
	mov	r0,	#02h
	bl	_kxg03_read
	add	sp,	#2 
	mov	r10,	r0	;; _lrc$0

;;	if(!rc) return rc;
CLINEA 0000H 0000H 00FBH 0002H 0013H
	cmp	r0,	#00h
	bne	_$L29

;;}
CLINEA 0000H 0001H 0102H 0001H 0001H
_$L28 :
	mov	r0,	r10
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	if(!rc) return rc;
CLINEA 0000H 0000H 00FBH 0002H 0013H
_$L29 :

;;	gyro[0] = (float)data.d16[0]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00FDH 0002H 0039H
	l	r0,	NEAR _kxg03_gyro_range
	mov	r1,	#00h
	add	er0,	er0
	l	er0,	NEAR _gyro_div[er0]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	er4,	_data$2[fp]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	push	xr4
	bl	__fildu8sw
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	[er8]
	st	er2,	02h[er8]

;;	gyro[1] = (float)data.d16[1]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00FEH 0002H 0039H
	l	er0,	_data$2+02h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_gyro_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _gyro_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	st	er0,	-10[fp]
	st	er2,	-8[fp]
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr4
	l	er4,	-10[fp]
	l	er6,	-8[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	04h[er8]
	st	er2,	06h[er8]

;;	gyro[2] = (float)data.d16[2]/gyro_div[kxg03_gyro_range];
CLINEA 0000H 0001H 00FFH 0002H 0039H
	l	er0,	_data$2+04h[fp]
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	pop	xr0
	l	r4,	NEAR _kxg03_gyro_range
	mov	r5,	#00h
	add	er4,	er4
	l	er4,	NEAR _gyro_div[er4]
	mov	r6,	r5
	extbw	er6
	mov	r6,	r7
	st	er0,	-14[fp]
	st	er2,	-12[fp]
	push	xr4
	bl	__fildu8sw
	pop	xr4
	push	xr4
	l	er4,	-14[fp]
	l	er6,	-12[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	08h[er8]
	st	er2,	0ah[er8]

;;	return rc;
CLINEA 0000H 0000H 0101H 0002H 000BH
	b	_$L28
CBLOCKEND 345 1 258
CFUNCTIONEND 345


	rseg $$kxg03_err_msg_out$kxg03_new
CFUNCTION 346

_kxg03_err_msg_out	:
CBLOCK 346 1 274

;;{
CLINEA 0000H 0001H 0112H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 346 2 274
CARGUMENT 46H 0001H 0000H "id" 02H 00H 00H
CARGUMENT 46H 0001H 0000H "val" 02H 00H 00H
CBLOCKEND 346 2 279

;;}
CLINEA 0000H 0001H 0117H 0001H 0001H
	rt
CBLOCKEND 346 1 279
CFUNCTIONEND 346


	rseg $$kxg03_set_acc_avr$kxg03_new
CFUNCTION 347

_kxg03_set_acc_avr	:
CBLOCK 347 1 282

;;{
CLINEA 0000H 0001H 011AH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 347 2 282
CARGUMENT 46H 0001H 0014H "acc_avr" 02H 00H 00H
CLOCAL 47H 0002H 0024H 0002H "ret" 02H 00H 01H

;;	switch(acc_avr)
CLINEA 0000H 0001H 011CH 0002H 0010H
CBLOCK 347 3 285
	cmp	r0,	#00h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#010h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#020h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#030h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#040h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#050h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#060h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#070h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#080h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#090h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0a0h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0b0h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0c0h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0d0h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0e0h
	beq	_$L48

;;	switch(acc_avr)
CLINEA 0000H 0000H 011CH 0002H 0010H
	cmp	r0,	#0f0h
	beq	_$L48

;;		ret = -1;
CLINEA 0000H 0001H 0132H 0003H 000BH
	mov	er0,	#-1
CBLOCKEND 347 3 308

;;	return ret;
CLINEA 0000H 0001H 0135H 0002H 000CH
CBLOCKEND 347 2 310

;;}
CLINEA 0000H 0000H 0136H 0001H 0001H
	rt

;;	case KXG03_ACC_AVR_1:
CLINEA 0000H 0001H 011EH 0002H 0016H
_$L48 :

;;		kxg03_acc_avr = (acc_avr >> 4);
CLINEA 0000H 0001H 012EH 0003H 0021H
	srl	r0,	#04h
	st	r0,	NEAR _kxg03_acc_avr

;;		ret = 0;
CLINEA 0000H 0001H 012FH 0003H 000AH
	mov	er0,	#0 

;;		break;
CLINEA 0000H 0001H 0130H 0003H 0008H
	rt
CBLOCKEND 347 1 310
CFUNCTIONEND 347


	rseg $$kxg03_set_acc_range$kxg03_new
CFUNCTION 348

_kxg03_set_acc_range	:
CBLOCK 348 1 313

;;{
CLINEA 0000H 0001H 0139H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 348 2 313
CARGUMENT 46H 0001H 0014H "acc_range" 02H 00H 00H
CLOCAL 47H 0002H 0024H 0002H "ret" 02H 00H 01H

;;	switch(acc_range)
CLINEA 0000H 0001H 013BH 0002H 0012H
CBLOCK 348 3 316
	cmp	r0,	#00h
	beq	_$L70

;;	switch(acc_range)
CLINEA 0000H 0000H 013BH 0002H 0012H
	cmp	r0,	#04h
	beq	_$L70

;;	switch(acc_range)
CLINEA 0000H 0000H 013BH 0002H 0012H
	cmp	r0,	#08h
	beq	_$L70

;;	switch(acc_range)
CLINEA 0000H 0000H 013BH 0002H 0012H
	cmp	r0,	#0ch
	beq	_$L70

;;		ret = -1;
CLINEA 0000H 0001H 0145H 0003H 000BH
	mov	er0,	#-1
CBLOCKEND 348 3 327

;;	return ret;
CLINEA 0000H 0001H 0148H 0002H 000CH
CBLOCKEND 348 2 329

;;}
CLINEA 0000H 0000H 0149H 0001H 0001H
	rt

;;	case KXG03_ACC_RANGE_2G:
CLINEA 0000H 0001H 013DH 0002H 0019H
_$L70 :

;;		kxg03_acc_range = (acc_range >> 2);
CLINEA 0000H 0001H 0141H 0003H 0025H
	srl	r0,	#02h
	st	r0,	NEAR _kxg03_acc_range

;;		ret = 0;
CLINEA 0000H 0001H 0142H 0003H 000AH
	mov	er0,	#0 

;;		break;
CLINEA 0000H 0001H 0143H 0003H 0008H
	rt
CBLOCKEND 348 1 329
CFUNCTIONEND 348


	rseg $$kxg03_set_gyro_range$kxg03_new
CFUNCTION 349

_kxg03_set_gyro_range	:
CBLOCK 349 1 344

;;{
CLINEA 0000H 0001H 0158H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 349 2 344
CARGUMENT 46H 0001H 0014H "gyro_range" 02H 00H 00H
CLOCAL 47H 0002H 0024H 0002H "ret" 02H 00H 01H

;;	switch(gyro_range)
CLINEA 0000H 0001H 015AH 0002H 0013H
CBLOCK 349 3 347
	cmp	r0,	#00h
	beq	_$L80

;;	switch(gyro_range)
CLINEA 0000H 0000H 015AH 0002H 0013H
	cmp	r0,	#040h
	beq	_$L80

;;	switch(gyro_range)
CLINEA 0000H 0000H 015AH 0002H 0013H
	cmp	r0,	#080h
	beq	_$L80

;;	switch(gyro_range)
CLINEA 0000H 0000H 015AH 0002H 0013H
	cmp	r0,	#0c0h
	beq	_$L80

;;		ret = -1;
CLINEA 0000H 0001H 0164H 0003H 000BH
	mov	er0,	#-1
CBLOCKEND 349 3 358

;;	return ret;
CLINEA 0000H 0001H 0167H 0002H 000CH
CBLOCKEND 349 2 360

;;}
CLINEA 0000H 0000H 0168H 0001H 0001H
	rt

;;	case KXG03_GYRO_RANGE_256:
CLINEA 0000H 0001H 015CH 0002H 001BH
_$L80 :

;;		kxg03_gyro_range = (gyro_range >> 6);
CLINEA 0000H 0001H 0160H 0003H 0027H
	srl	r0,	#06h
	st	r0,	NEAR _kxg03_gyro_range

;;		ret = 0;
CLINEA 0000H 0001H 0161H 0003H 000AH
	mov	er0,	#0 

;;		break;
CLINEA 0000H 0001H 0162H 0003H 0008H
	rt
CBLOCKEND 349 1 360
CFUNCTIONEND 349


	rseg $$kxg03_set_gyro_bw$kxg03_new
CFUNCTION 350

_kxg03_set_gyro_bw	:
CBLOCK 350 1 374

;;{
CLINEA 0000H 0001H 0176H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 350 2 374
CARGUMENT 46H 0001H 0014H "gyro_bw" 02H 00H 00H
CLOCAL 47H 0002H 0024H 0002H "ret" 02H 00H 01H

;;	switch(gyro_bw)
CLINEA 0000H 0001H 0178H 0002H 0010H
CBLOCK 350 3 377
	cmp	r0,	#00h
	beq	_$L90

;;	switch(gyro_bw)
CLINEA 0000H 0000H 0178H 0002H 0010H
	cmp	r0,	#010h
	beq	_$L90

;;	switch(gyro_bw)
CLINEA 0000H 0000H 0178H 0002H 0010H
	cmp	r0,	#020h
	beq	_$L90

;;	switch(gyro_bw)
CLINEA 0000H 0000H 0178H 0002H 0010H
	cmp	r0,	#030h
	beq	_$L90

;;		ret = -1;
CLINEA 0000H 0001H 0182H 0003H 000BH
	mov	er0,	#-1
CBLOCKEND 350 3 388

;;	return ret;
CLINEA 0000H 0001H 0185H 0002H 000CH
CBLOCKEND 350 2 390

;;}
CLINEA 0000H 0000H 0186H 0001H 0001H
	rt

;;	case KXG03_GYRO_BW_10HZ:
CLINEA 0000H 0001H 017AH 0002H 0019H
_$L90 :

;;		kxg03_gyro_bw = (gyro_bw >> 4);
CLINEA 0000H 0001H 017EH 0003H 0021H
	srl	r0,	#04h
	st	r0,	NEAR _kxg03_gyro_bw

;;		ret = 0;
CLINEA 0000H 0001H 017FH 0003H 000AH
	mov	er0,	#0 

;;		break;
CLINEA 0000H 0001H 0180H 0003H 0008H
	rt
CBLOCKEND 350 1 390
CFUNCTIONEND 350


	rseg $$kxg03_sync_init$kxg03_new
CFUNCTION 352

_kxg03_sync_init	:
CBLOCK 352 1 419

;;{
CLINEA 0000H 0001H 01A3H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	-1
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
	push	xr8
	push	er4
	mov	r9,	r1
	mov	er10,	er2
CBLOCK 352 2 419
CRET 000AH
CARGUMENT 46H 0001H 0014H "slave_addr" 02H 00H 00H
CARGUMENT 46H 0001H 001DH "odr_rate" 02H 00H 00H
CARGUMENT 47H 0002H 0029H "func" 0AH 03H 00H 02H 5FH 01H 00H 00H 00H 00H 07H
CLOCAL 46H 0001H 0018H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0001H 0001H 0002H "data" 02H 00H 00H

;;	rc = kxg03.init(slave_addr);
CLINEA 0000H 0000H 01A7H 0002H 001DH
	l	er2,	NEAR _kxg03
	bl	er2

;;	data = 0xEF;
CLINEA 0000H 0001H 01AAH 0002H 000DH
	mov	r0,	#0efh
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_STDBY,&data,1);
CLINEA 0000H 0000H 01ABH 0002H 0027H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#043h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01ACH 0002H 0009H
	cmp	r0,	#00h
	beq	_$L95
CBLOCK 352 3 428

;;		kxg03_err_msg_out(0,rc);
CLINEA 0000H 0001H 01ADH 0003H 001AH
	mov	r1,	r0
	mov	r0,	#00h
	bl	_kxg03_err_msg_out
CBLOCKEND 352 3 431

;;}
CLINEA 0000H 0001H 01F6H 0001H 0001H
_$L94 :
	mov	r0,	r4
	pop	er4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	}
CLINEA 0000H 0000H 01AFH 0002H 0002H
_$L95 :

;;	rc = kxg03.read(KXG03_INT1_L,&data,1);
CLINEA 0000H 0000H 01B2H 0002H 0027H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#039h
	l	er4,	NEAR _kxg03+04h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc!=1) {
CLINEA 0000H 0001H 01B3H 0002H 000CH
	cmp	r0,	#01h
	beq	_$L97
CBLOCK 352 4 435

;;		kxg03_err_msg_out(1,rc);
CLINEA 0000H 0001H 01B4H 0003H 001AH
	mov	r1,	r0
	mov	r0,	#01h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01B5H 0003H 000CH
	bal	_$L94
CBLOCKEND 352 4 438

;;	}
CLINEA 0000H 0000H 01B6H 0002H 0002H
_$L97 :

;;	data = 0x03;
CLINEA 0000H 0001H 01B9H 0002H 000DH
	mov	r0,	#03h
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_INT_MASK1,&data,1);
CLINEA 0000H 0000H 01BAH 0002H 002BH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#048h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01BBH 0002H 0009H
	cmp	r0,	#00h
	beq	_$L99
CBLOCK 352 5 443

;;		kxg03_err_msg_out(2,rc);
CLINEA 0000H 0001H 01BCH 0003H 001AH
	mov	r1,	r0
	mov	r0,	#02h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01BDH 0003H 000CH
	bal	_$L94
CBLOCKEND 352 5 446

;;	}
CLINEA 0000H 0000H 01BEH 0002H 0002H
_$L99 :

;;	data = 0x0E;
CLINEA 0000H 0001H 01C1H 0002H 000DH
	mov	r0,	#0eh
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_INT_PIN_CTL,&data,1);
CLINEA 0000H 0000H 01C2H 0002H 002DH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#045h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01C3H 0002H 0009H
	cmp	r0,	#00h
	beq	_$L101
CBLOCK 352 6 451

;;		kxg03_err_msg_out(3,rc);
CLINEA 0000H 0001H 01C4H 0003H 001AH
	mov	r1,	r0
	mov	r0,	#03h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01C5H 0003H 000CH
	bal	_$L94
CBLOCKEND 352 6 454

;;	}
CLINEA 0000H 0000H 01C6H 0002H 0002H
_$L101 :

;;	data = 0x03;
CLINEA 0000H 0001H 01C9H 0002H 000DH
	mov	r0,	#03h
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_INT_PIN1_SEL,&data,1);
CLINEA 0000H 0000H 01CAH 0002H 002EH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#046h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01CBH 0002H 0009H
	cmp	r0,	#00h
	beq	_$L103
CBLOCK 352 7 459

;;		kxg03_err_msg_out(4,rc);
CLINEA 0000H 0001H 01CCH 0003H 001AH
	mov	r1,	r0
	mov	r0,	#04h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01CDH 0003H 000CH
	b	_$L94
CBLOCKEND 352 7 462

;;	}
CLINEA 0000H 0000H 01CEH 0002H 0002H
_$L103 :

;;	data = odr_rate | (kxg03_acc_avr<<4);
CLINEA 0000H 0001H 01D1H 0002H 0026H
	l	r0,	NEAR _kxg03_acc_avr
	sll	r0,	#04h
	or	r0,	r9
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_ACCEL_ODR_WAKE ,&data,1);
CLINEA 0000H 0000H 01D2H 0002H 0031H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#03eh
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01D3H 0002H 0009H
	cmp	r0,	#00h
	beq	_$L105
CBLOCK 352 8 467

;;		kxg03_err_msg_out(5,rc);
CLINEA 0000H 0001H 01D4H 0003H 001AH
	mov	r1,	r0
	mov	r0,	#05h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01D5H 0003H 000CH
	b	_$L94
CBLOCKEND 352 8 470

;;	}
CLINEA 0000H 0000H 01D6H 0002H 0002H
_$L105 :

;;	data = odr_rate | (kxg03_gyro_range<<6) | (kxg03_gyro_bw<<4);
CLINEA 0000H 0001H 01D9H 0002H 003EH
	l	r0,	NEAR _kxg03_gyro_bw
	sll	r0,	#04h
	l	r1,	NEAR _kxg03_gyro_range
	sll	r1,	#06h
	or	r1,	r9
	or	r1,	r0
	st	r1,	_data$2[fp]

;;	rc = kxg03.write(KXG03_GYRO_ODR_WAKE,&data,1);
CLINEA 0000H 0000H 01DAH 0002H 002FH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#041h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01DBH 0002H 0009H
	cmp	r0,	#00h
	beq	_$L107
CBLOCK 352 9 475

;;		kxg03_err_msg_out(6,rc);
CLINEA 0000H 0001H 01DCH 0003H 001AH
	mov	r1,	r0
	mov	r0,	#06h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01DDH 0003H 000CH
	b	_$L94
CBLOCKEND 352 9 478

;;	}
CLINEA 0000H 0000H 01DEH 0002H 0002H
_$L107 :

;;	data = (kxg03_acc_range<<2);
CLINEA 0000H 0001H 01E1H 0002H 001DH
	l	r0,	NEAR _kxg03_acc_range
	sll	r0,	#02h
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_ACCEL_CTL,&data,1);
CLINEA 0000H 0000H 01E2H 0002H 002BH
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#040h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01E3H 0002H 0009H
	cmp	r0,	#00h
	beq	_$L109
CBLOCK 352 10 483

;;		kxg03_err_msg_out(7,rc);
CLINEA 0000H 0001H 01E4H 0003H 001AH
	mov	r1,	r0
	mov	r0,	#07h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01E5H 0003H 000CH
	b	_$L94
CBLOCKEND 352 10 486

;;	}
CLINEA 0000H 0000H 01E6H 0002H 0002H
_$L109 :

;;	drv_pinMode(9,INPUT);
CLINEA 0000H 0001H 01EAH 0002H 0016H
	mov	r1,	#00h
	mov	r0,	#09h
	bl	_drv_pinMode

;;	drv_attachInterrupt(9,6, func, RISING,false, false);
CLINEA 0000H 0001H 01EBH 0002H 0035H
	mov	r0,	#00h
	push	r0
	push	r0
	mov	er0,	#3 
	push	er0
	mov	er2,	er10
	mov	r1,	#06h
	mov	r0,	#09h
	bl	_drv_attachInterrupt
	add	sp,	#6 

;;	data = 0xec;
CLINEA 0000H 0001H 01EEH 0002H 000DH
	mov	r0,	#0ech
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_STDBY,&data,1);
CLINEA 0000H 0000H 01EFH 0002H 0027H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#043h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 01F0H 0002H 0009H
	cmp	r0,	#00h
	bne	_$M15
	b	_$L94
_$M15 :
CBLOCK 352 11 496

;;		kxg03_err_msg_out(0,rc);
CLINEA 0000H 0001H 01F1H 0003H 001AH
	mov	r1,	r0
	mov	r0,	#00h
	bl	_kxg03_err_msg_out

;;		return rc;
CLINEA 0000H 0000H 01F2H 0003H 000CH
	b	_$L94
CBLOCKEND 352 11 499

;;	return rc;
CLINEA 0000H 0000H 01F5H 0002H 000BH
CBLOCKEND 352 1 502
CFUNCTIONEND 352


	rseg $$kxg03_angle_init$kxg03_new
CFUNCTION 353

_kxg03_angle_init	:
CBLOCK 353 1 521

;;{
CLINEA 0000H 0001H 0209H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_ax$4	set	4
	_ay$6	set	6
	_az$8	set	8
	_adata$0	set	-16
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-072
	push	xr8
	push	xr4
	push	bp
	mov	r9,	r1
	mov	er10,	er2
CBLOCK 353 2 521
CRET 0054H
CARGUMENT 47H 0001H 0014H "mode" 02H 00H 00H
CARGUMENT 47H 0001H 001DH "gx" 02H 00H 00H
CARGUMENT 47H 0001H 001EH "gy" 02H 00H 00H
CARGUMENT 47H 0001H 001FH "gz" 02H 00H 00H
CARGUMENT 43H 0001H 0004H "ax" 02H 00H 00H
CARGUMENT 43H 0001H 0006H "ay" 02H 00H 00H
CARGUMENT 43H 0001H 0008H "az" 02H 00H 00H
CLOCAL 43H 0008H 0010H 0002H "adata" 05H 01H 02H 00H 00H 03H

;;	angle_mode = mode;
CLINEA 0000H 0001H 020BH 0002H 0013H
	st	r0,	NEAR _angle_mode

;;	g[0] = abs(gx)-1;
CLINEA 0000H 0000H 020CH 0002H 0012H
	mov	r0,	r1
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#0ffh
	st	r0,	NEAR _g

;;	g[1] = abs(gy)-1;
CLINEA 0000H 0000H 020DH 0002H 0012H
	mov	r0,	r10
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#0ffh
	st	r0,	NEAR _g+01h

;;	g[2] = abs(gz)-1;
CLINEA 0000H 0000H 020EH 0002H 0012H
	mov	r0,	r11
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#0ffh
	st	r0,	NEAR _g+02h

;;	a[0] = abs(ax)+2;
CLINEA 0000H 0000H 020FH 0002H 0012H
	l	r0,	_ax$4[fp]
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#02h
	st	r0,	NEAR _a

;;	a[1] = abs(ay)+2;
CLINEA 0000H 0000H 0210H 0002H 0012H
	l	r0,	_ay$6[fp]
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#02h
	st	r0,	NEAR _a+01h

;;	a[2] = abs(az)+2;
CLINEA 0000H 0000H 0211H 0002H 0012H
	l	r0,	_az$8[fp]
	extbw	er0
	bl	_abs
	mov	bp,	er0
	mov	r0,	r12
	add	r0,	#02h
	st	r0,	NEAR _a+02h

;;	gf[0] = gx>0 ? 1 : -1;
CLINEA 0000H 0000H 0212H 0002H 0017H
	cmp	r9,	#00h
	bles	_$L114
	mov	er0,	#1 
	bal	_$L116
_$L114 :
	mov	er0,	#-1
_$L116 :
	st	r0,	NEAR _gf

;;	gf[1] = gy>0 ? 1 : -1;
CLINEA 0000H 0000H 0213H 0002H 0017H
	cmp	r10,	#00h
	bles	_$L117
	mov	er0,	#1 
	bal	_$L119
_$L117 :
	mov	er0,	#-1
_$L119 :
	st	r0,	NEAR _gf+01h

;;	gf[2] = gz>0 ? 1 : -1;
CLINEA 0000H 0000H 0214H 0002H 0017H
	cmp	r11,	#00h
	bles	_$L120
	mov	er0,	#1 
	bal	_$L122
_$L120 :
	mov	er0,	#-1
_$L122 :
	st	r0,	NEAR _gf+02h

;;	af[0] = ax>0 ? 1 : -1;
CLINEA 0000H 0000H 0215H 0002H 0017H
	l	r0,	_ax$4[fp]
	cmp	r0,	#00h
	bles	_$L123
	mov	er0,	#1 
	bal	_$L125
_$L123 :
	mov	er0,	#-1
_$L125 :
	st	r0,	NEAR _af

;;	af[1] = ay>0 ? 1 : -1;
CLINEA 0000H 0000H 0216H 0002H 0017H
	l	r0,	_ay$6[fp]
	cmp	r0,	#00h
	bles	_$L126
	mov	er0,	#1 
	bal	_$L128
_$L126 :
	mov	er0,	#-1
_$L128 :
	st	r0,	NEAR _af+01h

;;	af[2] = az>0 ? 1 : -1;
CLINEA 0000H 0000H 0217H 0002H 0017H
	l	r0,	_az$8[fp]
	cmp	r0,	#00h
	bles	_$L129
	mov	er0,	#1 
	bal	_$L131
_$L129 :
	mov	er0,	#-1
_$L131 :
	st	r0,	NEAR _af+02h

;;	kalman_init(&k[0]);
CLINEA 0000H 0001H 0219H 0002H 0014H
	mov	r0,	#BYTE1 OFFSET _k
	mov	r1,	#BYTE2 OFFSET _k
	bl	_kalman_init

;;	kalman_init(&k[1]);
CLINEA 0000H 0001H 021AH 0002H 0014H
	mov	r0,	#BYTE1 OFFSET (_k+024h)
	mov	r1,	#BYTE2 OFFSET (_k+024h)
	bl	_kalman_init

;;	kxg03_get_val(tmp);
CLINEA 0000H 0001H 021CH 0002H 0014H
	mov	r0,	#BYTE1 OFFSET _tmp
	mov	r1,	#BYTE2 OFFSET _tmp
	bl	_kxg03_get_val

;;	raw[0] = tmp[g[0]]*gf[0];
CLINEA 0000H 0001H 021DH 0002H 001AH
	l	r0,	NEAR _g
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-12[fp]
	st	er2,	-10[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-36[fp]
	st	er2,	-34[fp]
	pop	xr0
	st	er0,	-12[fp]
	st	er2,	-10[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-12[fp]
	l	er6,	-10[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw
	st	er2,	NEAR _raw+02h

;;	raw[1] = tmp[g[1]]*gf[1];
CLINEA 0000H 0001H 021EH 0002H 001AH
	l	r0,	NEAR _g+01h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf+01h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-16[fp]
	st	er2,	-14[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-40[fp]
	st	er2,	-38[fp]
	pop	xr0
	st	er0,	-16[fp]
	st	er2,	-14[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-16[fp]
	l	er6,	-14[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+04h
	st	er2,	NEAR _raw+06h

;;	raw[2] = tmp[g[2]]*gf[2];
CLINEA 0000H 0001H 021FH 0002H 001AH
	l	r0,	NEAR _g+02h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf+02h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-20[fp]
	st	er2,	-18[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-44[fp]
	st	er2,	-42[fp]
	pop	xr0
	st	er0,	-20[fp]
	st	er2,	-18[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-20[fp]
	l	er6,	-18[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+08h
	st	er2,	NEAR _raw+0ah

;;	raw[3] = tmp[a[0]]*af[0];
CLINEA 0000H 0001H 0220H 0002H 001AH
	l	r0,	NEAR _a
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-24[fp]
	st	er2,	-22[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-48[fp]
	st	er2,	-46[fp]
	pop	xr0
	st	er0,	-24[fp]
	st	er2,	-22[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-24[fp]
	l	er6,	-22[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+0ch
	st	er2,	NEAR _raw+0eh

;;	raw[4] = tmp[a[1]]*af[1];
CLINEA 0000H 0001H 0221H 0002H 001AH
	l	r0,	NEAR _a+01h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af+01h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-28[fp]
	st	er2,	-26[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-52[fp]
	st	er2,	-50[fp]
	pop	xr0
	st	er0,	-28[fp]
	st	er2,	-26[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-28[fp]
	l	er6,	-26[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+010h
	st	er2,	NEAR _raw+012h

;;	raw[5] = tmp[a[2]]*af[2];
CLINEA 0000H 0001H 0222H 0002H 001AH
	l	r0,	NEAR _a+02h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af+02h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-32[fp]
	st	er2,	-30[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-56[fp]
	st	er2,	-54[fp]
	pop	xr0
	st	er0,	-32[fp]
	st	er2,	-30[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	l	er4,	-32[fp]
	l	er6,	-30[fp]
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+014h
	st	er2,	NEAR _raw+016h

;;	switch(angle_mode)
CLINEA 0000H 0001H 0223H 0002H 0013H
	l	r0,	NEAR _angle_mode
CBLOCK 353 3 548
	cmp	r0,	#011h
	beq	_$L137

;;	switch(angle_mode)
CLINEA 0000H 0000H 0223H 0002H 0013H
	cmp	r0,	#012h
	bne	_$M17
	b	_$L152
_$M17 :

;;	}
CLINEA 0000H 0000H 0235H 0002H 0002H
_$L135 :
CBLOCKEND 353 2 567

;;}
CLINEA 0000H 0000H 0237H 0001H 0001H
	pop	bp
	pop	xr4
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc

;;	case KXG03_MODE_KALMAN | KXG03_MODE_PR:
CLINEA 0000H 0001H 0225H 0002H 0028H
_$L137 :

;;		adata[0] = atan2(raw[3],sqrt(sq(raw[4])+sq(raw[5]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0226H 0003H 0044H
	l	er0,	NEAR _raw+0ch
	l	er2,	NEAR _raw+0eh
	st	er0,	-60[fp]
	st	er2,	-58[fp]
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+014h
	l	er6,	NEAR _raw+016h
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-60[fp]
	l	er2,	-58[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0[fp]
	st	er2,	_adata$0+02h[fp]

;;		adata[1] = atan2(raw[4],fabs(raw[5])) * RAD_TO_DEG;
CLINEA 0000H 0000H 0227H 0003H 0035H
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	st	er0,	-64[fp]
	st	er2,	-62[fp]
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_fabs
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-64[fp]
	l	er2,	-62[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]

;;		if((raw[5] < 0) && ( raw[4] > 0)) adata[1] = 180-adata[1];
CLINEA 0000H 0001H 0228H 0003H 003CH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L138
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	ble	_$L138
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#043h
	push	xr0
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]
_$L138 :

;;		if((raw[5] < 0) && ( raw[4] < 0)) adata[1] = -180-adata[1];
CLINEA 0000H 0001H 0229H 0003H 003DH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L145
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L145
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#0c3h
	push	xr0
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]
_$L145 :

;;		kalman_set(&k[0],adata[0]);
CLINEA 0000H 0001H 022AH 0003H 001DH
	l	er0,	_adata$0[fp]
	l	er2,	_adata$0+02h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET _k
	mov	r1,	#BYTE2 OFFSET _k
	bl	_kalman_set
	add	sp,	#4 

;;		kalman_set(&k[1],adata[1]);
CLINEA 0000H 0001H 022BH 0003H 001DH
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET (_k+024h)
	mov	r1,	#BYTE2 OFFSET (_k+024h)
	bl	_kalman_set
	add	sp,	#4 

;;		break;
CLINEA 0000H 0001H 022CH 0003H 0008H
	b	_$L135

;;	case KXG03_MODE_KALMAN | KXG03_MODE_PS:
CLINEA 0000H 0001H 022DH 0002H 0028H
_$L152 :

;;		adata[0] = atan2(raw[3],sqrt(sq(raw[4])+sq(raw[5]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 022EH 0003H 0044H
	l	er0,	NEAR _raw+0ch
	l	er2,	NEAR _raw+0eh
	st	er0,	-68[fp]
	st	er2,	-66[fp]
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+014h
	l	er6,	NEAR _raw+016h
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-68[fp]
	l	er2,	-66[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0[fp]
	st	er2,	_adata$0+02h[fp]

;;		adata[1] = atan2(raw[4],sqrt(sq(raw[5])+sq(raw[3]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 022FH 0003H 0044H
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	st	er0,	-72[fp]
	st	er2,	-70[fp]
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+0ch
	l	er6,	NEAR _raw+0eh
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-72[fp]
	l	er2,	-70[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]

;;		if((raw[5] < 0) && ( raw[4] > 0)) adata[1] = 180-adata[1];
CLINEA 0000H 0001H 0230H 0003H 003CH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L153
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	ble	_$L153
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#043h
	push	xr0
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]
_$L153 :

;;		if((raw[5] < 0) && ( raw[4] < 0)) adata[1] = -180-adata[1];
CLINEA 0000H 0001H 0231H 0003H 003DH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L160
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L160
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#0c3h
	push	xr0
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$0+04h[fp]
	st	er2,	_adata$0+06h[fp]
_$L160 :

;;		kalman_set(&k[0],adata[0]);
CLINEA 0000H 0001H 0232H 0003H 001DH
	l	er0,	_adata$0[fp]
	l	er2,	_adata$0+02h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET _k
	mov	r1,	#BYTE2 OFFSET _k
	bl	_kalman_set
	add	sp,	#4 

;;		kalman_set(&k[1],adata[1]);
CLINEA 0000H 0001H 0233H 0003H 001DH
	l	er0,	_adata$0+04h[fp]
	l	er2,	_adata$0+06h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET (_k+024h)
	mov	r1,	#BYTE2 OFFSET (_k+024h)
	bl	_kalman_set
	add	sp,	#4 

;;		break;
CLINEA 0000H 0001H 0234H 0003H 0008H
	b	_$L135
CBLOCKEND 353 3 565
CBLOCKEND 353 1 567
CFUNCTIONEND 353


	rseg $$kxg03_get_angle$kxg03_new
CFUNCTION 354

_kxg03_get_angle	:
CBLOCK 354 1 580

;;{
CLINEA 0000H 0001H 0244H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_kdata$0	set	-16
	_adata$8	set	-24
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-088
	push	xr4
	push	bp
	push	er8
	mov	er8,	er0
CBLOCK 354 2 580
CRET 0062H
CARGUMENT 47H 0002H 0028H "angle" 04H 03H 00H 00H 03H
CLOCAL 43H 0008H 0010H 0002H "kdata" 05H 01H 02H 00H 00H 03H
CLOCAL 43H 0008H 0018H 0002H "adata" 05H 01H 02H 00H 00H 03H
CLOCAL 47H 0002H 002AH 0002H "i" 02H 00H 01H

;;	int i=0;
CLINEA 0000H 0001H 0246H 0002H 0009H
	mov	bp,	#0 	;; _li$16

;;	kxg03_get_val(tmp);
CLINEA 0000H 0001H 0247H 0002H 0014H
	mov	r0,	#BYTE1 OFFSET _tmp
	mov	r1,	#BYTE2 OFFSET _tmp
	bl	_kxg03_get_val

;;	raw[0] = tmp[g[0]]*gf[0];
CLINEA 0000H 0001H 0248H 0002H 001AH
	l	r0,	NEAR _g
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-12[fp]
	st	er2,	-10[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-36[fp]
	st	er2,	-34[fp]
	pop	xr0
	st	er0,	-12[fp]
	st	er2,	-10[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-12[fp]
	l	er6,	-10[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw
	st	er2,	NEAR _raw+02h

;;	raw[1] = tmp[g[1]]*gf[1];
CLINEA 0000H 0001H 0249H 0002H 001AH
	l	r0,	NEAR _g+01h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf+01h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-16[fp]
	st	er2,	-14[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-40[fp]
	st	er2,	-38[fp]
	pop	xr0
	st	er0,	-16[fp]
	st	er2,	-14[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-16[fp]
	l	er6,	-14[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+04h
	st	er2,	NEAR _raw+06h

;;	raw[2] = tmp[g[2]]*gf[2];
CLINEA 0000H 0001H 024AH 0002H 001AH
	l	r0,	NEAR _g+02h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _gf+02h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-20[fp]
	st	er2,	-18[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-44[fp]
	st	er2,	-42[fp]
	pop	xr0
	st	er0,	-20[fp]
	st	er2,	-18[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-20[fp]
	l	er6,	-18[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+08h
	st	er2,	NEAR _raw+0ah

;;	raw[3] = tmp[a[0]]*af[0];
CLINEA 0000H 0001H 024BH 0002H 001AH
	l	r0,	NEAR _a
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-24[fp]
	st	er2,	-22[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-48[fp]
	st	er2,	-46[fp]
	pop	xr0
	st	er0,	-24[fp]
	st	er2,	-22[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-24[fp]
	l	er6,	-22[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+0ch
	st	er2,	NEAR _raw+0eh

;;	raw[4] = tmp[a[1]]*af[1];
CLINEA 0000H 0001H 024CH 0002H 001AH
	l	r0,	NEAR _a+01h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af+01h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-28[fp]
	st	er2,	-26[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-52[fp]
	st	er2,	-50[fp]
	pop	xr0
	st	er0,	-28[fp]
	st	er2,	-26[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	push	xr4
	l	er4,	-28[fp]
	l	er6,	-26[fp]
	mov	er0,	er4
	mov	er2,	er6
	pop	xr4
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+010h
	st	er2,	NEAR _raw+012h

;;	raw[5] = tmp[a[2]]*af[2];
CLINEA 0000H 0001H 024DH 0002H 001AH
	l	r0,	NEAR _a+02h
	extbw	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	mov	er4,	er0
	l	r0,	NEAR _af+02h
	extbw	er0
	mov	r2,	r1
	mov	r3,	r1
	st	er0,	-32[fp]
	st	er2,	-30[fp]
	push	xr0
	bl	__fildu8sw
	st	er0,	-56[fp]
	st	er2,	-54[fp]
	pop	xr0
	st	er0,	-32[fp]
	st	er2,	-30[fp]
	l	er0,	NEAR _tmp[er4]
	l	er2,	NEAR _tmp+02h[er4]
	push	xr0
	l	er4,	-32[fp]
	l	er6,	-30[fp]
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _raw+014h
	st	er2,	NEAR _raw+016h

;;	switch(angle_mode)
CLINEA 0000H 0001H 024EH 0002H 0013H
	l	r0,	NEAR _angle_mode
CBLOCK 354 3 591
	cmp	r0,	#01h
	bne	_$M19
	b	_$L173
_$M19 :

;;	switch(angle_mode)
CLINEA 0000H 0000H 024EH 0002H 0013H
	cmp	r0,	#02h
	bne	_$M20
	b	_$L174
_$M20 :

;;	switch(angle_mode)
CLINEA 0000H 0000H 024EH 0002H 0013H
	cmp	r0,	#011h
	bne	_$M21
	b	_$L175
_$M21 :

;;	switch(angle_mode)
CLINEA 0000H 0000H 024EH 0002H 0013H
	cmp	r0,	#012h
	bne	_$M22
	b	_$L190
_$M22 :

;;	}
CLINEA 0000H 0000H 0268H 0002H 0002H
_$L171 :

;;	if(kxg03_out_flag & KXG03_KALMAN_OUT)
CLINEA 0000H 0001H 0269H 0002H 0026H
	tb	NEAR _kxg03_out_flag.0
	beq	_$L205
CBLOCK 354 4 618

;;		angle[i]=kdata[0],i++;
CLINEA 0000H 0001H 026BH 0003H 0018H
	l	er0,	_kdata$0[fp]
	l	er2,	_kdata$0+02h[fp]
	st	er0,	[er8]
	st	er2,	02h[er8]

;;		angle[i]=kdata[1],i++;
CLINEA 0000H 0001H 026CH 0003H 0018H
	l	er0,	_kdata$0+04h[fp]
	l	er2,	_kdata$0+06h[fp]
	st	er0,	04h[er8]
	st	er2,	06h[er8]
	mov	bp,	#2 	;; _li$16
CBLOCKEND 354 4 621

;;	}
CLINEA 0000H 0000H 026DH 0002H 0002H
_$L205 :

;;	if(kxg03_out_flag & KXG03_DEG_OUT)
CLINEA 0000H 0001H 026EH 0002H 0023H
	tb	NEAR _kxg03_out_flag.3
	beq	_$L207
CBLOCK 354 5 623

;;		angle[i]=adata[0],i++;
CLINEA 0000H 0001H 0270H 0003H 0018H
	mov	er0,	bp
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	_adata$8[fp]
	l	er6,	_adata$8+02h[fp]
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
	mov	er0,	bp	;; _li$16

;;		angle[i]=adata[1],i++;
CLINEA 0000H 0001H 0271H 0003H 0018H
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	_adata$8+04h[fp]
	l	er6,	_adata$8+06h[fp]
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
CBLOCKEND 354 5 626

;;	}
CLINEA 0000H 0000H 0272H 0002H 0002H
_$L207 :

;;	if(kxg03_out_flag & KXG03_GYRO_OUT)
CLINEA 0000H 0001H 0273H 0002H 0024H
	tb	NEAR _kxg03_out_flag.2
	beq	_$L209
CBLOCK 354 6 628

;;		angle[i]=raw[0],i++;
CLINEA 0000H 0001H 0275H 0003H 0016H
	mov	er0,	bp
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw
	l	er6,	NEAR _raw+02h
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
	mov	er0,	bp	;; _li$16

;;		angle[i]=raw[1],i++;
CLINEA 0000H 0001H 0276H 0003H 0016H
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw+04h
	l	er6,	NEAR _raw+06h
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
	mov	er0,	bp	;; _li$16

;;		angle[i]=raw[2],i++;
CLINEA 0000H 0001H 0277H 0003H 0016H
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw+08h
	l	er6,	NEAR _raw+0ah
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
CBLOCKEND 354 6 632

;;	}
CLINEA 0000H 0000H 0278H 0002H 0002H
_$L209 :

;;	if(kxg03_out_flag & KXG03_ACC_OUT)
CLINEA 0000H 0001H 0279H 0002H 0023H
	tb	NEAR _kxg03_out_flag.1
	beq	_$L211
CBLOCK 354 7 634

;;		angle[i]=raw[3],i++;
CLINEA 0000H 0001H 027BH 0003H 0016H
	mov	er0,	bp
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw+0ch
	l	er6,	NEAR _raw+0eh
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
	mov	er0,	bp	;; _li$16

;;		angle[i]=raw[4],i++;
CLINEA 0000H 0001H 027CH 0003H 0016H
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw+010h
	l	er6,	NEAR _raw+012h
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
	mov	er0,	bp	;; _li$16

;;		angle[i]=raw[5],i++;
CLINEA 0000H 0001H 027DH 0003H 0016H
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er8
	l	er4,	NEAR _raw+014h
	l	er6,	NEAR _raw+016h
	st	er4,	[er0]
	st	er6,	02h[er0]
	add	bp,	#1 
CBLOCKEND 354 7 638

;;	}
CLINEA 0000H 0000H 027EH 0002H 0002H
_$L211 :

;;	return i;
CLINEA 0000H 0001H 027FH 0002H 000AH
	mov	er0,	bp
CBLOCKEND 354 2 640

;;}
CLINEA 0000H 0000H 0280H 0001H 0001H
	pop	er8
	pop	bp
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc

;;	case KXG03_MODE_PR:
CLINEA 0000H 0001H 0250H 0002H 0014H
_$L173 :

;;		adata[0] = atan2(raw[0],sqrt(sq(raw[1])+sq(raw[2]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0251H 0003H 0044H
	l	er0,	NEAR _raw
	l	er2,	NEAR _raw+02h
	st	er0,	-60[fp]
	st	er2,	-58[fp]
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+08h
	l	er6,	NEAR _raw+0ah
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-60[fp]
	l	er2,	-58[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8[fp]
	st	er2,	_adata$8+02h[fp]

;;		adata[1] = atan2(raw[1],fabs(raw[2])) * RAD_TO_DEG;
CLINEA 0000H 0000H 0252H 0003H 0035H
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	st	er0,	-64[fp]
	st	er2,	-62[fp]
	l	er0,	NEAR _raw+08h
	l	er2,	NEAR _raw+0ah
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_fabs
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-64[fp]
	l	er2,	-62[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]

;;		break;
CLINEA 0000H 0001H 0253H 0003H 0008H
	b	_$L171

;;	case KXG03_MODE_PS:
CLINEA 0000H 0001H 0254H 0002H 0014H
_$L174 :

;;		adata[0] = atan2(raw[0],sqrt(sq(raw[1])+sq(raw[2]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0255H 0003H 0044H
	l	er0,	NEAR _raw
	l	er2,	NEAR _raw+02h
	st	er0,	-68[fp]
	st	er2,	-66[fp]
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+08h
	l	er6,	NEAR _raw+0ah
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-68[fp]
	l	er2,	-66[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8[fp]
	st	er2,	_adata$8+02h[fp]

;;		adata[1] = atan2(raw[1],sqrt(sq(raw[0])+sq(raw[2]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0256H 0003H 0044H
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	st	er0,	-72[fp]
	st	er2,	-70[fp]
	l	er0,	NEAR _raw
	l	er2,	NEAR _raw+02h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+08h
	l	er6,	NEAR _raw+0ah
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	push	xr0
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-72[fp]
	l	er2,	-70[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]

;;		break;
CLINEA 0000H 0001H 0257H 0003H 0008H
	b	_$L171

;;	case KXG03_MODE_KALMAN | KXG03_MODE_PR:
CLINEA 0000H 0001H 0258H 0002H 0028H
_$L175 :

;;		adata[0] = atan2(raw[3],sqrt(sq(raw[4])+sq(raw[5]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0259H 0003H 0044H
	l	er0,	NEAR _raw+0ch
	l	er2,	NEAR _raw+0eh
	st	er0,	-76[fp]
	st	er2,	-74[fp]
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+014h
	l	er6,	NEAR _raw+016h
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-76[fp]
	l	er2,	-74[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8[fp]
	st	er2,	_adata$8+02h[fp]

;;		adata[1] = atan2(raw[4],fabs(raw[5])) * RAD_TO_DEG;
CLINEA 0000H 0000H 025AH 0003H 0035H
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	st	er0,	-80[fp]
	st	er2,	-78[fp]
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_fabs
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-80[fp]
	l	er2,	-78[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]

;;		if((raw[5] < 0) && ( raw[4] > 0)) adata[1] = 180-adata[1];
CLINEA 0000H 0001H 025BH 0003H 003CH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L176
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	ble	_$L176
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#043h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]
_$L176 :

;;		if((raw[5] < 0) && ( raw[4] < 0)) adata[1] = -180-adata[1];
CLINEA 0000H 0001H 025CH 0003H 003DH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L183
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L183
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#0c3h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]
_$L183 :

;;		kdata[0]=kalman_cal(&k[0],adata[0],raw[0]);
CLINEA 0000H 0000H 025DH 0003H 002DH
	l	er0,	NEAR _raw
	l	er2,	NEAR _raw+02h
	push	xr0
	l	er0,	_adata$8[fp]
	l	er2,	_adata$8+02h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET _k
	mov	r1,	#BYTE2 OFFSET _k
	bl	_kalman_cal
	add	sp,	#8 
	st	er0,	_kdata$0[fp]
	st	er2,	_kdata$0+02h[fp]

;;		kdata[1]=kalman_cal(&k[1],adata[1],raw[1]);
CLINEA 0000H 0000H 025EH 0003H 002DH
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET (_k+024h)
	mov	r1,	#BYTE2 OFFSET (_k+024h)
	bl	_kalman_cal
	add	sp,	#8 
	st	er0,	_kdata$0+04h[fp]
	st	er2,	_kdata$0+06h[fp]

;;		break;
CLINEA 0000H 0001H 025FH 0003H 0008H
	b	_$L171

;;	case KXG03_MODE_KALMAN | KXG03_MODE_PS:
CLINEA 0000H 0001H 0260H 0002H 0028H
_$L190 :

;;		adata[0] = atan2(raw[3],sqrt(sq(raw[4])+sq(raw[5]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0261H 0003H 0044H
	l	er0,	NEAR _raw+0ch
	l	er2,	NEAR _raw+0eh
	st	er0,	-84[fp]
	st	er2,	-82[fp]
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+014h
	l	er6,	NEAR _raw+016h
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-84[fp]
	l	er2,	-82[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8[fp]
	st	er2,	_adata$8+02h[fp]

;;		adata[1] = atan2(raw[4],sqrt(sq(raw[5])+sq(raw[3]))) * RAD_TO_DEG;
CLINEA 0000H 0000H 0262H 0003H 0044H
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	st	er0,	-88[fp]
	st	er2,	-86[fp]
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	l	er4,	NEAR _raw+0ch
	l	er6,	NEAR _raw+0eh
	push	xr4
	push	xr4
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	push	xr0
	push	xr4
	bl	__faddu8sw
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_sqrt
	add	sp,	#8 
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	l	er0,	-88[fp]
	l	er2,	-86[fp]
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	er0,	fp
	add	er0,	#-8
	bl	_atan2
	add	sp,	#16
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#0f8h
	mov	r1,	#0c1h
	mov	r2,	#063h
	mov	r3,	#01ah
	mov	r4,	#0dch
	mov	r5,	#0a5h
	mov	r6,	#04ch
	mov	r7,	#040h
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dtofu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]

;;		kdata[0]=kalman_cal(&k[0],adata[0],raw[0]);
CLINEA 0000H 0000H 0263H 0003H 002DH
	l	er0,	NEAR _raw
	l	er2,	NEAR _raw+02h
	push	xr0
	l	er0,	_adata$8[fp]
	l	er2,	_adata$8+02h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET _k
	mov	r1,	#BYTE2 OFFSET _k
	bl	_kalman_cal
	add	sp,	#8 
	st	er0,	_kdata$0[fp]
	st	er2,	_kdata$0+02h[fp]

;;		kdata[1]=kalman_cal(&k[1],adata[1],raw[1]);
CLINEA 0000H 0000H 0264H 0003H 002DH
	l	er0,	NEAR _raw+04h
	l	er2,	NEAR _raw+06h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	mov	r0,	#BYTE1 OFFSET (_k+024h)
	mov	r1,	#BYTE2 OFFSET (_k+024h)
	bl	_kalman_cal
	add	sp,	#8 
	st	er0,	_kdata$0+04h[fp]
	st	er2,	_kdata$0+06h[fp]

;;		if((raw[5] < 0) && ( raw[4] > 0)) adata[1] = 180-adata[1];
CLINEA 0000H 0001H 0265H 0003H 003CH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L191
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	ble	_$L191
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#043h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]
_$L191 :

;;		if((raw[5] < 0) && ( raw[4] < 0)) adata[1] = -180-adata[1];
CLINEA 0000H 0001H 0266H 0003H 003DH
	l	er0,	NEAR _raw+014h
	l	er2,	NEAR _raw+016h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	blt	_$M23
	b	_$L171
_$M23 :
	l	er0,	NEAR _raw+010h
	l	er2,	NEAR _raw+012h
	push	xr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	blt	_$M24
	b	_$L171
_$M24 :
	mov	er0,	#0 
	mov	r2,	#034h
	mov	r3,	#0c3h
	push	xr0
	l	er0,	_adata$8+04h[fp]
	l	er2,	_adata$8+06h[fp]
	push	xr0
	bl	__fsubu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	_adata$8+04h[fp]
	st	er2,	_adata$8+06h[fp]

;;		break;
CLINEA 0000H 0001H 0267H 0003H 0008H
	b	_$L171
CBLOCKEND 354 3 616
CBLOCKEND 354 1 640
CFUNCTIONEND 354


	rseg $$kxg03_set_kalman_out$kxg03_new
CFUNCTION 355

_kxg03_set_kalman_out	:
CBLOCK 355 1 642

;;{
CLINEA 0000H 0001H 0282H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 355 2 642
CARGUMENT 46H 0001H 0014H "kalman_out" 02H 00H 00H

;;	if(kalman_out) kxg03_out_flag |= KXG03_KALMAN_OUT;
CLINEA 0000H 0001H 0283H 0002H 0033H
	cmp	r0,	#00h
	beq	_$L214
	sb	NEAR _kxg03_out_flag.0

;;	else kxg03_out_flag &= ~KXG03_KALMAN_OUT;
CLINEA 0000H 0001H 0284H 0002H 002AH
	rt
_$L214 :
	rb	NEAR _kxg03_out_flag.0
CBLOCKEND 355 2 645

;;}
CLINEA 0000H 0001H 0285H 0001H 0001H
	rt
CBLOCKEND 355 1 645
CFUNCTIONEND 355


	rseg $$kxg03_set_acc_out$kxg03_new
CFUNCTION 356

_kxg03_set_acc_out	:
CBLOCK 356 1 647

;;{
CLINEA 0000H 0001H 0287H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 356 2 647
CARGUMENT 46H 0001H 0014H "acc_out" 02H 00H 00H

;;	if(acc_out) kxg03_out_flag |= KXG03_ACC_OUT;
CLINEA 0000H 0001H 0288H 0002H 002DH
	cmp	r0,	#00h
	beq	_$L218
	sb	NEAR _kxg03_out_flag.1

;;	else kxg03_out_flag &= ~KXG03_ACC_OUT;
CLINEA 0000H 0001H 0289H 0002H 0027H
	rt
_$L218 :
	rb	NEAR _kxg03_out_flag.1
CBLOCKEND 356 2 650

;;}
CLINEA 0000H 0001H 028AH 0001H 0001H
	rt
CBLOCKEND 356 1 650
CFUNCTIONEND 356


	rseg $$kxg03_set_gyro_out$kxg03_new
CFUNCTION 357

_kxg03_set_gyro_out	:
CBLOCK 357 1 652

;;{
CLINEA 0000H 0001H 028CH 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 357 2 652
CARGUMENT 46H 0001H 0014H "gyro_out" 02H 00H 00H

;;	if(gyro_out) kxg03_out_flag |= KXG03_GYRO_OUT;
CLINEA 0000H 0001H 028DH 0002H 002FH
	cmp	r0,	#00h
	beq	_$L222
	sb	NEAR _kxg03_out_flag.2

;;	else kxg03_out_flag &= ~KXG03_GYRO_OUT;
CLINEA 0000H 0001H 028EH 0002H 0028H
	rt
_$L222 :
	rb	NEAR _kxg03_out_flag.2
CBLOCKEND 357 2 655

;;}
CLINEA 0000H 0001H 028FH 0001H 0001H
	rt
CBLOCKEND 357 1 655
CFUNCTIONEND 357


	rseg $$kxg03_set_deg_out$kxg03_new
CFUNCTION 358

_kxg03_set_deg_out	:
CBLOCK 358 1 657

;;{
CLINEA 0000H 0001H 0291H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
;;*****************************************

CBLOCK 358 2 657
CARGUMENT 46H 0001H 0014H "deg_out" 02H 00H 00H

;;	if(deg_out) kxg03_out_flag |= KXG03_DEG_OUT;
CLINEA 0000H 0001H 0292H 0002H 002DH
	cmp	r0,	#00h
	beq	_$L226
	sb	NEAR _kxg03_out_flag.3

;;	else kxg03_out_flag &= ~KXG03_DEG_OUT;
CLINEA 0000H 0001H 0293H 0002H 0027H
	rt
_$L226 :
	rb	NEAR _kxg03_out_flag.3
CBLOCKEND 358 2 660

;;}
CLINEA 0000H 0001H 0294H 0001H 0001H
	rt
CBLOCKEND 358 1 660
CFUNCTIONEND 358


	rseg $$kxg03_standby$kxg03_new
CFUNCTION 359

_kxg03_standby	:
CBLOCK 359 1 663

;;{
CLINEA 0000H 0001H 0297H 0001H 0001H
;;*****************************************
;;	register/stack information
;;*****************************************
	_data$2	set	-1
;;*****************************************

	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
	push	er4
CBLOCK 359 2 663
CRET 0006H
CLOCAL 46H 0001H 0018H 0002H "rc" 02H 00H 00H
CLOCAL 42H 0001H 0001H 0002H "data" 02H 00H 00H

;;	data = 0xEF;
CLINEA 0000H 0001H 029CH 0002H 000DH
	mov	r0,	#0efh
	st	r0,	_data$2[fp]

;;	rc = kxg03.write(KXG03_STDBY,&data,1);
CLINEA 0000H 0000H 029DH 0002H 0027H
	mov	r0,	#01h
	push	r0
	mov	er2,	fp
	add	er2,	#-1
	mov	r0,	#043h
	l	er4,	NEAR _kxg03+06h
	bl	er4
	add	sp,	#2 
	mov	r4,	r0	;; _lrc$0

;;	if(rc) {
CLINEA 0000H 0001H 029EH 0002H 0009H
	cmp	r0,	#00h
	beq	_$L230
CBLOCK 359 3 670

;;		kxg03_err_msg_out(0,rc);
CLINEA 0000H 0001H 029FH 0003H 001AH
	mov	r1,	r0
	mov	r0,	#00h
	bl	_kxg03_err_msg_out
CBLOCKEND 359 3 672

;;	}
CLINEA 0000H 0000H 02A0H 0002H 0002H
_$L230 :

;;	return rc;
CLINEA 0000H 0001H 02A1H 0002H 000BH
	mov	r0,	r4
CBLOCKEND 359 2 674

;;}
CLINEA 0000H 0000H 02A2H 0001H 0001H
	pop	er4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 359 1 674
CFUNCTIONEND 359

	public _kxg03
	public _kalman
	public _kxg03_set_gyro_out
	public _kxg03_set_kalman_out
	public _kxg03_set_deg_out
	public _kxg03_err_msg_out
	public _kxg03_set_acc_out
	extrn code near : _abs
	extrn code near : _millis
	extrn code near : _drv_attachInterrupt
	extrn code near : _fabs
	extrn code near : _atan2
	extrn code near : _drv_pinMode
	extrn code near : _sqrt
	extrn table near : _Wire
	extrn code near : _main

	rseg $$NINITTAB
	db	00h
	db	070h
	db	00h
	db	00h
	db	00h
	db	01h
	db	02h
	db	00h
	db	01h
	db	02h
	db	01h
	db	01h
	db	01h
	db	01h
	db	01h
	db	01h
	db	00h
	db	00h

	rseg $$TABQ_angle$kxg03_new
_Q_angle :
	dw	0126fh
	dw	03a83h

	rseg $$TABQ_bias$kxg03_new
_Q_bias :
	dw	09ba6h
	dw	03b44h

	rseg $$TABR_measure$kxg03_new
_R_measure :
	dw	0c28fh
	dw	03cf5h

	rseg $$TABacc_div$kxg03_new
_acc_div :
	dw	04000h
	dw	02000h
	dw	01000h
	dw	0800h

	rseg $$TABgyro_div$kxg03_new
_gyro_div :
	dw	080h
	dw	040h
	dw	020h
	dw	010h

	rseg $$TABkxg03_err_msg$kxg03_new
_kxg03_err_msg :
	DB	"STDBY", 00H
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	DB	"INT1_L", 00H
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	db	00h
	DB	"INT_MASK1", 00H
	dw	00h
	dw	00h
	dw	00h
	DB	"INT_PIN_CTL", 00H
	dw	00h
	dw	00h
	DB	"INT_PIN1_SEL", 00H
	dw	00h
	db	00h
	DB	"ACCEL_ODR_WAKE", 00H
	db	00h
	DB	"GYRO_ODR_WAKE", 00H
	dw	00h
	DB	"ACCEL_CTL", 00H
	dw	00h
	dw	00h
	dw	00h

	rseg $$TABkxg03$kxg03_new
_kxg03 :
	dw	_kxg03_init
	dw	_kxg03_sync_init
	dw	_kxg03_read
	dw	_kxg03_write
	dw	_kxg03_get_val
	dw	_kxg03_get_gyro
	dw	_kxg03_get_acc
	dw	_kxg03_set_acc_avr
	dw	_kxg03_set_acc_range
	dw	_kxg03_set_gyro_range
	dw	_kxg03_set_gyro_bw
	dw	_kxg03_angle_init
	dw	_kxg03_get_angle
	dw	_kxg03_set_kalman_out
	dw	_kxg03_set_acc_out
	dw	_kxg03_set_gyro_out
	dw	_kxg03_set_deg_out
	dw	_kxg03_standby

	rseg $$TABkalman$kxg03_new
_kalman :
	dw	_kalman_init
	dw	_kalman_set
	dw	_kalman_cal

	rseg $$NINITVAR
_kxg03_acc_range :
	ds	01h
_kxg03_acc_avr :
	ds	01h
_kxg03_gyro_range :
	ds	01h
_kxg03_gyro_bw :
	ds	01h
_g :
	ds	03h
_a :
	ds	03h
_gf :
	ds	03h
_af :
	ds	03h
_angle_mode :
	ds	01h
_kxg03_out_flag :
	ds	01h

	rseg $$NVARkxg03_new
_k :
	ds	048h
_raw :
	ds	018h
_tmp :
	ds	018h
_slave_addr :
	ds	01h
	extrn code : __faddu8sw
	extrn code : __fsubu8sw
	extrn code : __fcmpu8sw
	extrn code : __fmulu8sw
	extrn code : __fdivu8sw
	extrn code : __fildu8sw
	extrn code : __ftodu8sw
	extrn code : __dmulu8sw
	extrn code : __dtofu8sw
	extrn code : __fuldu8sw

	end
